/* Generated by JSIL v0.8.2 build 31050. See http://jsil.org/ for more information. */ 
'use strict';
var $asm0B = JSIL.DeclareAssembly("Fusee.Serialization, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null");

/* struct SceneHeaderTest */ 

(function SceneHeaderTest$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "SceneHeaderTest", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Field({Static:false, Public:true }, "Version", $.Int32);

    $.Field({Static:false, Public:true }, "Generator", $.String);

    $.Field({Static:false, Public:true }, "CreatedBy", $.String);

    $.Field({Static:false, Public:true }, "CreationDate", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.Serialization");
/* class Fusee.Serialization.SceneComponentContainer */ 

(function SceneComponentContainer$Members () {
  var $, $thisType;

  function SceneComponentContainer__ctor () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Serialization.SceneComponentContainer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      SceneComponentContainer__ctor
    );

    $.Field({Static:false, Public:true }, "Name", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.AnimationComponent */ 

(function AnimationComponent$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.SceneComponentContainer)) ();
  };


  function AnimationComponent__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.SceneComponentContainer"), 
      Name: "Fusee.Serialization.AnimationComponent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      AnimationComponent__ctor
    );

    $.Field({Static:false, Public:true }, "AnimationTracks", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("Fusee.Serialization.AnimationTrackContainer")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.AnimationKeyContainerBase */ 

(function AnimationKeyContainerBase$Members () {
  var $, $thisType;

  function AnimationKeyContainerBase__ctor () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Serialization.AnimationKeyContainerBase", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      AnimationKeyContainerBase__ctor
    );

    $.Field({Static:false, Public:true }, "Time", $.Single);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.AnimationKeyContainerDouble */ 

(function AnimationKeyContainerDouble$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.AnimationKeyContainerBase)) ();
  };


  function AnimationKeyContainerDouble__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.AnimationKeyContainerBase"), 
      Name: "Fusee.Serialization.AnimationKeyContainerDouble", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      AnimationKeyContainerDouble__ctor
    );

    $.Field({Static:false, Public:true }, "Value", $.Double);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.AnimationKeyContainerInt */ 

(function AnimationKeyContainerInt$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.AnimationKeyContainerBase)) ();
  };


  function AnimationKeyContainerInt__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.AnimationKeyContainerBase"), 
      Name: "Fusee.Serialization.AnimationKeyContainerInt", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      AnimationKeyContainerInt__ctor
    );

    $.Field({Static:false, Public:true }, "Value", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.AnimationKeyContainerFloat */ 

(function AnimationKeyContainerFloat$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.AnimationKeyContainerBase)) ();
  };


  function AnimationKeyContainerFloat__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.AnimationKeyContainerBase"), 
      Name: "Fusee.Serialization.AnimationKeyContainerFloat", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      AnimationKeyContainerFloat__ctor
    );

    $.Field({Static:false, Public:true }, "Value", $.Single);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.AnimationKeyContainerFloat2 */ 

(function AnimationKeyContainerFloat2$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.AnimationKeyContainerBase)) ();
  };


  function AnimationKeyContainerFloat2__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.AnimationKeyContainerBase"), 
      Name: "Fusee.Serialization.AnimationKeyContainerFloat2", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      AnimationKeyContainerFloat2__ctor
    );

    $.Field({Static:false, Public:true }, "Value", $asm0A.TypeRef("Fusee.Math.Core.float2"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.AnimationKeyContainerFloat3 */ 

(function AnimationKeyContainerFloat3$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.AnimationKeyContainerBase)) ();
  };


  function AnimationKeyContainerFloat3__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.AnimationKeyContainerBase"), 
      Name: "Fusee.Serialization.AnimationKeyContainerFloat3", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      AnimationKeyContainerFloat3__ctor
    );

    $.Field({Static:false, Public:true }, "Value", $asm0A.TypeRef("Fusee.Math.Core.float3"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.AnimationKeyContainerFloat4 */ 

(function AnimationKeyContainerFloat4$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.AnimationKeyContainerBase)) ();
  };


  function AnimationKeyContainerFloat4__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.AnimationKeyContainerBase"), 
      Name: "Fusee.Serialization.AnimationKeyContainerFloat4", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      AnimationKeyContainerFloat4__ctor
    );

    $.Field({Static:false, Public:true }, "Value", $asm0A.TypeRef("Fusee.Math.Core.float4"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* enum Fusee.Serialization.LerpType */ 

JSIL.MakeEnum(
  {
    FullName: "Fusee.Serialization.LerpType", 
    BaseType: $asm0F.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Lerp: 0, 
    Slerp: 1, 
  }
);

/* enum Fusee.Serialization.TypeId */ 

JSIL.MakeEnum(
  {
    FullName: "Fusee.Serialization.TypeId", 
    BaseType: $asm0F.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Double: 0, 
    Int: 1, 
    Float: 2, 
    Float2: 3, 
    Float3: 4, 
    Float4: 5, 
    Bool: 6, 
  }
);

/* class Fusee.Serialization.AnimationTrackContainer */ 

(function AnimationTrackContainer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.LerpType)) ();
  };


  function AnimationTrackContainer__ctor () {
    this.LerpType = $T00().Lerp;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Serialization.AnimationTrackContainer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      AnimationTrackContainer__ctor
    );

    $.Field({Static:false, Public:true }, "SceneComponent", $asm0B.TypeRef("Fusee.Serialization.SceneComponentContainer"));

    $.Field({Static:false, Public:true }, "Property", $.String);

    $.Field({Static:false, Public:true }, "TypeId", $asm0B.TypeRef("Fusee.Serialization.TypeId"));

    $.Field({Static:false, Public:true }, "LerpType", $asm0B.TypeRef("Fusee.Serialization.LerpType"));

    $.Field({Static:false, Public:true }, "KeyFrames", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("Fusee.Serialization.AnimationKeyContainerBase")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.BoneComponent */ 

(function BoneComponent$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.SceneComponentContainer)) ();
  };


  function BoneComponent__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.SceneComponentContainer"), 
      Name: "Fusee.Serialization.BoneComponent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      BoneComponent__ctor
    );

    $.Field({Static:false, Public:true }, "Name", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.CanvasTransformComponent */ 

(function CanvasTransformComponent$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.SceneComponentContainer)) ();
  };


  function CanvasTransformComponent__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.SceneComponentContainer"), 
      Name: "Fusee.Serialization.CanvasTransformComponent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      CanvasTransformComponent__ctor
    );

    $.Field({Static:false, Public:true }, "CanvasRenderMode", $asm0B.TypeRef("Fusee.Serialization.CanvasRenderMode"));

    $.Field({Static:false, Public:true }, "Size", $asm0A.TypeRef("Fusee.Math.Core.MinMaxRect"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* enum Fusee.Serialization.CanvasRenderMode */ 

JSIL.MakeEnum(
  {
    FullName: "Fusee.Serialization.CanvasRenderMode", 
    BaseType: $asm0F.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    WORLD: 0, 
    SCREEN: 1, 
  }
);

/* enum Fusee.Serialization.LightType */ 

JSIL.MakeEnum(
  {
    FullName: "Fusee.Serialization.LightType", 
    BaseType: $asm0F.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Point: 0, 
    Parallel: 1, 
    Spot: 2, 
    Legacy: 3, 
  }
);

/* class Fusee.Serialization.LightComponent */ 

(function LightComponent$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.SceneComponentContainer)) ();
  };


  function LightComponent__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.SceneComponentContainer"), 
      Name: "Fusee.Serialization.LightComponent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      LightComponent__ctor
    );

    $.Field({Static:false, Public:true }, "Active", $.Boolean);

    $.Field({Static:false, Public:true }, "Color", $asm0A.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "Position", $asm0A.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "Attenuation", $.Single);

    $.Field({Static:false, Public:true }, "AmbientCoefficient", $.Single);

    $.Field({Static:false, Public:true }, "Type", $asm0B.TypeRef("Fusee.Serialization.LightType"));

    $.Field({Static:false, Public:true }, "ConeAngle", $.Single);

    $.Field({Static:false, Public:true }, "ConeDirection", $asm0A.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "PositionWorldSpace", $asm0A.TypeRef("Fusee.Math.Core.float3"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.MatChannelContainer */ 

(function MatChannelContainer$Members () {
  var $, $thisType;

  function MatChannelContainer__ctor () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Serialization.MatChannelContainer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      MatChannelContainer__ctor
    );

    $.Field({Static:false, Public:true }, "Color", $asm0A.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "Texture", $.String);

    $.Field({Static:false, Public:true }, "Mix", $.Single);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.SpecularChannelContainer */ 

(function SpecularChannelContainer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.MatChannelContainer)) ();
  };


  function SpecularChannelContainer__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.MatChannelContainer"), 
      Name: "Fusee.Serialization.SpecularChannelContainer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      SpecularChannelContainer__ctor
    );

    $.Field({Static:false, Public:true }, "Shininess", $.Single);

    $.Field({Static:false, Public:true }, "Intensity", $.Single);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.BumpChannelContainer */ 

(function BumpChannelContainer$Members () {
  var $, $thisType;

  function BumpChannelContainer__ctor () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Serialization.BumpChannelContainer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      BumpChannelContainer__ctor
    );

    $.Field({Static:false, Public:true }, "Texture", $.String);

    $.Field({Static:false, Public:true }, "Intensity", $.Single);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.MaterialComponent */ 

(function MaterialComponent$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.SceneComponentContainer)) ();
  };


  function MaterialComponent__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  function MaterialComponent_get_HasBump () {
    return (this.Bump !== null);
  }; 

  function MaterialComponent_get_HasDiffuse () {
    return (this.Diffuse !== null);
  }; 

  function MaterialComponent_get_HasEmissive () {
    return (this.Emissive !== null);
  }; 

  function MaterialComponent_get_HasSpecular () {
    return (this.Specular !== null);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.SceneComponentContainer"), 
      Name: "Fusee.Serialization.MaterialComponent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      MaterialComponent__ctor
    );

    $.Method({Static:false, Public:true }, "get_HasBump", 
      JSIL.MethodSignature.Return($.Boolean), 
      MaterialComponent_get_HasBump
    );

    $.Method({Static:false, Public:true }, "get_HasDiffuse", 
      JSIL.MethodSignature.Return($.Boolean), 
      MaterialComponent_get_HasDiffuse
    );

    $.Method({Static:false, Public:true }, "get_HasEmissive", 
      JSIL.MethodSignature.Return($.Boolean), 
      MaterialComponent_get_HasEmissive
    );

    $.Method({Static:false, Public:true }, "get_HasSpecular", 
      JSIL.MethodSignature.Return($.Boolean), 
      MaterialComponent_get_HasSpecular
    );

    $.Field({Static:false, Public:true }, "Diffuse", $asm0B.TypeRef("Fusee.Serialization.MatChannelContainer"));

    $.Field({Static:false, Public:true }, "Specular", $asm0B.TypeRef("Fusee.Serialization.SpecularChannelContainer"));

    $.Field({Static:false, Public:true }, "Emissive", $asm0B.TypeRef("Fusee.Serialization.MatChannelContainer"));

    $.Field({Static:false, Public:true }, "Bump", $asm0B.TypeRef("Fusee.Serialization.BumpChannelContainer"));

    $.Property({Static:false, Public:true }, "HasDiffuse", $.Boolean);

    $.Property({Static:false, Public:true }, "HasSpecular", $.Boolean);

    $.Property({Static:false, Public:true }, "HasEmissive", $.Boolean);

    $.Property({Static:false, Public:true }, "HasBump", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.MaterialLightComponent */ 

(function MaterialLightComponent$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.MaterialComponent)) ();
  };


  function MaterialLightComponent__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.MaterialComponent"), 
      Name: "Fusee.Serialization.MaterialLightComponent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      MaterialLightComponent__ctor
    );

    $.Field({Static:false, Public:true }, "ApplyLightString", $.String);

    $.Field({Static:false, Public:true }, "FragmentShaderString", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.MaterialPBRComponent */ 

(function MaterialPBRComponent$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.MaterialComponent)) ();
  };


  function MaterialPBRComponent__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.MaterialComponent"), 
      Name: "Fusee.Serialization.MaterialPBRComponent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      MaterialPBRComponent__ctor
    );

    $.Field({Static:false, Public:true }, "RoughnessValue", $.Single);

    $.Field({Static:false, Public:true }, "FresnelReflectance", $.Single);

    $.Field({Static:false, Public:true }, "DiffuseFraction", $.Single);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.Mesh */ 

(function Mesh$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.Suid)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.Fusee.Serialization.SceneComponentContainer)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.EventHandler$b1.Of($asm0B.Fusee.Serialization.MeshDataEventArgs))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Delegate)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Threading.Interlocked)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0B.Fusee.Serialization.MeshDataEventArgs)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0B.Fusee.Serialization.MeshChangedEnum)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0F.System.Object)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize(System.Array.Of($asm0A.Fusee.Math.Core.float3))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.System.UInt32)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize(System.Array.Of($asm0A.Fusee.Math.Core.float4))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize(System.Array.Of($asm0F.System.UInt32))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize(System.Array.Of($asm0F.System.UInt16))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize(System.Array.Of($asm0A.Fusee.Math.Core.float2))) ();
  };


  function Mesh__ctor () {
    this.SessionUniqueIdentifier = $T00().GenerateSuid();
    $T01().prototype._ctor.call(this);
  }; 

  function Mesh_add_MeshChanged (value) {
    var eventHandler = this.MeshChanged;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T03().Combine(eventHandler2, value);
      eventHandler = $T04().CompareExchange$b1($T02())(/* ref */ new JSIL.MemberReference(this, "MeshChanged"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function Mesh_Dispose () {
    var del = this.MeshChanged;
    var flag = del !== null;
    if (flag) {
      del(this, new ($T06())(this, $T07().Disposed));
    }
  }; 

  function Mesh_Finalize () {
    try {
      this.Dispose();
    } finally {
      $T08().prototype.Finalize.call(this);
    }
  }; 

  function Mesh_get_BiTangents () {
    return this._biTangents;
  }; 

  function Mesh_get_BiTangentsSet () {
    return ((this._biTangents !== null) && ((this._biTangents.length >>> 0) > (0 >>> 0)));
  }; 

  function Mesh_get_BoneIndices () {
    return this._boneIndices;
  }; 

  function Mesh_get_BoneIndicesSet () {
    return ((this._boneIndices !== null) && ((this._boneIndices.length >>> 0) > (0 >>> 0)));
  }; 

  function Mesh_get_BoneWeights () {
    return this._boneWeights;
  }; 

  function Mesh_get_BoneWeightsSet () {
    return ((this._boneWeights !== null) && ((this._boneWeights.length >>> 0) > (0 >>> 0)));
  }; 

  function Mesh_get_Colors () {
    return this._colors;
  }; 

  function Mesh_get_ColorsSet () {
    return ((this._colors !== null) && ((this._colors.length >>> 0) > (0 >>> 0)));
  }; 

  function Mesh_get_Normals () {
    return this._normals;
  }; 

  function Mesh_get_NormalsSet () {
    return ((this._normals !== null) && ((this._normals.length >>> 0) > (0 >>> 0)));
  }; 

  function Mesh_get_Tangents () {
    return this._tangents;
  }; 

  function Mesh_get_TangentsSet () {
    return ((this._tangents !== null) && ((this._tangents.length >>> 0) > (0 >>> 0)));
  }; 

  function Mesh_get_Triangles () {
    return this._triangles;
  }; 

  function Mesh_get_TrianglesSet () {
    return ((this._triangles !== null) && ((this._triangles.length >>> 0) > (0 >>> 0)));
  }; 

  function Mesh_get_UVs () {
    return this._uvs;
  }; 

  function Mesh_get_UVsSet () {
    return ((this._uvs !== null) && ((this._uvs.length >>> 0) > (0 >>> 0)));
  }; 

  function Mesh_get_Vertices () {
    return this._vertices;
  }; 

  function Mesh_get_VerticesSet () {
    return ((this._vertices !== null) && ((this._vertices.length >>> 0) > (0 >>> 0)));
  }; 

  function Mesh_remove_MeshChanged (value) {
    var eventHandler = this.MeshChanged;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T03().Remove(eventHandler2, value);
      eventHandler = $T04().CompareExchange$b1($T02())(/* ref */ new JSIL.MemberReference(this, "MeshChanged"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function Mesh_set_BiTangents (value) {
    this._biTangents = value;
    var del = this.MeshChanged;
    var flag = del !== null;
    if (flag) {
      del(this, new ($T06())(this, $T07().BiTangents));
    }
  }; 

  function Mesh_set_BoneIndices (value) {
    this._boneIndices = value;
    var del = this.MeshChanged;
    var flag = del !== null;
    if (flag) {
      del(this, new ($T06())(this, $T07().BoneIndices));
    }
  }; 

  function Mesh_set_BoneWeights (value) {
    this._boneWeights = value;
    var del = this.MeshChanged;
    var flag = del !== null;
    if (flag) {
      del(this, new ($T06())(this, $T07().BoneWeights));
    }
  }; 

  function Mesh_set_Colors (value) {
    this._colors = value;
    var del = this.MeshChanged;
    var flag = del !== null;
    if (flag) {
      del(this, new ($T06())(this, $T07().Colors));
    }
  }; 

  function Mesh_set_Normals (value) {
    this._normals = value;
    var del = this.MeshChanged;
    var flag = del !== null;
    if (flag) {
      del(this, new ($T06())(this, $T07().Normals));
    }
  }; 

  function Mesh_set_Tangents (value) {
    this._tangents = value;
    var del = this.MeshChanged;
    var flag = del !== null;
    if (flag) {
      del(this, new ($T06())(this, $T07().Tangents));
    }
  }; 

  function Mesh_set_Triangles (value) {
    this._triangles = value;
    var del = this.MeshChanged;
    var flag = del !== null;
    if (flag) {
      del(this, new ($T06())(this, $T07().Triangles));
    }
  }; 

  function Mesh_set_UVs (value) {
    this._uvs = value;
    var del = this.MeshChanged;
    var flag = del !== null;
    if (flag) {
      del(this, new ($T06())(this, $T07().Uvs));
    }
  }; 

  function Mesh_set_Vertices (value) {
    this._vertices = value;
    var del = this.MeshChanged;
    var flag = del !== null;
    if (flag) {
      del(this, new ($T06())(this, $T07().Vertices));
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.SceneComponentContainer"), 
      Name: "Fusee.Serialization.Mesh", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Mesh__ctor
    );

    $.Method({Static:false, Public:true }, "add_MeshChanged", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm0B.TypeRef("Fusee.Serialization.MeshDataEventArgs")])), 
      Mesh_add_MeshChanged
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void, 
      Mesh_Dispose
    );

    $.Method({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void, 
      Mesh_Finalize
    )
      .Overrides($asm0F.TypeRef("System.Object"), "Finalize");

    $.Method({Static:false, Public:true }, "get_BiTangents", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float3")])), 
      Mesh_get_BiTangents
    );

    $.Method({Static:false, Public:true }, "get_BiTangentsSet", 
      JSIL.MethodSignature.Return($.Boolean), 
      Mesh_get_BiTangentsSet
    );

    $.Method({Static:false, Public:true }, "get_BoneIndices", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float4")])), 
      Mesh_get_BoneIndices
    );

    $.Method({Static:false, Public:true }, "get_BoneIndicesSet", 
      JSIL.MethodSignature.Return($.Boolean), 
      Mesh_get_BoneIndicesSet
    );

    $.Method({Static:false, Public:true }, "get_BoneWeights", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float4")])), 
      Mesh_get_BoneWeights
    );

    $.Method({Static:false, Public:true }, "get_BoneWeightsSet", 
      JSIL.MethodSignature.Return($.Boolean), 
      Mesh_get_BoneWeightsSet
    );

    $.Method({Static:false, Public:true }, "get_Colors", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.UInt32])), 
      Mesh_get_Colors
    );

    $.Method({Static:false, Public:true }, "get_ColorsSet", 
      JSIL.MethodSignature.Return($.Boolean), 
      Mesh_get_ColorsSet
    );

    $.Method({Static:false, Public:true }, "get_Normals", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float3")])), 
      Mesh_get_Normals
    );

    $.Method({Static:false, Public:true }, "get_NormalsSet", 
      JSIL.MethodSignature.Return($.Boolean), 
      Mesh_get_NormalsSet
    );

    $.Method({Static:false, Public:true }, "get_Tangents", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float4")])), 
      Mesh_get_Tangents
    );

    $.Method({Static:false, Public:true }, "get_TangentsSet", 
      JSIL.MethodSignature.Return($.Boolean), 
      Mesh_get_TangentsSet
    );

    $.Method({Static:false, Public:true }, "get_Triangles", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.UInt16])), 
      Mesh_get_Triangles
    );

    $.Method({Static:false, Public:true }, "get_TrianglesSet", 
      JSIL.MethodSignature.Return($.Boolean), 
      Mesh_get_TrianglesSet
    );

    $.Method({Static:false, Public:true }, "get_UVs", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float2")])), 
      Mesh_get_UVs
    );

    $.Method({Static:false, Public:true }, "get_UVsSet", 
      JSIL.MethodSignature.Return($.Boolean), 
      Mesh_get_UVsSet
    );

    $.Method({Static:false, Public:true }, "get_Vertices", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float3")])), 
      Mesh_get_Vertices
    );

    $.Method({Static:false, Public:true }, "get_VerticesSet", 
      JSIL.MethodSignature.Return($.Boolean), 
      Mesh_get_VerticesSet
    );

    $.Method({Static:false, Public:true }, "remove_MeshChanged", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm0B.TypeRef("Fusee.Serialization.MeshDataEventArgs")])), 
      Mesh_remove_MeshChanged
    );

    $.Method({Static:false, Public:true }, "set_BiTangents", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float3")])), 
      Mesh_set_BiTangents
    );

    $.Method({Static:false, Public:true }, "set_BoneIndices", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float4")])), 
      Mesh_set_BoneIndices
    );

    $.Method({Static:false, Public:true }, "set_BoneWeights", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float4")])), 
      Mesh_set_BoneWeights
    );

    $.Method({Static:false, Public:true }, "set_Colors", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.UInt32])), 
      Mesh_set_Colors
    );

    $.Method({Static:false, Public:true }, "set_Normals", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float3")])), 
      Mesh_set_Normals
    );

    $.Method({Static:false, Public:true }, "set_Tangents", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float4")])), 
      Mesh_set_Tangents
    );

    $.Method({Static:false, Public:true }, "set_Triangles", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.UInt16])), 
      Mesh_set_Triangles
    );

    $.Method({Static:false, Public:true }, "set_UVs", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float2")])), 
      Mesh_set_UVs
    );

    $.Method({Static:false, Public:true }, "set_Vertices", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float3")])), 
      Mesh_set_Vertices
    );

    $.Field({Static:false, Public:false}, "MeshChanged", $asm0F.TypeRef("System.EventHandler`1", [$asm0B.TypeRef("Fusee.Serialization.MeshDataEventArgs")]));

    $.Field({Static:false, Public:true , ReadOnly:true }, "SessionUniqueIdentifier", $asm0B.TypeRef("Fusee.Serialization.Suid"));

    $.Field({Static:false, Public:false}, "_vertices", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float3")]));

    $.Field({Static:false, Public:false}, "_biTangents", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float3")]));

    $.Field({Static:false, Public:false}, "_tangents", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float4")]));

    $.Field({Static:false, Public:false}, "_colors", $jsilcore.TypeRef("System.Array", [$.UInt32]));

    $.Field({Static:false, Public:false}, "_normals", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float3")]));

    $.Field({Static:false, Public:false}, "_uvs", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float2")]));

    $.Field({Static:false, Public:false}, "_boneWeights", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float4")]));

    $.Field({Static:false, Public:false}, "_boneIndices", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float4")]));

    $.Field({Static:false, Public:false}, "_triangles", $jsilcore.TypeRef("System.Array", [$.UInt16]));

    $.Field({Static:false, Public:true }, "BoundingBox", $asm0A.TypeRef("Fusee.Math.Core.AABBf"));

    $.Property({Static:false, Public:true }, "Vertices", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float3")]));

    $.Property({Static:false, Public:true }, "VerticesSet", $.Boolean);

    $.Property({Static:false, Public:true }, "TangentsSet", $.Boolean);

    $.Property({Static:false, Public:true }, "BiTangentsSet", $.Boolean);

    $.Property({Static:false, Public:true }, "Colors", $jsilcore.TypeRef("System.Array", [$.UInt32]));

    $.Property({Static:false, Public:true }, "ColorsSet", $.Boolean);

    $.Property({Static:false, Public:true }, "Normals", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float3")]));

    $.Property({Static:false, Public:true }, "NormalsSet", $.Boolean);

    $.Property({Static:false, Public:true }, "UVs", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float2")]));

    $.Property({Static:false, Public:true }, "UVsSet", $.Boolean);

    $.Property({Static:false, Public:true }, "BoneWeights", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float4")]));

    $.Property({Static:false, Public:true }, "BoneWeightsSet", $.Boolean);

    $.Property({Static:false, Public:true }, "BoneIndices", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float4")]));

    $.Property({Static:false, Public:true }, "BoneIndicesSet", $.Boolean);

    $.Property({Static:false, Public:true }, "Triangles", $jsilcore.TypeRef("System.Array", [$.UInt16]));

    $.Property({Static:false, Public:true }, "TrianglesSet", $.Boolean);

    $.Property({Static:false, Public:true }, "Tangents", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float4")]));

    $.Property({Static:false, Public:true }, "BiTangents", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float3")]));

    $.Event({Static:false, Public:true }, "MeshChanged", $asm0F.TypeRef("System.EventHandler`1", [$asm0B.TypeRef("Fusee.Serialization.MeshDataEventArgs")]));

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* enum Fusee.Serialization.MeshChangedEnum */ 

JSIL.MakeEnum(
  {
    FullName: "Fusee.Serialization.MeshChangedEnum", 
    BaseType: $asm0F.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Disposed: 0, 
    Vertices: 1, 
    Triangles: 2, 
    Colors: 3, 
    Normals: 4, 
    Uvs: 5, 
    BoneWeights: 6, 
    BoneIndices: 7, 
    Tangents: 8, 
    BiTangents: 9, 
  }
);

/* class Fusee.Serialization.MeshDataEventArgs */ 

(function MeshDataEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.Mesh)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.Fusee.Serialization.MeshChangedEnum)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.EventArgs)) ();
  };


  function MeshDataEventArgs__ctor (mesh, meshChangedEnum) {
    $T02().prototype._ctor.call(this);
    this._mesh = mesh;
    this._meshChangedEnum = meshChangedEnum;
  }; 

  function MeshDataEventArgs_get_ChangedEnum () {
    return this._meshChangedEnum;
  }; 

  function MeshDataEventArgs_get_Mesh () {
    return this._mesh;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.EventArgs"), 
      Name: "Fusee.Serialization.MeshDataEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("Fusee.Serialization.Mesh"), $asm0B.TypeRef("Fusee.Serialization.MeshChangedEnum")]), 
      MeshDataEventArgs__ctor
    );

    $.Method({Static:false, Public:true }, "get_ChangedEnum", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("Fusee.Serialization.MeshChangedEnum")), 
      MeshDataEventArgs_get_ChangedEnum
    );

    $.Method({Static:false, Public:true }, "get_Mesh", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("Fusee.Serialization.Mesh")), 
      MeshDataEventArgs_get_Mesh
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_mesh", $asm0B.TypeRef("Fusee.Serialization.Mesh"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_meshChangedEnum", $asm0B.TypeRef("Fusee.Serialization.MeshChangedEnum"));

    $.Property({Static:false, Public:true }, "Mesh", $asm0B.TypeRef("Fusee.Serialization.Mesh"));

    $.Property({Static:false, Public:true }, "ChangedEnum", $asm0B.TypeRef("Fusee.Serialization.MeshChangedEnum"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Serialization.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("Fusee.Serialization.NamespaceDoc", false, [], function ($ib) {
    $ = $ib;


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Serialization.RectTransformComponent */ 

(function RectTransformComponent$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.SceneComponentContainer)) ();
  };


  function RectTransformComponent__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.SceneComponentContainer"), 
      Name: "Fusee.Serialization.RectTransformComponent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      RectTransformComponent__ctor
    );

    $.Field({Static:false, Public:true }, "Anchors", $asm0A.TypeRef("Fusee.Math.Core.MinMaxRect"));

    $.Field({Static:false, Public:true }, "Offsets", $asm0A.TypeRef("Fusee.Math.Core.MinMaxRect"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* struct Fusee.Serialization.SceneHeader */ 

(function SceneHeader$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "Fusee.Serialization.SceneHeader", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Field({Static:false, Public:true }, "Version", $.Int32);

    $.Field({Static:false, Public:true }, "Generator", $.String);

    $.Field({Static:false, Public:true }, "CreatedBy", $.String);

    $.Field({Static:false, Public:true }, "CreationDate", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.SceneContainer */ 

(function SceneContainer$Members () {
  var $, $thisType;

  function SceneContainer__ctor () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Serialization.SceneContainer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      SceneContainer__ctor
    );

    $.Field({Static:false, Public:true }, "Header", $asm0B.TypeRef("Fusee.Serialization.SceneHeader"));

    $.Field({Static:false, Public:true }, "Children", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.SceneNodeContainer */ 

(function SceneNodeContainer$Members () {
  var $, $thisType;

  function SceneNodeContainer__ctor () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Serialization.SceneNodeContainer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      SceneNodeContainer__ctor
    );

    $.Field({Static:false, Public:true }, "Name", $.String);

    $.Field({Static:false, Public:true }, "Components", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("Fusee.Serialization.SceneComponentContainer")]));

    $.Field({Static:false, Public:true }, "Children", $asm0F.TypeRef("System.Collections.Generic.List`1", [$.Type]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.SimpleType */ 

(function SimpleType$Members () {
  var $, $thisType;

  function SimpleType__ctor () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Serialization.SimpleType", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      SimpleType__ctor
    );

    $.Field({Static:false, Public:true }, "Header", $asm0B.TypeRef("SceneHeaderTest"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.ShaderComponent */ 

(function ShaderComponent$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.SceneComponentContainer)) ();
  };


  function ShaderComponent__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.SceneComponentContainer"), 
      Name: "Fusee.Serialization.ShaderComponent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ShaderComponent__ctor
    );

    $.Field({Static:false, Public:true }, "EffectPasses", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("Fusee.Serialization.RenderPass")]));

    $.Field({Static:false, Public:true }, "EffectParameter", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("Fusee.Serialization.TypeContainer")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.RenderPass */ 

(function RenderPass$Members () {
  var $, $thisType;

  function RenderPass__ctor () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Serialization.RenderPass", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      RenderPass__ctor
    );

    $.Field({Static:false, Public:true }, "VS", $.String);

    $.Field({Static:false, Public:true }, "PS", $.String);

    $.Field({Static:false, Public:true }, "RenderStateContainer", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.UInt32, $.UInt32]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* struct Fusee.Serialization.Suid */ 

(function Suid$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.UInt64)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Threading.Monitor)) ();
  };


  function Suid__ctor (id) {
    this._id = id;
  }; 

  function Suid_GenerateSuid () {
    var lockObject = $thisType.LockObject;
    var flag = new JSIL.BoxedVariable(false);
    try {
      $T03().Enter(lockObject, /* ref */ flag);
      $thisType._idCounter = $T01().op_Addition($thisType._idCounter, $T01().Create(1, 0, 0));
    } finally {
      if (flag.get()) {
        $T03().Exit(lockObject);
      }
    }
    return new $thisType($thisType._idCounter);
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "Fusee.Serialization.Suid", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 1, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.UInt64), 
      Suid__ctor
    );

    $.Method({Static:true , Public:true }, "GenerateSuid", 
      JSIL.MethodSignature.Return($.Type), 
      Suid_GenerateSuid
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "LockObject", $.Object);

    $.Field({Static:true , Public:false}, "_idCounter", $.UInt64, function ($pi) {
        return ($asm0F.System.Int64.FromNumber(0)).ToUInt64();
      });

    $.Field({Static:false, Public:false, ReadOnly:true }, "_id", $.UInt64);

    $.Field({Static:true , Public:true , ReadOnly:true }, "Empty", $.Type);


    function Suid__cctor () {
      $thisType.Empty = new $thisType();
      $thisType.LockObject = new ($T00())();
      $thisType._idCounter = $T01().Create(0, 0, 0);
      $thisType.Empty = new $thisType($T01().Create(0, 0, 0));
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Suid__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Serialization.TypeContainer */ 

(function TypeContainer$Members () {
  var $, $thisType;

  function TypeContainer__ctor () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Serialization.TypeContainer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TypeContainer__ctor
    );

    $.Field({Static:false, Public:true }, "Name", $.String);

    $.Field({Static:false, Public:true }, "TypeId", $asm0B.TypeRef("Fusee.Serialization.TypeId"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.TypeContainerDouble */ 

(function TypeContainerDouble$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.TypeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.Fusee.Serialization.TypeId)) ();
  };


  function TypeContainerDouble__ctor () {
    $T00().prototype._ctor.call(this);
    this.TypeId = $T01().Double;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.TypeContainer"), 
      Name: "Fusee.Serialization.TypeContainerDouble", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TypeContainerDouble__ctor
    );

    $.Field({Static:false, Public:true }, "Value", $.Double);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.TypeContainerInt */ 

(function TypeContainerInt$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.TypeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.Fusee.Serialization.TypeId)) ();
  };


  function TypeContainerInt__ctor () {
    $T00().prototype._ctor.call(this);
    this.TypeId = $T01().Int;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.TypeContainer"), 
      Name: "Fusee.Serialization.TypeContainerInt", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TypeContainerInt__ctor
    );

    $.Field({Static:false, Public:true }, "Value", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.TypeContainerFloat */ 

(function TypeContainerFloat$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.TypeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.Fusee.Serialization.TypeId)) ();
  };


  function TypeContainerFloat__ctor () {
    $T00().prototype._ctor.call(this);
    this.TypeId = $T01().Float;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.TypeContainer"), 
      Name: "Fusee.Serialization.TypeContainerFloat", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TypeContainerFloat__ctor
    );

    $.Field({Static:false, Public:true }, "Value", $.Single);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.TypeContainerFloat2 */ 

(function TypeContainerFloat2$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.TypeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.Fusee.Serialization.TypeId)) ();
  };


  function TypeContainerFloat2__ctor () {
    $T00().prototype._ctor.call(this);
    this.TypeId = $T01().Float2;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.TypeContainer"), 
      Name: "Fusee.Serialization.TypeContainerFloat2", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TypeContainerFloat2__ctor
    );

    $.Field({Static:false, Public:true }, "Value", $asm0A.TypeRef("Fusee.Math.Core.float2"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.TypeContainerFloat3 */ 

(function TypeContainerFloat3$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.TypeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.Fusee.Serialization.TypeId)) ();
  };


  function TypeContainerFloat3__ctor () {
    $T00().prototype._ctor.call(this);
    this.TypeId = $T01().Float3;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.TypeContainer"), 
      Name: "Fusee.Serialization.TypeContainerFloat3", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TypeContainerFloat3__ctor
    );

    $.Field({Static:false, Public:true }, "Value", $asm0A.TypeRef("Fusee.Math.Core.float3"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.TypeContainerFloat4 */ 

(function TypeContainerFloat4$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.TypeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.Fusee.Serialization.TypeId)) ();
  };


  function TypeContainerFloat4__ctor () {
    $T00().prototype._ctor.call(this);
    this.TypeId = $T01().Float4;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.TypeContainer"), 
      Name: "Fusee.Serialization.TypeContainerFloat4", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TypeContainerFloat4__ctor
    );

    $.Field({Static:false, Public:true }, "Value", $asm0A.TypeRef("Fusee.Math.Core.float4"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.TypeContainerBool */ 

(function TypeContainerBool$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.TypeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.Fusee.Serialization.TypeId)) ();
  };


  function TypeContainerBool__ctor () {
    $T00().prototype._ctor.call(this);
    this.TypeId = $T01().Bool;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.TypeContainer"), 
      Name: "Fusee.Serialization.TypeContainerBool", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TypeContainerBool__ctor
    );

    $.Field({Static:false, Public:true }, "Value", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.WeightComponent */ 

(function WeightComponent$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.SceneComponentContainer)) ();
  };


  function WeightComponent__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.SceneComponentContainer"), 
      Name: "Fusee.Serialization.WeightComponent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      WeightComponent__ctor
    );

    $.Field({Static:false, Public:true }, "WeightMap", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("Fusee.Serialization.VertexWeightList")]));

    $.Field({Static:false, Public:true }, "Joints", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:false, Public:true }, "BindingMatrices", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0A.TypeRef("Fusee.Math.Core.float4x4")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* struct Fusee.Serialization.VertexWeight */ 

(function VertexWeight$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "Fusee.Serialization.VertexWeight", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Field({Static:false, Public:true }, "JointIndex", $.Int32);

    $.Field({Static:false, Public:true }, "Weight", $.Single);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.VertexWeightList */ 

(function VertexWeightList$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm0B.Fusee.Serialization.VertexWeight))) ();
  };


  function VertexWeightList__ctor () {
  }; 

  function VertexWeightList_get_VertexWeights () {
    return this.VertexWeightList$VertexWeights$value;
  }; 

  function VertexWeightList_set_VertexWeights (value) {
    this.VertexWeightList$VertexWeights$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Serialization.VertexWeightList", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      VertexWeightList__ctor
    );

    $.Method({Static:false, Public:true }, "get_VertexWeights", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("Fusee.Serialization.VertexWeight")])), 
      VertexWeightList_get_VertexWeights
    );

    $.Method({Static:false, Public:true }, "set_VertexWeights", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("Fusee.Serialization.VertexWeight")])), 
      VertexWeightList_set_VertexWeights
    );

    $.Field({Static:false, Public:false}, "VertexWeightList$VertexWeights$value", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("Fusee.Serialization.VertexWeight")]));

    $.Property({Static:false, Public:true }, "VertexWeights", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("Fusee.Serialization.VertexWeight")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.JointWeightColumn */ 

(function JointWeightColumn$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm0F.System.Double))) ();
  };


  function JointWeightColumn__ctor () {
  }; 

  function JointWeightColumn_get_JointWeights () {
    return this.JointWeightColumn$JointWeights$value;
  }; 

  function JointWeightColumn_set_JointWeights (value) {
    this.JointWeightColumn$JointWeights$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Serialization.JointWeightColumn", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      JointWeightColumn__ctor
    );

    $.Method({Static:false, Public:true }, "get_JointWeights", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.List`1", [$.Double])), 
      JointWeightColumn_get_JointWeights
    );

    $.Method({Static:false, Public:true }, "set_JointWeights", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.List`1", [$.Double])), 
      JointWeightColumn_set_JointWeights
    );

    $.Field({Static:false, Public:false}, "JointWeightColumn$JointWeights$value", $asm0F.TypeRef("System.Collections.Generic.List`1", [$.Double]));

    $.Property({Static:false, Public:true }, "JointWeights", $asm0F.TypeRef("System.Collections.Generic.List`1", [$.Double]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.TransformComponent */ 

(function TransformComponent$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.SceneComponentContainer)) ();
  };


  function TransformComponent__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.SceneComponentContainer"), 
      Name: "Fusee.Serialization.TransformComponent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TransformComponent__ctor
    );

    $.Field({Static:false, Public:true }, "Translation", $asm0A.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "Rotation", $asm0A.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "Scale", $asm0A.TypeRef("Fusee.Math.Core.float3"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

/* class Fusee.Serialization.XFormComponent */ 

(function XFormComponent$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.SceneComponentContainer)) ();
  };


  function XFormComponent__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Serialization.SceneComponentContainer"), 
      Name: "Fusee.Serialization.XFormComponent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      XFormComponent__ctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm11.TypeRef("ProtoBuf.ProtoContractAttribute"));

})();

