/* Generated by JSIL v0.8.2 build 31050. See http://jsil.org/ for more information. */ 
'use strict';
var $asm25 = JSIL.DeclareAssembly("Tut11_Assetspicking, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.Tutorial");
JSIL.DeclareNamespace("Fusee.Tutorial.Core");
/* class Fusee.Tutorial.Core.SimpleMeshes */ 

(function SimpleMeshes$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Single)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.NotImplementedException)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0A.Fusee.Math.Core.float3)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0B.Fusee.Serialization.Mesh)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.UInt16)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0A.Fusee.Math.Core.float2)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0A.Fusee.Math.Core.AABBf)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize(System.Array.Of($asm0A.Fusee.Math.Core.float3))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize(System.Array.Of($asm0F.System.UInt16))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0A.Fusee.Math.Core.M)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotImplementedException, null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0A.Fusee.Math.Core.float3, [
        $asm0F.System.Single, $asm0F.System.Single, 
        $asm0F.System.Single
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0A.Fusee.Math.Core.float2, [$asm0F.System.Single, $asm0F.System.Single]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm0A.Fusee.Math.Core.float3, [$asm0F.System.Single, $asm0A.Fusee.Math.Core.float3]))) ();
  };


  function SimpleMeshes_CreateCone (radius, height, segments) {
    return $thisType.CreateConeFrustum(radius, 0, height, segments);
  }; 

  function SimpleMeshes_CreateConeFrustum (radiuslower, radiusupper, height, segments) {
    throw $S00().Construct();
  }; 

  function SimpleMeshes_CreateCuboid (size) {
    var mesh = new ($T04())();
    mesh.set_Vertices(JSIL.Array.New($T03(), [$S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z))]));
    mesh.set_Normals(JSIL.Array.New($T03(), [$S01().Construct(-1, 0, 0), $S01().Construct(0, -1, 0), $S01().Construct(0, 0, -1), $S01().Construct(-1, 0, 0), $S01().Construct(0, -1, 0), $S01().Construct(0, 0, 1), $S01().Construct(-1, 0, 0), $S01().Construct(0, 1, 0), $S01().Construct(0, 0, -1), $S01().Construct(-1, 0, 0), $S01().Construct(0, 1, 0), $S01().Construct(0, 0, 1), $S01().Construct(1, 0, 0), $S01().Construct(0, -1, 0), $S01().Construct(0, 0, -1), $S01().Construct(1, 0, 0), $S01().Construct(0, -1, 0), $S01().Construct(0, 0, 1), $S01().Construct(1, 0, 0), $S01().Construct(0, 1, 0), $S01().Construct(0, 0, -1), $S01().Construct(1, 0, 0), $S01().Construct(0, 1, 0), $S01().Construct(0, 0, 1)]));
    mesh.set_Triangles(JSIL.Array.New($T05(), [0, 6, 3, 3, 6, 9, 2, 14, 20, 2, 20, 8, 12, 15, 18, 15, 21, 18, 5, 11, 17, 17, 11, 23, 7, 22, 10, 7, 19, 22, 1, 4, 16, 1, 16, 13]));
    mesh.set_UVs(JSIL.Array.New($T06(), [$S02().Construct(1, 0), $S02().Construct(1, 0), $S02().Construct(0, 0), $S02().Construct(0, 0), $S02().Construct(1, 1), $S02().Construct(1, 0), $S02().Construct(1, 1), $S02().Construct(0, 0), $S02().Construct(0, 1), $S02().Construct(0, 1), $S02().Construct(0, 1), $S02().Construct(1, 1), $S02().Construct(0, 0), $S02().Construct(0, 0), $S02().Construct(1, 0), $S02().Construct(1, 0), $S02().Construct(0, 1), $S02().Construct(0, 0), $S02().Construct(0, 1), $S02().Construct(1, 0), $S02().Construct(1, 1), $S02().Construct(1, 1), $S02().Construct(1, 1), $S02().Construct(0, 1)]));
    mesh.BoundingBox = new ($T07())($S03().CallStatic($T03(), "op_Multiply", null, -0.5, size.MemberwiseClone()).MemberwiseClone(), $S03().CallStatic($T03(), "op_Multiply", null, 0.5, size.MemberwiseClone()).MemberwiseClone());
    return mesh;
  }; 

  function SimpleMeshes_CreateCylinder (radius, height, segments) {
    var array = JSIL.Array.New($T03(), (((segments | 0) + 1) | 0));
    var array2 = JSIL.Array.New($T03(), (((segments | 0) + 1) | 0));
    var array3 = JSIL.Array.New($T05(), Math.imul(segments, 3));
    var num = +((6.28318548 / +segments));
    array[segments] = $T03().Zero.MemberwiseClone();
    array2[segments] = $T03().UnitY.MemberwiseClone();
    array[0] = $S01().Construct(radius, 0, 0);
    array2[0] = $T03().UnitY.MemberwiseClone();

    for (var i = 1; i < (segments | 0); i = ((i + 1) | 0)) {
      array[i] = $S01().Construct((+radius * +$T0A().Cos(+i * num)), 0, (+radius * +$T0A().Sin(+i * num)));
      array2[i] = $T03().UnitY.MemberwiseClone();
      array3[((Math.imul(3, i) - 1) | 0)] = (segments & 0xFFFF);
      array3[((Math.imul(3, i) - 2) | 0)] = (i & 0xFFFF);
      array3[((Math.imul(3, i) - 3) | 0)] = (((i - 1) | 0) & 0xFFFF);
    }
    array3[((Math.imul(3, segments) - 1) | 0)] = (segments & 0xFFFF);
    array3[((Math.imul(3, segments) - 2) | 0)] = 0;
    array3[((Math.imul(3, segments) - 3) | 0)] = ((((segments | 0) - 1) | 0) & 0xFFFF);
    var expr_F2 = new ($T04())();
    expr_F2.set_Vertices(array);
    expr_F2.set_Normals(array2);
    expr_F2.set_Triangles(array3);
    return expr_F2;
  }; 

  function SimpleMeshes_CreatePyramid (baselen, height) {
    throw $S00().Construct();
  }; 

  function SimpleMeshes_CreateTetrahedron (edgelen) {
    throw $S00().Construct();
  }; 

  function SimpleMeshes_CreateTorus (mainradius, segradius, segments, slices) {
    throw $S00().Construct();
  }; 

  JSIL.MakeStaticClass("Fusee.Tutorial.Core.SimpleMeshes", true, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:true }, "CreateCone", 
      new JSIL.MethodSignature($asm0B.TypeRef("Fusee.Serialization.Mesh"), [
          $.Single, $.Single, 
          $.Int32
        ]), 
      SimpleMeshes_CreateCone
    );

    $.Method({Static:true , Public:true }, "CreateConeFrustum", 
      new JSIL.MethodSignature($asm0B.TypeRef("Fusee.Serialization.Mesh"), [
          $.Single, $.Single, 
          $.Single, $.Int32
        ]), 
      SimpleMeshes_CreateConeFrustum
    );

    $.Method({Static:true , Public:true }, "CreateCuboid", 
      new JSIL.MethodSignature($asm0B.TypeRef("Fusee.Serialization.Mesh"), [$asm0A.TypeRef("Fusee.Math.Core.float3")]), 
      SimpleMeshes_CreateCuboid
    );

    $.Method({Static:true , Public:true }, "CreateCylinder", 
      new JSIL.MethodSignature($asm0B.TypeRef("Fusee.Serialization.Mesh"), [
          $.Single, $.Single, 
          $.Int32
        ]), 
      SimpleMeshes_CreateCylinder
    );

    $.Method({Static:true , Public:true }, "CreatePyramid", 
      new JSIL.MethodSignature($asm0B.TypeRef("Fusee.Serialization.Mesh"), [$.Single, $.Single]), 
      SimpleMeshes_CreatePyramid
    );

    $.Method({Static:true , Public:true }, "CreateTetrahedron", 
      new JSIL.MethodSignature($asm0B.TypeRef("Fusee.Serialization.Mesh"), [$.Single]), 
      SimpleMeshes_CreateTetrahedron
    );

    $.Method({Static:true , Public:true }, "CreateTorus", 
      new JSIL.MethodSignature($asm0B.TypeRef("Fusee.Serialization.Mesh"), [
          $.Single, $.Single, 
          $.Int32, $.Int32
        ]), 
      SimpleMeshes_CreateTorus
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Tutorial.Core.Tut11_Assetspicking */ 

(function Tut11_Assetspicking$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.Fusee.Serialization.TransformComponent)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0A.Fusee.Math.Core.float3)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.Fusee.Serialization.SceneContainer)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm0B.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm0B.Fusee.Serialization.SceneComponentContainer))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0B.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0B.Fusee.Serialization.MatChannelContainer)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0B.Fusee.Serialization.SpecularChannelContainer)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.System.Predicate$b1.Of($asm0B.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0A.Fusee.Math.Core.float4)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm0B.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm25.Fusee.Tutorial.Core.Tut11_Assetspicking_$l$gc)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm0D.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm15.System.Linq.Enumerable)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm0D.Fusee.Xene.ContainerExtensions)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm04.Fusee.Engine.Core.SceneRenderer)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm04.Fusee.Engine.Core.ScenePicker)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm0F.System.Comparison$b1.Of($asm04.Fusee.Engine.Core.PickResult))) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm0A.Fusee.Math.Core.M)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm04.Fusee.Engine.Core.Time)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm03.Fusee.Engine.Common.ClearFlags)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm0A.Fusee.Math.Core.float4x4)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm0F.System.Math)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm0F.System.Double)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm04.Fusee.Engine.Core.MouseDevice)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm04.Fusee.Engine.Core.Input)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm0A.Fusee.Math.Core.float2)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm04.Fusee.Engine.Core.PickResult))) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm04.Fusee.Engine.Core.PickResult)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm04.Fusee.Engine.Core.ShaderEffectComponent)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm04.Fusee.Engine.Core.ShaderEffect)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm0F.System.Single)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0A.Fusee.Math.Core.float3, [
        $asm0F.System.Single, $asm0F.System.Single, 
        $asm0F.System.Single
      ]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm0B.Fusee.Serialization.SceneNodeContainer), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm0B.Fusee.Serialization.SceneComponentContainer), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0A.Fusee.Math.Core.float4, [
        $asm0F.System.Single, $asm0F.System.Single, 
        $asm0F.System.Single, $asm0F.System.Single
      ]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Boolean, [$asm0B.Fusee.Serialization.SceneNodeContainer]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm0B.Fusee.Serialization.SceneNodeContainer), [$asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm0B.Fusee.Serialization.SceneNodeContainer), $asm0F.System.Predicate$b1.Of($asm0B.Fusee.Serialization.SceneNodeContainer)]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.Fusee.Engine.Core.SceneRenderer, [$asm0B.Fusee.Serialization.SceneContainer]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Single, [$asm0F.System.Single]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature($asm0A.Fusee.Math.Core.float4x4, [$asm0A.Fusee.Math.Core.float4x4, $asm0A.Fusee.Math.Core.float4x4]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature($asm0A.Fusee.Math.Core.float2, [$asm0A.Fusee.Math.Core.float2, $asm0A.Fusee.Math.Core.float2]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.ConstructorSignature($asm0A.Fusee.Math.Core.float2, [$asm0F.System.Single, $asm0F.System.Single]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Int32, [$asm04.Fusee.Engine.Core.PickResult, $asm04.Fusee.Engine.Core.PickResult]))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Comparison`1", [$asm04.TypeRef("Fusee.Engine.Core.PickResult")])]))) ();
  };


  function Tut11_Assetspicking__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  function Tut11_Assetspicking_CreateScene () {
    var expr_07 = new ($T01())();
    expr_07.Rotation = $S00().Construct(0, 0, 0);
    expr_07.Scale = $S00().Construct(1, 1, 1);
    expr_07.Translation = $S00().Construct(0, 0, 0);
    this._baseTransform = expr_07;
    var expr_5F = new ($T03())();
    var expr_65 = $S01().Construct();
    var expr_6B = new ($T05())();
    var expr_71 = $S02().Construct();
    expr_71.Add(this._baseTransform);
    var expr_84 = new ($T07())();
    var expr_8A = new ($T08())();
    expr_8A.Color = $S00().Construct(0.7, 0.7, 0.7);
    expr_84.Diffuse = expr_8A;
    var expr_AF = new ($T09())();
    expr_AF.Color = $S00().Construct(1, 1, 1);
    expr_AF.Shininess = 5;
    expr_84.Specular = expr_AF;
    expr_71.Add(expr_84);
    expr_6B.Components = expr_71;
    expr_65.Add(expr_6B);
    expr_5F.Children = expr_65;
    return expr_5F;
  }; 

  function Tut11_Assetspicking_Init () {
    var arg_61_1 = null;
    (this.RenderCanvas$RC$value.ClearColor = $S03().Construct(0.8, 0.9, 0.7, 1));
    this._scene = $T0D().Get$b1($T03())("tank.fus");
    var arg_61_0 = this._scene.Children;
    if ((arg_61_1 = $T0F().$l$g9__8_0) === null) {
      arg_61_1 = $T0F().$l$g9__8_0 = $T0A().New($T0F().$l$g9, null, new JSIL.MethodPointerInfo($asm25.Fusee.Tutorial.Core.Tut11_Assetspicking_$l$gc, "$lInit$gb__8_0", $S04(), false, false));
    }
    var expr_66 = $S05().CallStatic($T10(), "FindNodes", null, arg_61_0, arg_61_1);
    if (expr_66 === null) {
      var arg_7F_1 = null;
    } else {
      var expr_72 = $S06().CallStatic($T11(), "FirstOrDefault$b1", [$asm0B.Fusee.Serialization.SceneNodeContainer], expr_66);
      arg_7F_1 = (
        (expr_72 !== null)
           ? $T12().GetTransform(expr_72, 0)
           : null)
      ;
    }
    this._rightRearTransform = arg_7F_1;
    this._sceneRenderer = $S07().Construct(this._scene);
    this._scenePicker = new ($T14())(this._scene);
  }; 

  function Tut11_Assetspicking_RenderAFrame () {
    var arg_135_1 = null;
    this._rightRearTransform.Rotation = $S00().Construct($S08().CallStatic($T16(), "MinAngle", null, $T17().get_TimeSinceStart()), 90, 0);
    (this.RenderCanvas$RC$value).Clear($T18().$Flags("Color", "Depth"));
    (this.RenderCanvas$RC$value.View = $S09().CallStatic($T19(), "op_Multiply", null, 
        $T19().CreateTranslation(0, 0, 40).MemberwiseClone(), 
        $T19().CreateRotationX(-Math.fround(Math.atan(0.375))).MemberwiseClone()
      ).MemberwiseClone());
    var leftButton = $T1E().get_Mouse().get_LeftButton();
    if (leftButton) {
      var pickPos = $T1F().op_Addition($S0A().CallStatic($T1F(), "op_Multiply", null, 
          $T1E().get_Mouse().get_Position().MemberwiseClone(), 
          $S0B().Construct(+((2 / +(this.get_Width()))), +((-2 / +(this.get_Height()))))
        ).MemberwiseClone(), $S0B().Construct(-1, 1)).MemberwiseClone();
      this._scenePicker.View = (this.RenderCanvas$RC$value).get_View().MemberwiseClone();
      this._scenePicker.Projection = (this.RenderCanvas$RC$value).get_Projection().MemberwiseClone();
      var list = $T11().ToList$b1($T21())((this._scenePicker).Pick(pickPos.MemberwiseClone()));
      var pickResult = null;
      var flag = (list.get_Count() | 0) > 0;
      if (flag) {
        if ((arg_135_1 = $T0F().$l$g9__9_0) === null) {
          arg_135_1 = $T0F().$l$g9__9_0 = $T15().New($T0F().$l$g9, null, new JSIL.MethodPointerInfo($asm25.Fusee.Tutorial.Core.Tut11_Assetspicking_$l$gc, "$lRenderAFrame$gb__9_0", $S0C(), false, false));
        }
        $S0D().Call($T20().prototype, "Sort", null, list, arg_135_1);
        pickResult = list.get_Item(0);
      }
      var arg_162_0 = (
        (pickResult !== null)
           ? pickResult.Node
           : null)
      ;
      var expr_156 = this._currentPick;
      var flag2 = arg_162_0 !== (
        (expr_156 !== null)
           ? expr_156.Node
           : null)
      ;
      if (flag2) {
        if (this._currentPick !== null) {
          var component = $T12().GetComponent$b1($T22())(this._currentPick.Node, 0);
          (component.ShaderEffectComponent$Effect$value).SetEffectParam("DiffuseColor", this._oldColor.MemberwiseClone());
        }
        var flag4 = pickResult !== null;
        if (flag4) {
          var component2 = $T12().GetComponent$b1($T22())(pickResult.Node, 0);
          this._oldColor = $T02().$Cast((component2.ShaderEffectComponent$Effect$value).GetEffectParam("DiffuseColor")).MemberwiseClone();
          (component2.ShaderEffectComponent$Effect$value).SetEffectParam("DiffuseColor", $S00().Construct(1, 0.4, 0.4));
        }
        this._currentPick = pickResult;
      }
    }
    (this._sceneRenderer).Render(this.RenderCanvas$RC$value);
    this.Present();
  }; 

  function Tut11_Assetspicking_Resize () {
    (this.RenderCanvas$RC$value).Viewport(
      0, 
      0, 
      this.get_Width(), 
      this.get_Height()
    );
    var aspect = +((+(this.get_Width()) / +(this.get_Height())));
    var projection = $T19().CreatePerspectiveFieldOfView(0.7853982, aspect, 1, 20000);
    (this.RenderCanvas$RC$value.Projection = projection.MemberwiseClone());
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("Fusee.Engine.Core.RenderCanvas"), 
      Name: "Fusee.Tutorial.Core.Tut11_Assetspicking", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Tut11_Assetspicking__ctor
    );

    $.Method({Static:false, Public:false}, "CreateScene", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("Fusee.Serialization.SceneContainer")), 
      Tut11_Assetspicking_CreateScene
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Init", 
      JSIL.MethodSignature.Void, 
      Tut11_Assetspicking_Init
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RenderAFrame", 
      JSIL.MethodSignature.Void, 
      Tut11_Assetspicking_RenderAFrame
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Resize", 
      JSIL.MethodSignature.Void, 
      Tut11_Assetspicking_Resize
    );

    $.Field({Static:false, Public:false}, "_scene", $asm0B.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_sceneRenderer", $asm04.TypeRef("Fusee.Engine.Core.SceneRenderer"));

    $.Field({Static:false, Public:false}, "_scenePicker", $asm04.TypeRef("Fusee.Engine.Core.ScenePicker"));

    $.Field({Static:false, Public:false}, "_baseTransform", $asm0B.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_rightRearTransform", $asm0B.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_currentPick", $asm04.TypeRef("Fusee.Engine.Core.PickResult"));

    $.Field({Static:false, Public:false}, "_oldColor", $asm0A.TypeRef("Fusee.Math.Core.float3"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Tutorial.Core.Tut11_Assetspicking+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm04.Fusee.Engine.Core.PickResult)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Math)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Int32, [$asm0F.System.Single]))) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$lInit$gb__8_0 (node) {
    return node.Name == "backwheelright";
  }; 

  function $l$gc_$lRenderAFrame$gb__9_0 (a, b) {
    return $S00().CallStatic($T03(), "Sign", null, +a.get_ClipPos().z - +b.get_ClipPos().z);
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Tutorial.Core.Tut11_Assetspicking+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__8_0", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__8_0
    );

    $.Method({Static:false, Public:false}, "$lRenderAFrame$gb__9_0", 
      new JSIL.MethodSignature($.Int32, [$asm04.TypeRef("Fusee.Engine.Core.PickResult"), $asm04.TypeRef("Fusee.Engine.Core.PickResult")]), 
      $l$gc_$lRenderAFrame$gb__9_0
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__8_0", $asm0F.TypeRef("System.Predicate`1", [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__9_0", $asm0F.TypeRef("System.Comparison`1", [$asm04.TypeRef("Fusee.Engine.Core.PickResult")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class <PrivateImplementationDetails> */ 

(function $lPrivateImplementationDetails$g$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "<PrivateImplementationDetails>", 
      IsPublic: false, 
      IsReferenceType: true, 
    }, function ($ib) {
    $ = $ib;


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

