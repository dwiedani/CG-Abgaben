/* Generated by JSIL v0.8.2 build 31050. See http://jsil.org/ for more information. */ 
'use strict';
/* Generating type stubs only */ 
var $asm13 = JSIL.DeclareAssembly("System.ComponentModel.Composition, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

JSIL.DeclareNamespace("System");
/* class System.Lazy`2 */ 

(function Lazy$b2$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Lazy`1", [new JSIL.GenericParameter("T", "System.Lazy`2")]), 
      Name: "System.Lazy`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T", "TMetadata"], 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Func`1", [$.GenericParameter("T")]), $.GenericParameter("TMetadata"), 
          $asm0F.TypeRef("System.Threading.LazyThreadSafetyMode")
        ])
    );

    $.Field({Static:false, Public:false}, "_metadata", $.GenericParameter("TMetadata"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.ComponentModel");
JSIL.DeclareNamespace("System.ComponentModel.Composition");
/* class System.ComponentModel.Composition.AttributedModelServices */ 

(function AttributedModelServices$Members () {
  var $, $thisType;












  JSIL.MakeStaticClass("System.ComponentModel.Composition.AttributedModelServices", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "AddExportedValue", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionBatch"), "!!0"], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "AddExportedValue", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionBatch"), $.String, 
          "!!0"
        ], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "AddPart", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionBatch"), $.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "ComposeExportedValue", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionContainer"), "!!0"], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "ComposeExportedValue", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionContainer"), $.String, 
          "!!0"
        ], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "ComposeParts", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionContainer"), $jsilcore.TypeRef("System.Array", [$.Object])])
    )
      .Parameter(1, "attributedParts", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:true }, "CreatePart", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetContractName", 
      new JSIL.MethodSignature($.String, [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetMetadataView", 
      new JSIL.MethodSignature("!!0", [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])], ["TMetadataView"])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetTypeIdentity", 
      new JSIL.MethodSignature($.String, [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetTypeIdentity", 
      new JSIL.MethodSignature($.String, [$asm0F.TypeRef("System.Reflection.MethodInfo")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.AttributedModelServices+<>c__DisplayClass11_0`1 */ 

(function $l$gc__DisplayClass11_0$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.AttributedModelServices+<>c__DisplayClass11_0`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lAddExportedValue$gb__0", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.Field({Static:false, Public:true }, "exportedValue", $.GenericParameter("T"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.AttributedModelServices+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.AttributedModelServices+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lComposeParts$gb__14_0", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), [$.Object])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__14_0", $asm0F.TypeRef("System.Func`2", [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.CatalogReflectionContextAttribute */ 

(function CatalogReflectionContextAttribute$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Attribute"), 
      Name: "System.ComponentModel.Composition.CatalogReflectionContextAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, "CreateReflectionContext", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.ReflectionContext"))
    );

    $.Field({Static:false, Public:false}, "_reflectionContextType", $asm0F.TypeRef("System.Type"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm0F.System.AttributeTargets.Assembly]; });

})();

/* class System.ComponentModel.Composition.ConstraintServices */ 

(function ConstraintServices$Members () {
  var $, $thisType;










  JSIL.MakeStaticClass("System.ComponentModel.Composition.ConstraintServices", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CreateConstraint", 
      new JSIL.MethodSignature($asm15.TypeRef("System.Linq.Expressions.Expression`1", [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean])]), [
          $.String, $.String, 
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0F.TypeRef("System.Type")])]), $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateContractConstraintBody", 
      new JSIL.MethodSignature($asm15.TypeRef("System.Linq.Expressions.Expression"), [$.String, $asm15.TypeRef("System.Linq.Expressions.ParameterExpression")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateCreationPolicyContraint", 
      new JSIL.MethodSignature($asm15.TypeRef("System.Linq.Expressions.Expression"), [$asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"), $asm15.TypeRef("System.Linq.Expressions.ParameterExpression")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateMetadataConstraintBody", 
      new JSIL.MethodSignature($asm15.TypeRef("System.Linq.Expressions.Expression"), [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0F.TypeRef("System.Type")])]), $asm15.TypeRef("System.Linq.Expressions.ParameterExpression")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateMetadataContainsKeyExpression", 
      new JSIL.MethodSignature($asm15.TypeRef("System.Linq.Expressions.Expression"), [$asm15.TypeRef("System.Linq.Expressions.ParameterExpression"), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateMetadataOfTypeExpression", 
      new JSIL.MethodSignature($asm15.TypeRef("System.Linq.Expressions.Expression"), [
          $asm15.TypeRef("System.Linq.Expressions.ParameterExpression"), $.String, 
          $asm0F.TypeRef("System.Type")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateMetadataValueEqualsExpression", 
      new JSIL.MethodSignature($asm15.TypeRef("System.Linq.Expressions.Expression"), [
          $asm15.TypeRef("System.Linq.Expressions.ParameterExpression"), $.Object, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreatePartCreatorConstraint", 
      new JSIL.MethodSignature($asm15.TypeRef("System.Linq.Expressions.Expression`1", [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean])]), [$asm15.TypeRef("System.Linq.Expressions.Expression`1", [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean])]), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateTypeIdentityContraint", 
      new JSIL.MethodSignature($asm15.TypeRef("System.Linq.Expressions.Expression"), [$.String, $asm15.TypeRef("System.Linq.Expressions.ParameterExpression")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "_exportDefinitionContractNameProperty", $asm0F.TypeRef("System.Reflection.PropertyInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "_exportDefinitionMetadataProperty", $asm0F.TypeRef("System.Reflection.PropertyInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "_metadataContainsKeyMethod", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "_metadataItemMethod", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "_metadataEqualsMethod", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "_typeIsInstanceOfTypeMethod", $asm0F.TypeRef("System.Reflection.MethodInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.CompositionContractMismatchException */ 

(function CompositionContractMismatchException$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Exception"), 
      Name: "System.ComponentModel.Composition.CompositionContractMismatchException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm0F.TypeRef("System.Exception")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.CompositionError */ 

(function CompositionError$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.CompositionError", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm0F.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.CompositionErrorId"), $.String, 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), $asm0F.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm13.TypeRef("System.ComponentModel.Composition.CompositionErrorId"), $.String, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(2, "parameters", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:false}, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm13.TypeRef("System.ComponentModel.Composition.CompositionErrorId"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), 
          $.String, $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(3, "parameters", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:false}, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm13.TypeRef("System.ComponentModel.Composition.CompositionErrorId"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), 
          $asm0F.TypeRef("System.Exception"), $.String, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(4, "parameters", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, "get_Description", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Element", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Exception", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Id", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.CompositionErrorId"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_id", $asm13.TypeRef("System.ComponentModel.Composition.CompositionErrorId"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_description", $.String);

    $.Field({Static:false, Public:false, ReadOnly:true }, "_exception", $asm0F.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_element", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.Property({Static:false, Public:true }, "Element", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.Property({Static:false, Public:true }, "Description", $.String);

    $.Property({Static:false, Public:true }, "Exception", $asm0F.TypeRef("System.Exception"));

    $.Property({Static:false, Public:false}, "Id", $asm13.TypeRef("System.ComponentModel.Composition.CompositionErrorId"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.ComponentModel.Composition.CompositionResult`1 */ 

(function CompositionResult$b1$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "System.ComponentModel.Composition.CompositionResult`1", 
      IsPublic: false, 
      IsReferenceType: false, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 2, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")]))
    )
      .Parameter(0, "errors", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Succeeded", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowOnErrors", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ToResult", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.CompositionResult"))
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_errors", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_value", $.GenericParameter("T"));

    $.Property({Static:false, Public:true }, "Succeeded", $.Boolean);

    $.Property({Static:false, Public:true }, "Value", $.GenericParameter("T"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ExportAttribute */ 

(function ExportAttribute$Members () {
  var $, $thisType;

  function ExportAttribute_get_ContractName () {
    return this.ExportAttribute$ContractName$value;
  }; 

  function ExportAttribute_get_ContractType () {
    return this.ExportAttribute$ContractType$value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Attribute"), 
      Name: "System.ComponentModel.Composition.ExportAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, "get_ContractName", 
      JSIL.MethodSignature.Return($.String), 
      ExportAttribute_get_ContractName
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ContractType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type")), 
      ExportAttribute_get_ContractType
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ExportAttribute$ContractName$value", $.String)
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ExportAttribute$ContractType$value", $asm0F.TypeRef("System.Type"))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ContractName", $.String);

    $.Property({Static:false, Public:true }, "ContractType", $asm0F.TypeRef("System.Type"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm0F.System.AttributeTargets.$Flags("Class", "Field", "Method", "Property")]; });

})();

/* class System.ComponentModel.Composition.InheritedExportAttribute */ 

(function InheritedExportAttribute$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.ExportAttribute"), 
      Name: "System.ComponentModel.Composition.InheritedExportAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm0F.System.AttributeTargets.$Flags("Class", "Interface")]; });

})();

/* class System.ComponentModel.Composition.ExportServices */ 

(function ExportServices$Members () {
  var $, $thisType;











  JSIL.MakeStaticClass("System.ComponentModel.Composition.ExportServices", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "CastExportedValue", 
      new JSIL.MethodSignature("!!0", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), $.Object], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "CheckCardinality", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ExportCardinalityCheckResult"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateSemiStronglyTypedLazyFactory", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"), $asm13.TypeRef("System.Lazy`2", [$.Object, $.Object])]), [$asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateStronglyTypedLazyFactory", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"), $.Object]), [$asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateStronglyTypedLazyOfT", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Lazy`1", ["!!0"]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateStronglyTypedLazyOfTM", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Lazy`2", ["!!0", "!!1"]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")], ["T", "M"])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetCastedExportedValue", 
      new JSIL.MethodSignature("!!0", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsDefaultMetadataViewType", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsDictionaryConstructorViewType", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "MatchCardinality", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ExportCardinalityCheckResult"), [$asm13.TypeRef("Microsoft.Internal.Collections.EnumerableCardinality"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "_createStronglyTypedLazyOfTM", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "_createStronglyTypedLazyOfT", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "_createSemiStronglyTypedLazy", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "DefaultMetadataViewType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Collections.Generic.IDictionary$b2.Of($asm0F.System.String, $asm0F.System.Object).__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "DefaultExportedValueType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Object.__Type__;
      });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ExportServices+DisposableLazy`2 */ 

(function DisposableLazy$b2$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.Lazy`2", [new JSIL.GenericParameter("T", "System.ComponentModel.Composition.ExportServices+DisposableLazy`2"), new JSIL.GenericParameter("TMetadataView", "System.ComponentModel.Composition.ExportServices+DisposableLazy`2")]), 
      Name: "System.ComponentModel.Composition.ExportServices+DisposableLazy`2", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T", "TMetadataView"], 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Func`1", [$.GenericParameter("T")]), $.GenericParameter("TMetadataView"), 
          $asm0F.TypeRef("System.IDisposable"), $asm0F.TypeRef("System.Threading.LazyThreadSafetyMode")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "_disposable", $asm0F.TypeRef("System.IDisposable"));

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ExportServices+DisposableLazy`1 */ 

(function DisposableLazy$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Lazy`1", [new JSIL.GenericParameter("T", "System.ComponentModel.Composition.ExportServices+DisposableLazy`1")]), 
      Name: "System.ComponentModel.Composition.ExportServices+DisposableLazy`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Func`1", [$.GenericParameter("T")]), $asm0F.TypeRef("System.IDisposable"), 
          $asm0F.TypeRef("System.Threading.LazyThreadSafetyMode")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "_disposable", $asm0F.TypeRef("System.IDisposable"));

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ExportServices+<>c__DisplayClass11_0`2 */ 

(function $l$gc__DisplayClass11_0$b2$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ExportServices+<>c__DisplayClass11_0`2", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T", "M"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCreateStronglyTypedLazyOfTM$gb__0", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCreateStronglyTypedLazyOfTM$gb__1", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.Field({Static:false, Public:true }, "$export", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.ExportServices+<>c__DisplayClass12_0`1 */ 

(function $l$gc__DisplayClass12_0$b1$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ExportServices+<>c__DisplayClass12_0`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCreateStronglyTypedLazyOfT$gb__0", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCreateStronglyTypedLazyOfT$gb__1", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.Field({Static:false, Public:true }, "$export", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* interface System.ComponentModel.Composition.IAttributedImport */ 

JSIL.MakeInterface(
  "System.ComponentModel.Composition.IAttributedImport", false, [], function ($) {
    $.Method({}, "get_ContractName", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_ContractType", JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type")));
    $.Method({}, "get_AllowRecomposition", JSIL.MethodSignature.Return($.Boolean));
    $.Method({}, "get_RequiredCreationPolicy", JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy")));
    $.Method({}, "get_Cardinality", JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality")));
    $.Method({}, "get_Source", JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.ImportSource")));
    $.Property({}, "ContractName");
    $.Property({}, "ContractType");
    $.Property({}, "AllowRecomposition");
    $.Property({}, "RequiredCreationPolicy");
    $.Property({}, "Cardinality");
    $.Property({}, "Source");
  }, []);

/* class System.ComponentModel.Composition.ImportCardinalityMismatchException */ 

(function ImportCardinalityMismatchException$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Exception"), 
      Name: "System.ComponentModel.Composition.ImportCardinalityMismatchException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm0F.TypeRef("System.Exception")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ErrorBuilder */ 

(function ErrorBuilder$Members () {
  var $, $thisType;









  JSIL.MakeStaticClass("System.ComponentModel.Composition.ErrorBuilder", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "ComposeTookTooManyIterations", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionError"), [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateCannotGetExportedValue", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionError"), [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), 
          $asm0F.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateImportCardinalityMismatch", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionError"), [$asm13.TypeRef("System.ComponentModel.Composition.ImportCardinalityMismatchException"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreatePartCannotActivate", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionError"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), $asm0F.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreatePartCannotSetImport", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionError"), [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), 
          $asm0F.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreatePartCycle", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionError"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")])
    );

    $.ExternalMethod({Static:true , Public:true }, "InvalidStateForRecompposition", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionError"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")])
    );

    $.ExternalMethod({Static:true , Public:true }, "PreventedByExistingImport", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionError"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ExceptionBuilder */ 

(function ExceptionBuilder$Members () {
  var $, $thisType;










  JSIL.MakeStaticClass("System.ComponentModel.Composition.ExceptionBuilder", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CreateCannotGetExportedValue", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionException"), [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), 
          $asm0F.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateContainsNullElement", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.ArgumentException"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateDiscoveryException", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Exception"), [$.String, $jsilcore.TypeRef("System.Array", [$.String])])
    )
      .Parameter(1, "arguments", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:true }, "CreateExportDefinitionNotOnThisComposablePart", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.ArgumentException"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateImportDefinitionNotOnThisComposablePart", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.ArgumentException"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateNotOverriddenByDerived", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.NotImplementedException"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateObjectDisposed", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.ObjectDisposedException"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "ExportFactory_TooManyGenericParameters", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.ArgumentException"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "Format", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("System.Array", [$.String])])
    )
      .Parameter(1, "arguments", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.ComponentModel.Composition.ExportCardinalityCheckResult */ 

JSIL.MakeEnum(
  {
    FullName: "System.ComponentModel.Composition.ExportCardinalityCheckResult", 
    BaseType: $asm0F.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Match: 0, 
    NoExports: 1, 
    TooManyExports: 2, 
  }
);

/* class System.ComponentModel.Composition.ExportFactory`1 */ 

(function ExportFactory$b1$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ExportFactory`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ExportFactory`2 */ 

(function ExportFactory$b2$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.ExportFactory`1", [new JSIL.GenericParameter("T", "System.ComponentModel.Composition.ExportFactory`2")]), 
      Name: "System.ComponentModel.Composition.ExportFactory`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T", "TMetadata"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ImportingConstructorAttribute */ 

(function ImportingConstructorAttribute$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Attribute"), 
      Name: "System.ComponentModel.Composition.ImportingConstructorAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm0F.System.AttributeTargets.Constructor]; });

})();

/* interface System.ComponentModel.Composition.IPartImportsSatisfiedNotification */ 

JSIL.MakeInterface(
  "System.ComponentModel.Composition.IPartImportsSatisfiedNotification", true, [], function ($) {
    $.Method({}, "OnImportsSatisfied", JSIL.MethodSignature.Void);
  }, []);

/* class System.ComponentModel.Composition.MetadataServices */ 

(function MetadataServices$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("System.ComponentModel.Composition.MetadataServices", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "AsReadOnly", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetValue", 
      new JSIL.MethodSignature("!!0", [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $.String], ["T"])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "EmptyMetadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.MetadataViewProvider */ 

(function MetadataViewProvider$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("System.ComponentModel.Composition.MetadataViewProvider", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "GetMetadataView", 
      new JSIL.MethodSignature("!!0", [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])], ["TMetadataView"])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsViewTypeValid", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Type")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.MetadataViewImplementationAttribute */ 

(function MetadataViewImplementationAttribute$Members () {
  var $, $thisType;

  function MetadataViewImplementationAttribute_get_ImplementationType () {
    return this.MetadataViewImplementationAttribute$ImplementationType$value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Attribute"), 
      Name: "System.ComponentModel.Composition.MetadataViewImplementationAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, "get_ImplementationType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type")), 
      MetadataViewImplementationAttribute_get_ImplementationType
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "MetadataViewImplementationAttribute$ImplementationType$value", $asm0F.TypeRef("System.Type"))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ImplementationType", $asm0F.TypeRef("System.Type"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm0F.System.AttributeTargets.Interface]; });

})();

/* class System.ComponentModel.Composition.PartCreationPolicyAttribute */ 

(function PartCreationPolicyAttribute$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm13.System.ComponentModel.Composition.CreationPolicy)) ();
  };



  function PartCreationPolicyAttribute_get_CreationPolicy () {
    return this.PartCreationPolicyAttribute$CreationPolicy$value;
  }; 

  function PartCreationPolicyAttribute_set_CreationPolicy (value) {
    this.PartCreationPolicyAttribute$CreationPolicy$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Attribute"), 
      Name: "System.ComponentModel.Composition.PartCreationPolicyAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"))
    );

    $.Method({Static:false, Public:true }, "get_CreationPolicy", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy")), 
      PartCreationPolicyAttribute_get_CreationPolicy
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CreationPolicy", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy")), 
      PartCreationPolicyAttribute_set_CreationPolicy
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "Default", $.Type);

    $.Field({Static:true , Public:false}, "Shared", $.Type);

    $.Field({Static:false, Public:false}, "PartCreationPolicyAttribute$CreationPolicy$value", $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "CreationPolicy", $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm0F.System.AttributeTargets.Class]; });

})();

/* class System.ComponentModel.Composition.PartMetadataAttribute */ 

(function PartMetadataAttribute$Members () {
  var $, $thisType;

  function PartMetadataAttribute_get_Name () {
    return this.PartMetadataAttribute$Name$value;
  }; 

  function PartMetadataAttribute_get_Value () {
    return this.PartMetadataAttribute$Value$value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Attribute"), 
      Name: "System.ComponentModel.Composition.PartMetadataAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      PartMetadataAttribute_get_Name
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object), 
      PartMetadataAttribute_get_Value
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PartMetadataAttribute$Name$value", $.String)
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PartMetadataAttribute$Value$value", $.Object)
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Value", $.Object);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm0F.System.AttributeTargets.Class]; });

})();

/* class System.ComponentModel.Composition.PartNotDiscoverableAttribute */ 

(function PartNotDiscoverableAttribute$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Attribute"), 
      Name: "System.ComponentModel.Composition.PartNotDiscoverableAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm0F.System.AttributeTargets.Class]; });

})();

/* class System.ComponentModel.Composition.MetadataViewGenerator */ 

(function MetadataViewGenerator$Members () {
  var $, $thisType;









  JSIL.MakeStaticClass("System.ComponentModel.Composition.MetadataViewGenerator", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CreateMetadataView", 
      new JSIL.MethodSignature("!!0", [$asm13.TypeRef("System.ComponentModel.Composition.MetadataViewGenerator+MetadataViewFactory"), $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])], ["TMetadataView"])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateProxyAssemblyBuilder", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Reflection.Emit.AssemblyBuilder"), [$asm0F.TypeRef("System.Reflection.ConstructorInfo")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GenerateFieldAssignmentFromLocalValue", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Reflection.Emit.ILGenerator"), $asm0F.TypeRef("System.Reflection.Emit.LocalBuilder"), 
          $asm0F.TypeRef("System.Reflection.Emit.FieldBuilder")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GenerateInterfaceViewProxyType", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Type"), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GenerateLocalAssignmentFromDefaultAttribute", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Reflection.Emit.ILGenerator"), $jsilcore.TypeRef("System.Array", [$asm12.TypeRef("System.ComponentModel.DefaultValueAttribute")]), 
          $asm0F.TypeRef("System.Reflection.Emit.LocalBuilder")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GenerateLocalAssignmentFromFlag", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Reflection.Emit.ILGenerator"), $asm0F.TypeRef("System.Reflection.Emit.LocalBuilder"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetMetadataViewFactory", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.MetadataViewGenerator+MetadataViewFactory"), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetProxyModuleBuilder", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Reflection.Emit.ModuleBuilder"), [$.Boolean])
    );

    $.Field({Static:true , Public:false}, "_lock", $asm13.TypeRef("Microsoft.Internal.Lock"));

    $.Field({Static:true , Public:false}, "_metadataViewFactories", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0F.TypeRef("System.Type"), $asm13.TypeRef("System.ComponentModel.Composition.MetadataViewGenerator+MetadataViewFactory")]));

    $.Field({Static:true , Public:false}, "ProxyAssemblyName", $asm0F.TypeRef("System.Reflection.AssemblyName"));

    $.Field({Static:true , Public:false}, "criticalProxyModuleBuilder", $asm0F.TypeRef("System.Reflection.Emit.ModuleBuilder"));

    $.Field({Static:true , Public:false}, "transparentProxyModuleBuilder", $asm0F.TypeRef("System.Reflection.Emit.ModuleBuilder"));

    $.Field({Static:true , Public:false}, "CtorArgumentTypes", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")]));

    $.Field({Static:true , Public:false}, "_mdvDictionaryTryGet", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "ObjectGetType", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "ObjectCtor", $asm0F.TypeRef("System.Reflection.ConstructorInfo"));

    $.Field({Static:true , Public:false}, "_securityCriticalBuilder", $asm0F.TypeRef("System.Reflection.Emit.CustomAttributeBuilder"));

    $.Field({Static:true , Public:false}, "_securitySafeCriticalBuilder", $asm0F.TypeRef("System.Reflection.Emit.CustomAttributeBuilder"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.ComponentModel.Composition.MetadataViewGenerator+MetadataViewFactory */ 

JSIL.MakeDelegate("System.ComponentModel.Composition.MetadataViewGenerator+MetadataViewFactory", false, [], 
  new JSIL.MethodSignature($asm0F.TypeRef("System.Object"), [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$asm0F.TypeRef("System.String"), $asm0F.TypeRef("System.Object")])]));

/* class System.ComponentModel.Composition.CompositionException */ 

(function CompositionException$Members () {
  var $, $thisType;

















  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Exception"), 
      Name: "System.ComponentModel.Composition.CompositionException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.CompositionError"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")]))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm0F.TypeRef("System.Exception"), 
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "$l.ctor$gb__8_0", 
      new JSIL.MethodSignature(null, [$.Object, $asm0F.TypeRef("System.Runtime.Serialization.SafeSerializationEventArgs")])
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "BuildDefaultMessage", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "CalculatePaths", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")])]), [$.Type])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Errors", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Message", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "VisitCompositionException", 
      new JSIL.MethodSignature(null, [$.Type, $asm13.TypeRef("System.ComponentModel.Composition.CompositionException+VisitContext")])
    );

    $.ExternalMethod({Static:true , Public:false}, "VisitError", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError"), $asm13.TypeRef("System.ComponentModel.Composition.CompositionException+VisitContext")])
    );

    $.ExternalMethod({Static:true , Public:false}, "VisitException", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Exception"), $asm13.TypeRef("System.ComponentModel.Composition.CompositionException+VisitContext")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteElementGraph", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Text.StringBuilder"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteError", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Text.StringBuilder"), $asm13.TypeRef("System.ComponentModel.Composition.CompositionError")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteHeader", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Text.StringBuilder"), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WritePath", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Text.StringBuilder"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")]), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WritePaths", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Text.StringBuilder"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")])])])
    );

    $.Field({Static:false, Public:false}, "_errors", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")]));

    $.Property({Static:false, Public:true }, "Errors", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")]));

    $.Property({Static:false, Public:true , Virtual:true }, "Message", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.ComponentModel.Composition.CompositionException+CompositionExceptionData */ 

(function CompositionExceptionData$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "System.ComponentModel.Composition.CompositionException+CompositionExceptionData", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Field({Static:false, Public:true }, "_errors", $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")]));

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Runtime.Serialization.ISafeSerializationData")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.ComponentModel.Composition.CompositionException+VisitContext */ 

(function VisitContext$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "System.ComponentModel.Composition.CompositionException+VisitContext", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Field({Static:false, Public:true }, "Path", $asm12.TypeRef("System.Collections.Generic.Stack`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")]));

    $.Field({Static:false, Public:true }, "LeafVisitor", $asm0F.TypeRef("System.Action`1", [$asm12.TypeRef("System.Collections.Generic.Stack`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")])]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.CompositionException+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.CompositionException+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l.ctor$gb__8_1", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionError"), [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__8_1", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError"), $asm13.TypeRef("System.ComponentModel.Composition.CompositionError")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.CompositionException+<>c__DisplayClass21_0 */ 

(function $l$gc__DisplayClass21_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.CompositionException+<>c__DisplayClass21_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCalculatePaths$gb__0", 
      JSIL.MethodSignature.Action($asm12.TypeRef("System.Collections.Generic.Stack`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")]))
    );

    $.Field({Static:false, Public:true }, "paths", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")])]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.ChangeRejectedException */ 

(function ChangeRejectedException$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.CompositionException"), 
      Name: "System.ComponentModel.Composition.ChangeRejectedException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm0F.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Message", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:true , Virtual:true }, "Message", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.ComponentModel.Composition.CompositionErrorId */ 

JSIL.MakeEnum(
  {
    FullName: "System.ComponentModel.Composition.CompositionErrorId", 
    BaseType: $asm0F.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Unknown: 0, 
    InvalidExportMetadata: 1, 
    ImportNotSetOnPart: 2, 
    ImportEngine_ComposeTookTooManyIterations: 3, 
    ImportEngine_ImportCardinalityMismatch: 4, 
    ImportEngine_PartCycle: 5, 
    ImportEngine_PartCannotSetImport: 6, 
    ImportEngine_PartCannotGetExportedValue: 7, 
    ImportEngine_PartCannotActivate: 8, 
    ImportEngine_PreventedByExistingImport: 9, 
    ImportEngine_InvalidStateForRecomposition: 10, 
    ReflectionModel_ImportThrewException: 11, 
    ReflectionModel_ImportNotAssignableFromExport: 12, 
    ReflectionModel_ImportCollectionNull: 13, 
    ReflectionModel_ImportCollectionNotWritable: 14, 
    ReflectionModel_ImportCollectionConstructionThrewException: 15, 
    ReflectionModel_ImportCollectionGetThrewException: 16, 
    ReflectionModel_ImportCollectionIsReadOnlyThrewException: 17, 
    ReflectionModel_ImportCollectionClearThrewException: 18, 
    ReflectionModel_ImportCollectionAddThrewException: 19, 
    ReflectionModel_ImportManyOnParameterCanOnlyBeAssigned: 20, 
  }
);

/* struct System.ComponentModel.Composition.CompositionResult */ 

(function CompositionResult$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "System.ComponentModel.Composition.CompositionResult", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 1, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")]))
    )
      .Parameter(0, "errors", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Succeeded", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "MergeError", 
      new JSIL.MethodSignature($.Type, [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")])
    );

    $.ExternalMethod({Static:false, Public:true }, "MergeErrors", 
      new JSIL.MethodSignature($.Type, [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "MergeResult", 
      new JSIL.MethodSignature($.Type, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:true }, "ThrowOnErrors", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ThrowOnErrors", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "SucceededResult", $.Type);

    $.Field({Static:false, Public:false, ReadOnly:true }, "_errors", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.CompositionError")]));


    function CompositionResult__cctor () {
      $thisType.SucceededResult = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      CompositionResult__cctor
    );

    $.Property({Static:false, Public:true }, "Succeeded", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ContractNameServices */ 

(function ContractNameServices$Members () {
  var $, $thisType;




















  JSIL.MakeStaticClass("System.ComponentModel.Composition.ContractNameServices", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "FindArrayElementType", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Type"), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "FindGenericTypeName", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TypeIdentityCache", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0F.TypeRef("System.Type"), $.String]))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetGenericArity", 
      new JSIL.MethodSignature($.Int32, [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetTypeIdentity", 
      new JSIL.MethodSignature($.String, [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetTypeIdentity", 
      new JSIL.MethodSignature($.String, [$asm0F.TypeRef("System.Type"), $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetTypeIdentityFromMethod", 
      new JSIL.MethodSignature($.String, [$asm0F.TypeRef("System.Reflection.MethodInfo")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetTypeIdentityFromMethod", 
      new JSIL.MethodSignature($.String, [$asm0F.TypeRef("System.Reflection.MethodInfo"), $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteArrayType", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Text.StringBuilder"), $asm0F.TypeRef("System.Type"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteArrayTypeDimensions", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Text.StringBuilder"), $asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteByRefType", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Text.StringBuilder"), $asm0F.TypeRef("System.Type"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteGenericType", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Text.StringBuilder"), $asm0F.TypeRef("System.Type"), 
          $.Boolean, $asm12.TypeRef("System.Collections.Generic.Queue`1", [$asm0F.TypeRef("System.Type")]), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteGenericTypeName", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Text.StringBuilder"), $asm0F.TypeRef("System.Type"), 
          $.Boolean, $asm12.TypeRef("System.Collections.Generic.Queue`1", [$asm0F.TypeRef("System.Type")]), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteNonGenericType", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Text.StringBuilder"), $asm0F.TypeRef("System.Type"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WritePointerType", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Text.StringBuilder"), $asm0F.TypeRef("System.Type"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteType", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Text.StringBuilder"), $asm0F.TypeRef("System.Type"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteTypeArgument", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Text.StringBuilder"), $.Boolean, 
          $asm0F.TypeRef("System.Type"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteTypeArgumentsString", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Text.StringBuilder"), $.Int32, 
          $.Boolean, $asm12.TypeRef("System.Collections.Generic.Queue`1", [$asm0F.TypeRef("System.Type")]), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteTypeWithNamespace", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Text.StringBuilder"), $asm0F.TypeRef("System.Type"), 
          $.Boolean
        ])
    );

    $.Field({Static:true , Public:false}, "typeIdentityCache", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0F.TypeRef("System.Type"), $.String]));

    $.Property({Static:true , Public:false}, "TypeIdentityCache", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0F.TypeRef("System.Type"), $.String]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.ComponentModel.Composition.CreationPolicy */ 

JSIL.MakeEnum(
  {
    FullName: "System.ComponentModel.Composition.CreationPolicy", 
    BaseType: $asm0F.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Any: 0, 
    Shared: 1, 
    NonShared: 2, 
  }
);

/* class System.ComponentModel.Composition.ExportMetadataAttribute */ 

(function ExportMetadataAttribute$Members () {
  var $, $thisType;

  function ExportMetadataAttribute_get_IsMultiple () {
    return this.ExportMetadataAttribute$IsMultiple$value;
  }; 

  function ExportMetadataAttribute_get_Name () {
    return this.ExportMetadataAttribute$Name$value;
  }; 

  function ExportMetadataAttribute_get_Value () {
    return this.ExportMetadataAttribute$Value$value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Attribute"), 
      Name: "System.ComponentModel.Composition.ExportMetadataAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, "get_IsMultiple", 
      JSIL.MethodSignature.Return($.Boolean), 
      ExportMetadataAttribute_get_IsMultiple
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      ExportMetadataAttribute_get_Name
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object), 
      ExportMetadataAttribute_get_Value
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ExportMetadataAttribute$Name$value", $.String)
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ExportMetadataAttribute$Value$value", $.Object)
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ExportMetadataAttribute$IsMultiple$value", $.Boolean)
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Value", $.Object);

    $.Property({Static:false, Public:true }, "IsMultiple", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm0F.System.AttributeTargets.$Flags(
          "Class", "Field", "Interface", "Method", 
          "Property"
      )]; });

})();

/* interface System.ComponentModel.Composition.ICompositionService */ 

JSIL.MakeInterface(
  "System.ComponentModel.Composition.ICompositionService", true, [], function ($) {
  }, []);

/* class System.ComponentModel.Composition.ImportAttribute */ 

(function ImportAttribute$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Type)) ();
  };





  function ImportAttribute_get_AllowDefault () {
    return this.ImportAttribute$AllowDefault$value;
  }; 

  function ImportAttribute_get_AllowRecomposition () {
    return this.ImportAttribute$AllowRecomposition$value;
  }; 

  function ImportAttribute_get_ContractName () {
    return this.ImportAttribute$ContractName$value;
  }; 

  function ImportAttribute_get_ContractType () {
    return this.ImportAttribute$ContractType$value;
  }; 

  function ImportAttribute_get_RequiredCreationPolicy () {
    return this.ImportAttribute$RequiredCreationPolicy$value;
  }; 

  function ImportAttribute_get_Source () {
    return this.ImportAttribute$Source$value;
  }; 

  function ImportAttribute_set_ContractName (value) {
    this.ImportAttribute$ContractName$value = value;
  }; 

  function ImportAttribute_set_ContractType (value) {
    this.ImportAttribute$ContractType$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Attribute"), 
      Name: "System.ComponentModel.Composition.ImportAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm0F.TypeRef("System.Type")])
    );

    $.Method({Static:false, Public:true }, "get_AllowDefault", 
      JSIL.MethodSignature.Return($.Boolean), 
      ImportAttribute_get_AllowDefault
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "get_AllowRecomposition", 
      JSIL.MethodSignature.Return($.Boolean), 
      ImportAttribute_get_AllowRecomposition
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "get_ContractName", 
      JSIL.MethodSignature.Return($.String), 
      ImportAttribute_get_ContractName
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "get_ContractType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type")), 
      ImportAttribute_get_ContractType
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "get_RequiredCreationPolicy", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy")), 
      ImportAttribute_get_RequiredCreationPolicy
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "get_Source", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.ImportSource")), 
      ImportAttribute_get_Source
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ContractName", 
      JSIL.MethodSignature.Action($.String), 
      ImportAttribute_set_ContractName
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ContractType", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Type")), 
      ImportAttribute_set_ContractType
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.IAttributedImport.get_Cardinality", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality"))
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.IAttributedImport"), "get_Cardinality");

    $.Field({Static:false, Public:false}, "ImportAttribute$ContractName$value", $.String)
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ImportAttribute$ContractType$value", $asm0F.TypeRef("System.Type"))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ImportAttribute$AllowDefault$value", $.Boolean)
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ImportAttribute$AllowRecomposition$value", $.Boolean)
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ImportAttribute$RequiredCreationPolicy$value", $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ImportAttribute$Source$value", $asm13.TypeRef("System.ComponentModel.Composition.ImportSource"))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "ContractName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "ContractType", $asm0F.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "AllowDefault", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "AllowRecomposition", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "RequiredCreationPolicy", $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"));

    $.Property({Static:false, Public:true , Virtual:true }, "Source", $asm13.TypeRef("System.ComponentModel.Composition.ImportSource"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.IAttributedImport.Cardinality", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality"));

    $.ImplementInterfaces(
      /* 1 */ $asm13.TypeRef("System.ComponentModel.Composition.IAttributedImport")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm0F.System.AttributeTargets.$Flags("Field", "Parameter", "Property")]; });

})();

/* enum System.ComponentModel.Composition.ImportSource */ 

JSIL.MakeEnum(
  {
    FullName: "System.ComponentModel.Composition.ImportSource", 
    BaseType: $asm0F.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Any: 0, 
    Local: 1, 
    NonLocal: 2, 
  }
);

/* class System.ComponentModel.Composition.MetadataAttributeAttribute */ 

(function MetadataAttributeAttribute$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Attribute"), 
      Name: "System.ComponentModel.Composition.MetadataAttributeAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm0F.System.AttributeTargets.Class]; });

})();

JSIL.DeclareNamespace("System.ComponentModel.Composition.ReflectionModel");
/* class System.ComponentModel.Composition.ReflectionModel.ExportFactoryCreator */ 

(function ExportFactoryCreator$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ExportFactoryCreator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateStronglyTypedExportFactoryFactory", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"), $.Object]), [$asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Type")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "_createStronglyTypedExportFactoryOfT", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "_createStronglyTypedExportFactoryOfTM", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "_exportFactoryType", $asm0F.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ExportFactoryCreator+<>c__DisplayClass4_0 */ 

(function $l$gc__DisplayClass4_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ExportFactoryCreator+<>c__DisplayClass4_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCreateStronglyTypedExportFactoryFactory$gb__0", 
      new JSIL.MethodSignature($.Object, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])
    );

    $.Field({Static:false, Public:true }, "exportFactoryFactory", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"), $.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.ReflectionModel.GenericServices */ 

(function GenericServices$Members () {
  var $, $thisType;












  JSIL.MakeStaticClass("System.ComponentModel.Composition.ReflectionModel.GenericServices", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CanSpecialize", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Type")]), 
          $asm0F.TypeRef("System.Reflection.GenericParameterAttributes")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CanSpecialize", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Type")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "CanSpecialize", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Reflection.GenericParameterAttributes")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateTypeSpecialization", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Type"), [$asm0F.TypeRef("System.Type"), $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateTypeSpecializations", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Type")]), [$jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")]), $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetGenericName", 
      new JSIL.MethodSignature($.String, [
          $.String, $jsilcore.TypeRef("System.Array", [$.Int32]), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetGenericParametersOrder", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Int32]), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetPureGenericArity", 
      new JSIL.MethodSignature($.Int32, [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetPureGenericParameters", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IList`1", [$asm0F.TypeRef("System.Type")]), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Reorder", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", ["!!0"]), [$jsilcore.TypeRef("System.Array", ["!!0"]), $jsilcore.TypeRef("System.Array", [$.Int32])], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TraverseGenericType", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Action`1", [$asm0F.TypeRef("System.Type")])])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.GenericServices+<>c__DisplayClass0_0 */ 

(function $l$gc__DisplayClass0_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.GenericServices+<>c__DisplayClass0_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetPureGenericParameters$gb__0", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Type"))
    );

    $.Field({Static:false, Public:true }, "pureGenericParameters", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0F.TypeRef("System.Type")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.ReflectionModel.GenericServices+<>c__DisplayClass1_0 */ 

(function $l$gc__DisplayClass1_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.GenericServices+<>c__DisplayClass1_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetPureGenericArity$gb__0", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Type"))
    );

    $.Field({Static:false, Public:true }, "genericArity", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.ReflectionModel.GenericServices+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.GenericServices+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetGenericParametersOrder$gb__3_0", 
      new JSIL.MethodSignature($.Int32, [$asm0F.TypeRef("System.Type")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__3_0", $asm0F.TypeRef("System.Func`2", [$asm0F.TypeRef("System.Type"), $.Int32]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.ReflectionModel.GenericServices+<>c__DisplayClass6_0 */ 

(function $l$gc__DisplayClass6_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.GenericServices+<>c__DisplayClass6_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCreateTypeSpecializations$gb__0", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Type"), [$asm0F.TypeRef("System.Type")])
    );

    $.Field({Static:false, Public:true }, "specializationTypes", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.ReflectionModel.GenericSpecializationPartCreationInfo */ 

(function GenericSpecializationPartCreationInfo$Members () {
  var $, $thisType;





























  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.GenericSpecializationPartCreationInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.IReflectionPartCreationInfo"), $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePartDefinition"), 
          $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BuildMembersTable", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo"), $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.MemberInfo")])]), [$asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "BuildParametersTable", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Reflection.ParameterInfo")]), $asm0F.TypeRef("System.Reflection.ParameterInfo")]), [$asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Reflection.ParameterInfo")])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "BuildTables", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "CanSpecialize", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsDisposalRequired", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsIdentityComparison", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Origin", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OriginalPart", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePartDefinition"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetAccessors", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.MemberInfo")]), [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetConstructor", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.ConstructorInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExports", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetImports", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetMetadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetParameter", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Reflection.ParameterInfo"), [$asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Reflection.ParameterInfo")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetPartType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false}, "PopulateExports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]), [$asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "PopulateImports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]), [$asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo")]), $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Reflection.ParameterInfo")])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "PopulateImportsAndExports", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Translate", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("System.Array", [$.Int32])])
    );

    $.ExternalMethod({Static:false, Public:false}, "Translate", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "TranslateExportMetadata", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionMemberExportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:true }, "TranslateExpot", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionMemberExportDefinition"), $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TranslateImport", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), [
          $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionImportDefinition"), $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo")]), 
          $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Reflection.ParameterInfo")])])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TranslateImportMetadata", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition")])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_originalPartCreationInfo", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.IReflectionPartCreationInfo"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_originalPart", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePartDefinition"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_specialization", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_specializationIdentities", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "_exports", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Field({Static:false, Public:false}, "_imports", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_lazyPartType", $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "_members", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo")]));

    $.Field({Static:false, Public:false}, "_parameters", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Reflection.ParameterInfo")])]));

    $.Field({Static:false, Public:false}, "_membersTable", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo"), $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.MemberInfo")])]));

    $.Field({Static:false, Public:false}, "_parametersTable", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Reflection.ParameterInfo")]), $asm0F.TypeRef("System.Reflection.ParameterInfo")]));

    $.Field({Static:false, Public:false}, "_constructor", $asm0F.TypeRef("System.Reflection.ConstructorInfo"));

    $.Field({Static:false, Public:false}, "_lock", $.Object);

    $.Property({Static:false, Public:true }, "OriginalPart", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePartDefinition"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsDisposalRequired", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsIdentityComparison", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "DisplayName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Origin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.ImplementInterfaces(
      /* 0 */ $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.IReflectionPartCreationInfo"), 
      /* 1 */ $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.GenericSpecializationPartCreationInfo+<>c__DisplayClass13_0 */ 

(function $l$gc__DisplayClass13_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.GenericSpecializationPartCreationInfo+<>c__DisplayClass13_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l.ctor$gb__0", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type"))
    );

    $.Field({Static:false, Public:true }, "specialization", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")]));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.GenericSpecializationPartCreationInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.ReflectionModel.GenericSpecializationPartCreationInfo+<>c__DisplayClass26_0 */ 

(function $l$gc__DisplayClass26_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.GenericSpecializationPartCreationInfo+<>c__DisplayClass26_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lTranslateImport$gb__0", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.MemberInfo")]))
    );

    $.Field({Static:false, Public:true }, "lazyMember", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.GenericSpecializationPartCreationInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.ReflectionModel.GenericSpecializationPartCreationInfo+<>c__DisplayClass26_1 */ 

(function $l$gc__DisplayClass26_1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.GenericSpecializationPartCreationInfo+<>c__DisplayClass26_1", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lTranslateImport$gb__1", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.ParameterInfo"))
    );

    $.Field({Static:false, Public:true }, "lazyParameter", $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Reflection.ParameterInfo")]));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.GenericSpecializationPartCreationInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.ReflectionModel.GenericSpecializationPartCreationInfo+<>c__DisplayClass28_0 */ 

(function $l$gc__DisplayClass28_0$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.GenericSpecializationPartCreationInfo+<>c__DisplayClass28_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lTranslateExpot$gb__0", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.MemberInfo")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "$lTranslateExpot$gb__1", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.Field({Static:false, Public:true }, "capturedLazyMember", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo"));

    $.Field({Static:false, Public:true }, "capturedReflectionExport", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionMemberExportDefinition"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.GenericSpecializationPartCreationInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.ComponentModel.Composition.Primitives");
/* class System.ComponentModel.Composition.Primitives.ExportDefinition */ 

(function ExportDefinition$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Primitives.ExportDefinition", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ContractName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_contractName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "ContractName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.PartCreatorExportDefinition */ 

(function PartCreatorExportDefinition$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.PartCreatorExportDefinition", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ContractName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:true , Public:false}, "IsProductConstraintSatisfiedBy", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_productDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"));

    $.Field({Static:false, Public:false}, "_metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:true , Virtual:true }, "ContractName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Primitives.ImportDefinition */ 

(function ImportDefinition$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Primitives.ImportDefinition", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm15.TypeRef("System.Linq.Expressions.Expression`1", [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean])]), $.String, 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality"), $.Boolean, 
          $.Boolean, $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality"), 
          $.Boolean, $.Boolean, 
          $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Cardinality", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Constraint", 
      JSIL.MethodSignature.Return($asm15.TypeRef("System.Linq.Expressions.Expression`1", [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean])]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ContractName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsPrerequisite", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsRecomposable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsConstraintSatisfiedBy", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "EmptyContractName", $.String, function ($pi) {
        return $asm0F.System.String.Empty;
      });

    $.Field({Static:false, Public:false, ReadOnly:true }, "_constraint", $asm15.TypeRef("System.Linq.Expressions.Expression`1", [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean])]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_cardinality", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_contractName", $.String);

    $.Field({Static:false, Public:false, ReadOnly:true }, "_isRecomposable", $.Boolean);

    $.Field({Static:false, Public:false, ReadOnly:true }, "_isPrerequisite", $.Boolean);

    $.Field({Static:false, Public:false}, "_compiledConstraint", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:true , Virtual:true }, "ContractName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:true , Virtual:true }, "Cardinality", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality"));

    $.Property({Static:false, Public:true , Virtual:true }, "Constraint", $asm15.TypeRef("System.Linq.Expressions.Expression`1", [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean])]));

    $.Property({Static:false, Public:true , Virtual:true }, "IsPrerequisite", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsRecomposable", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition */ 

(function ContractBasedImportDefinition$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), 
      Name: "System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0F.TypeRef("System.Type")])]), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality"), 
          $.Boolean, $.Boolean, 
          $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"), $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Constraint", 
      JSIL.MethodSignature.Return($asm15.TypeRef("System.Linq.Expressions.Expression`1", [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean])]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_RequiredCreationPolicy", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_RequiredMetadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0F.TypeRef("System.Type")])]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_RequiredTypeIdentity", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsConstraintSatisfiedBy", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "MatchRequiredMetadata", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateRequiredMetadata", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_requiredMetadata", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0F.TypeRef("System.Type")])]));

    $.Field({Static:false, Public:false}, "_constraint", $asm15.TypeRef("System.Linq.Expressions.Expression`1", [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean])]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_requiredCreationPolicy", $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_requiredTypeIdentity", $.String);

    $.Field({Static:false, Public:false}, "_isRequiredMetadataValidated", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "RequiredTypeIdentity", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "RequiredMetadata", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0F.TypeRef("System.Type")])]));

    $.Property({Static:false, Public:true , Virtual:true }, "RequiredCreationPolicy", $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"));

    $.Property({Static:false, Public:true , Virtual:true }, "Constraint", $asm15.TypeRef("System.Linq.Expressions.Expression`1", [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean])]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionImportDefinition */ 

(function ReflectionImportDefinition$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionImportDefinition", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 9, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0F.TypeRef("System.Type")])]), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality"), 
          $.Boolean, $.Boolean, 
          $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"), $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_DisplayName");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"))
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_Origin");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ToImportingItem", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportingItem"))
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_origin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.Origin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.ImplementInterfaces(
      /* 0 */ $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionParameterImportDefinition */ 

(function ReflectionParameterImportDefinition$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionImportDefinition"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionParameterImportDefinition", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Reflection.ParameterInfo")]), $.String, 
          $.String, $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0F.TypeRef("System.Type")])]), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality"), $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"), 
          $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ImportingLazyParameter", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Reflection.ParameterInfo")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ToImportingItem", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportingItem"))
    );

    $.Field({Static:false, Public:false}, "_importingLazyParameter", $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Reflection.ParameterInfo")]));

    $.Property({Static:false, Public:true }, "ImportingLazyParameter", $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Reflection.ParameterInfo")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.PartCreatorParameterImportDefinition */ 

(function PartCreatorParameterImportDefinition$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionParameterImportDefinition"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.PartCreatorParameterImportDefinition", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Reflection.ParameterInfo")]), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Constraint", 
      JSIL.MethodSignature.Return($asm15.TypeRef("System.Linq.Expressions.Expression`1", [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean])]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ProductImportDefinition", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsConstraintSatisfiedBy", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_productImportDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"));

    $.Property({Static:false, Public:true , Virtual:true }, "ProductImportDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"));

    $.Property({Static:false, Public:true , Virtual:true }, "Constraint", $asm15.TypeRef("System.Linq.Expressions.Expression`1", [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean])]));

    $.ImplementInterfaces(
      /* 1 */ $asm13.TypeRef("System.ComponentModel.Composition.Primitives.IPartCreatorImportDefinition")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionMemberImportDefinition */ 

(function ReflectionMemberImportDefinition$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionImportDefinition"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionMemberImportDefinition", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 10, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo"), $.String, 
          $.String, $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0F.TypeRef("System.Type")])]), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality"), $.Boolean, 
          $.Boolean, $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"), 
          $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ImportingLazyMember", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ToImportingItem", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportingItem"))
    );

    $.Field({Static:false, Public:false}, "_importingLazyMember", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo"));

    $.Property({Static:false, Public:true }, "ImportingLazyMember", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.PartCreatorMemberImportDefinition */ 

(function PartCreatorMemberImportDefinition$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionMemberImportDefinition"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.PartCreatorMemberImportDefinition", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Constraint", 
      JSIL.MethodSignature.Return($asm15.TypeRef("System.Linq.Expressions.Expression`1", [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean])]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ProductImportDefinition", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsConstraintSatisfiedBy", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_productImportDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"));

    $.Property({Static:false, Public:true , Virtual:true }, "ProductImportDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"));

    $.Property({Static:false, Public:true , Virtual:true }, "Constraint", $asm15.TypeRef("System.Linq.Expressions.Expression`1", [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean])]));

    $.ImplementInterfaces(
      /* 1 */ $asm13.TypeRef("System.ComponentModel.Composition.Primitives.IPartCreatorImportDefinition")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Primitives.ComposablePart */ 

(function ComposablePart$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Primitives.ComposablePart", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Activate", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ExportDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ImportDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExportedValue", 
      new JSIL.MethodSignature($.Object, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetImport", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])])
    );

    $.Property({Static:false, Public:true , Virtual:true }, "ExportDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Property({Static:false, Public:true , Virtual:true }, "ImportDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]));

    $.Property({Static:false, Public:true , Virtual:true }, "Metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePart */ 

(function ReflectionComposablePart$Members () {
  var $, $thisType;








































  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePart", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePartDefinition"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePartDefinition"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lRequiresActivation$gb__39_0", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Activate", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateInstance", 
      new JSIL.MethodSignature($.Object, [$asm0F.TypeRef("System.Reflection.ConstructorInfo"), $jsilcore.TypeRef("System.Array", [$.Object])])
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureCardinality", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureGettable", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EnsureRunning", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureSettable", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CachedInstance", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Definition", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePartDefinition"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ExportDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ImportDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ImportsCache", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportingItem")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ImportValues", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetConstructorArguments", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExportedValue", 
      new JSIL.MethodSignature($.Object, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExportedValue", 
      new JSIL.MethodSignature($.Object, [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ExportingMember")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetExportingMember", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ExportingMember"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExportingMemberFromDefinition", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ExportingMember"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetImportingItem", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportingItem"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetImportingItemFromDefinition", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportingItem"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetInstanceActivatingIfNeeded", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyImportSatisfied", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseInstanceIfNecessary", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "RequiresActivation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "RequiresRunning", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "SetExportedValueForImport", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportingItem"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetImport", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetImport", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportingItem"), $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetNonPrerequisiteImports", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "SetPrerequisiteImports", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_DisplayName");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"))
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_Origin");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetImportValue", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $jsilcore.TypeRef("JSIL.Reference", [$.Object])])
    );

    $.ExternalMethod({Static:false, Public:false}, "UseImportedValues", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm0F.TypeRef("System.Action`3", [
              $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportingItem"), "!!0", 
              $.Object
            ]), 
          $.Boolean
        ], ["TImportDefinition"])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_definition", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePartDefinition"));

    $.Field({Static:false, Public:false}, "_importValues", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2"));

    $.Field({Static:false, Public:false}, "_importsCache", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2"));

    $.Field({Static:false, Public:false}, "_exportsCache", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2"));

    $.Field({Static:false, Public:false}, "_invokeImportsSatisfied", $asm0F.TypeRef("System.Boolean"));

    $.Field({Static:false, Public:false}, "_initialCompositionComplete", $.Boolean);

    $.Field({Static:false, Public:false}, "_cachedInstance", $asm0F.TypeRef("System.Object"));

    $.Field({Static:false, Public:false}, "_lock", $.Object);

    $.Property({Static:false, Public:false}, "ImportValues", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $.Object]));

    $.Property({Static:false, Public:false}, "ImportsCache", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportingItem")]));

    $.Property({Static:false, Public:false}, "CachedInstance", $.Object);

    $.Property({Static:false, Public:true }, "Definition", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePartDefinition"));

    $.Property({Static:false, Public:true , Virtual:true }, "Metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:true , Virtual:true }, "ImportDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]));

    $.Property({Static:false, Public:true , Virtual:true }, "ExportDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.Origin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.ImplementInterfaces(
      /* 0 */ $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePart+<>c__DisplayClass38_0 */ 

(function $l$gc__DisplayClass38_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePart+<>c__DisplayClass38_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetConstructorArguments$gb__0", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportingItem"), $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionParameterImportDefinition"), 
          $.Object
        ])
    );

    $.Field({Static:false, Public:true }, "$arguments", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePart"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePart+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePart+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lEnsureGettable$gb__40_0", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lSetNonPrerequisiteImports$gb__44_0", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lSetPrerequisiteImports$gb__45_0", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__40_0", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $.Boolean]));

    $.Field({Static:true , Public:true }, "$l$g9__44_0", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $.Boolean]));

    $.Field({Static:true , Public:true }, "$l$g9__45_0", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $.Boolean]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.ReflectionModel.DisposableReflectionComposablePart */ 

(function DisposableReflectionComposablePart$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePart"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.DisposableReflectionComposablePart", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePartDefinition"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EnsureRunning", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseInstanceIfNecessary", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "_isDisposed", $asm0F.TypeRef("System.Int32"));

    $.ImplementInterfaces(
      /* 1 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.ComponentModel.Composition.ReflectionModel.IReflectionPartCreationInfo */ 

JSIL.MakeInterface(
  "System.ComponentModel.Composition.ReflectionModel.IReflectionPartCreationInfo", false, [], function ($) {
    $.Method({}, "GetPartType", JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type")));
    $.Method({}, "GetConstructor", JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.ConstructorInfo")));
    $.Method({}, "GetMetadata", JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])));
    $.Method({}, "GetExports", JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])));
    $.Method({}, "GetImports", JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])));
    $.Method({}, "get_IsDisposalRequired", JSIL.MethodSignature.Return($.Boolean));
    $.Method({}, "get_IsIdentityComparison", JSIL.MethodSignature.Return($.Boolean));
    $.Property({}, "IsDisposalRequired");
    $.Property({}, "IsIdentityComparison");
  }, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")]);

/* struct System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo */ 

(function LazyMemberInfo$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Reflection.MemberInfo"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Reflection.MemberTypes"), $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.MemberInfo")])])
    )
      .Parameter(1, "accessors", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Reflection.MemberTypes"), $asm0F.TypeRef("System.Func`1", [$jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.MemberInfo")])])])
    );

    $.ExternalMethod({Static:true , Public:false}, "AreAccessorsValid", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0F.TypeRef("System.Reflection.MemberTypes"), $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.MemberInfo")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureSupportedMemberType", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Reflection.MemberTypes"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MemberType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.MemberTypes"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetAccessors", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.MemberInfo")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_memberType", $asm0F.TypeRef("System.Reflection.MemberTypes"));

    $.Field({Static:false, Public:false}, "_accessors", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.MemberInfo")]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_accessorsCreator", $asm0F.TypeRef("System.Func`1", [$jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.MemberInfo")])]));

    $.Property({Static:false, Public:true }, "MemberType", $asm0F.TypeRef("System.Reflection.MemberTypes"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lAreAccessorsValid$gb__14_0", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Reflection.MemberInfo")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lAreAccessorsValid$gb__14_1", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Reflection.MemberInfo")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lAreAccessorsValid$gb__14_2", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Reflection.MemberInfo")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__14_0", $asm0F.TypeRef("System.Func`2", [$asm0F.TypeRef("System.Reflection.MemberInfo"), $.Boolean]));

    $.Field({Static:true , Public:true }, "$l$g9__14_1", $asm0F.TypeRef("System.Func`2", [$asm0F.TypeRef("System.Reflection.MemberInfo"), $.Boolean]));

    $.Field({Static:true , Public:true }, "$l$g9__14_2", $asm0F.TypeRef("System.Func`2", [$asm0F.TypeRef("System.Reflection.MemberInfo"), $.Boolean]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionExtensions */ 

(function ReflectionExtensions$Members () {
  var $, $thisType;











  JSIL.MakeStaticClass("System.ComponentModel.Composition.ReflectionModel.ReflectionExtensions", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CreateReflectionProperty", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionProperty"), [$asm0F.TypeRef("System.Reflection.MethodInfo"), $asm0F.TypeRef("System.Reflection.MethodInfo")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToLazyMember", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo"), [$asm0F.TypeRef("System.Reflection.MemberInfo")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToReflectionField", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionField"), [$asm0F.TypeRef("System.Reflection.FieldInfo")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToReflectionMember", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionMember"), [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToReflectionMethod", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionMethod"), [$asm0F.TypeRef("System.Reflection.MethodInfo")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToReflectionParameter", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionParameter"), [$asm0F.TypeRef("System.Reflection.ParameterInfo")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToReflectionProperty", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionProperty"), [$asm0F.TypeRef("System.Reflection.PropertyInfo")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToReflectionType", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionType"), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToReflectionWritableMember", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionWritableMember"), [$asm0F.TypeRef("System.Reflection.MemberInfo")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToReflectionWriteableMember", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionWritableMember"), [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ImportingItem */ 

(function ImportingItem$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ImportingItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportType")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Cast", 
      new JSIL.MethodSignature($.Object, [$asm0F.TypeRef("System.Type"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CastExportsToCollectionImportType", 
      new JSIL.MethodSignature($.Object, [$jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "CastExportsToImportType", 
      new JSIL.MethodSignature($.Object, [$jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "CastExportsToSingleImportType", 
      new JSIL.MethodSignature($.Object, [$jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "CastSingleExportToImportType", 
      new JSIL.MethodSignature($.Object, [$asm0F.TypeRef("System.Type"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Definition", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ImportType", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportType"))
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_definition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_importType", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportType"));

    $.Property({Static:false, Public:true }, "Definition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"));

    $.Property({Static:false, Public:true }, "ImportType", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportType"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ImportingParameter */ 

(function ImportingParameter$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportingItem"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ImportingParameter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportType")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ExportingMember */ 

(function ExportingMember$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ExportingMember", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionMember")])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureReadable", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Definition", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RequiresInstance", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExportedValue", 
      new JSIL.MethodSignature($.Object, [$.Object, $.Object])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_definition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_member", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionMember"));

    $.Field({Static:false, Public:false}, "_cachedValue", $.Object);

    $.Field({Static:false, Public:false}, "_isValueCached", $asm0F.TypeRef("System.Boolean"));

    $.Property({Static:false, Public:true }, "RequiresInstance", $.Boolean);

    $.Property({Static:false, Public:true }, "Definition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ImportingMember */ 

(function ImportingMember$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportingItem"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ImportingMember", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionWritableMember"), 
          $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportType")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureCollectionIsWritable", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.ICollection`1", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureWritable", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GetNormalizedCollection", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.ICollection`1", [$.Object]), [$asm0F.TypeRef("System.Type"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "PopulateCollection", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Collections.Generic.ICollection`1", [$.Object]), $asm0F.TypeRef("System.Collections.IEnumerable")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RequiresCollectionNormalization", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetCollectionMemberValue", 
      new JSIL.MethodSignature(null, [$.Object, $asm0F.TypeRef("System.Collections.IEnumerable")])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetExportedValue", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetSingleMemberValue", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_member", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionWritableMember"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ImportType */ 

(function ImportType$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Type)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };








  function ImportType_get_ElementType () {
    return this.ImportType$ElementType$value;
  }; 


  function ImportType_get_IsPartCreator () {
    return this.ImportType$IsPartCreator$value;
  }; 

  function ImportType_get_MetadataViewType () {
    return this.ImportType$MetadataViewType$value;
  }; 






  function ImportType_set_ElementType (value) {
    this.ImportType$ElementType$value = value;
  }; 

  function ImportType_set_IsPartCreator (value) {
    this.ImportType$IsPartCreator$value = value;
  }; 

  function ImportType_set_MetadataViewType (value) {
    this.ImportType$MetadataViewType$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ImportType", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Type"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckForCollection", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Type"), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ActualType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CastExport", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"), $.Object]))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CastSingleValueCache", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"), $.Object])]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ContractType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type"))
    );

    $.Method({Static:false, Public:true }, "get_ElementType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type")), 
      ImportType_get_ElementType
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_IsAssignableCollectionType", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_IsPartCreator", 
      JSIL.MethodSignature.Return($.Boolean), 
      ImportType_get_IsPartCreator
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_MetadataViewType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type")), 
      ImportType_get_MetadataViewType
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:true , Public:true }, "IsDescendentOf", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsGenericDescendentOf", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsLazyGenericType", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsTypeAssignableCollectionType", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Type")])
    );

    $.Method({Static:false, Public:false}, "set_ElementType", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Type")), 
      ImportType_set_ElementType
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsPartCreator", 
      JSIL.MethodSignature.Action($.Boolean), 
      ImportType_set_IsPartCreator
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_MetadataViewType", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Type")), 
      ImportType_set_MetadataViewType
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "TryGetCastFunction", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0F.TypeRef("System.Type"), $.Boolean, 
          $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"), $.Object])])
        ])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "LazyOfTType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Lazy$b1.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "LazyOfTMType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm13.System.Lazy$b2.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "ExportFactoryOfTType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm13.System.ComponentModel.Composition.ExportFactory$b1.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "ExportFactoryOfTMType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm13.System.ComponentModel.Composition.ExportFactory$b2.__Type__;
      });

    $.Field({Static:false, Public:false, ReadOnly:true }, "_type", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_isAssignableCollectionType", $.Boolean);

    $.Field({Static:false, Public:false}, "_contractType", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "_castSingleValue", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"), $.Object]));

    $.Field({Static:false, Public:false}, "_isOpenGeneric", $.Boolean);

    $.Field({Static:true , Public:false}, "_castSingleValueCache", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"), $.Object])]));

    $.Field({Static:false, Public:false}, "ImportType$ElementType$value", $asm0F.TypeRef("System.Type"))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ImportType$IsPartCreator$value", $.Boolean)
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ImportType$MetadataViewType$value", $asm0F.TypeRef("System.Type"))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:true , Public:false}, "CastSingleValueCache", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"), $.Object])]));

    $.Property({Static:false, Public:true }, "IsAssignableCollectionType", $.Boolean);

    $.Property({Static:false, Public:true }, "ElementType", $asm0F.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "ActualType", $asm0F.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "IsPartCreator", $.Boolean);

    $.Property({Static:false, Public:true }, "ContractType", $asm0F.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "CastExport", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"), $.Object]));

    $.Property({Static:false, Public:true }, "MetadataViewType", $asm0F.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Primitives.ComposablePartDefinition */ 

(function ComposablePartDefinition$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Primitives.ComposablePartDefinition", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreatePart", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ExportDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ImportDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetGenericPartDefinition", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "TryGetExports", 
      new JSIL.MethodSignature($.Boolean, [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $jsilcore.TypeRef("JSIL.Reference", [$asm0F.TypeRef("System.Tuple`2", [$.Type, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Tuple`2", [$.Type, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])])])
        ])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "_EmptyExports", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Tuple`2", [$.Type, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]));

    $.Property({Static:false, Public:true , Virtual:true }, "ExportDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Property({Static:false, Public:true , Virtual:true }, "ImportDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]));

    $.Property({Static:false, Public:true , Virtual:true }, "Metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePartDefinition */ 

(function ReflectionComposablePartDefinition$Members () {
  var $, $thisType;





















  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePartDefinition", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.IReflectionPartCreationInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreatePart", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ExportDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ExportDefinitionsInternal", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ImportDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsDisposalRequired", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetCandidateParameters", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")])]), [$jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetConstructor", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.ConstructorInfo"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetGenericPartDefinition", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetPartType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_DisplayName");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"))
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_Origin");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "TryGetExports", 
      new JSIL.MethodSignature($.Boolean, [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $jsilcore.TypeRef("JSIL.Reference", [$asm0F.TypeRef("System.Tuple`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Tuple`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryGetGenericTypeParameters", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetNonGenericExports", 
      new JSIL.MethodSignature($.Boolean, [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $jsilcore.TypeRef("JSIL.Reference", [$asm0F.TypeRef("System.Tuple`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Tuple`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])])])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryMakeGenericPartDefinition", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")]), $jsilcore.TypeRef("JSIL.Reference", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_creationInfo", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.IReflectionPartCreationInfo"));

    $.Field({Static:false, Public:false}, "_imports", $asm13.TypeRef("System.Array"));

    $.Field({Static:false, Public:false}, "_exports", $asm13.TypeRef("System.Array"));

    $.Field({Static:false, Public:false}, "_metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2"));

    $.Field({Static:false, Public:false}, "_constructor", $asm0F.TypeRef("System.Reflection.ConstructorInfo"));

    $.Field({Static:false, Public:false}, "_lock", $.Object);

    $.Property({Static:false, Public:false}, "ExportDefinitionsInternal", $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Property({Static:false, Public:true , Virtual:true }, "ExportDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Property({Static:false, Public:true , Virtual:true }, "ImportDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]));

    $.Property({Static:false, Public:true , Virtual:true }, "Metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:false}, "IsDisposalRequired", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.Origin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.ImplementInterfaces(
      /* 0 */ $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePartDefinition+<GetCandidateParameters>d__24 */ 

(function $lGetCandidateParameters$gd__24$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePartDefinition+<GetCandidateParameters>d__24", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Type$lb$rb$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")])]))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")])]), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Type$lb$rb$g.get_Current", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")]))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")])]), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePartDefinition"));

    $.Field({Static:false, Public:false}, "genericParameters", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")]));

    $.Field({Static:false, Public:true }, "$l$g3__genericParameters", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Field({Static:false, Public:false}, "$l$g7__wrap2", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Type$lb$rb$g.Current", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")])]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")])]), 
      /* 3 */ $asm0F.TypeRef("System.IDisposable"), 
      /* 4 */ $asm0F.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionMemberExportDefinition */ 

(function ReflectionMemberExportDefinition$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionMemberExportDefinition", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ContractName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ExportingLazyMember", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetIndex", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_DisplayName");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"))
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_Origin");

    $.ExternalMethod({Static:false, Public:true }, "ToExportingMember", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ExportingMember"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ToReflectionMember", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionMember"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_member", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_exportDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_origin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.Field({Static:false, Public:false}, "_metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:true , Virtual:true }, "ContractName", $.String);

    $.Property({Static:false, Public:true }, "ExportingLazyMember", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo"));

    $.Property({Static:false, Public:true , Virtual:true }, "Metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.Origin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.ImplementInterfaces(
      /* 0 */ $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices */ 

(function ReflectionModelServices$Members () {
  var $, $thisType;






  JSIL.MakeStaticClass("System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CreateExportDefinition", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), [
          $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo"), $.String, 
          $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])]), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateImportDefinition", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"), [
          $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo"), $.String, 
          $.String, $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0F.TypeRef("System.Type")])]), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality"), $.Boolean, 
          $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"), $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $.Boolean, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateImportDefinition", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"), [
          $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo"), $.String, 
          $.String, $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0F.TypeRef("System.Type")])]), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality"), $.Boolean, 
          $.Boolean, $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"), 
          $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $.Boolean, 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateImportDefinition", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"), [
          $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Reflection.ParameterInfo")]), $.String, 
          $.String, $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0F.TypeRef("System.Type")])]), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality"), $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"), 
          $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $.Boolean, 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreatePartDefinition", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), [
          $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Type")]), $.Boolean, 
          $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])]), $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]), 
          $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])]), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Security.SecurityCriticalAttribute"));

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionPartCreationInfo */ 

(function ReflectionPartCreationInfo$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionPartCreationInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Type")]), $.Boolean, 
          $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])]), $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]), 
          $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])]), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsDisposalRequired", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsIdentityComparison", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Origin", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetConstructor", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.ConstructorInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExports", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetImports", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetMetadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetPartType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type"))
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_partType", $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_imports", $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_exports", $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_metadata", $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_origin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.Field({Static:false, Public:false}, "_constructor", $asm0F.TypeRef("System.Reflection.ConstructorInfo"));

    $.Field({Static:false, Public:false}, "_isDisposalRequired", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsDisposalRequired", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsIdentityComparison", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "DisplayName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Origin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.ImplementInterfaces(
      /* 0 */ $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.IReflectionPartCreationInfo"), 
      /* 1 */ $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionPartCreationInfo+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionPartCreationInfo+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetConstructor$gb__10_0", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Reflection.MemberInfo"), [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionParameterImportDefinition")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__10_0", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionParameterImportDefinition"), $asm0F.TypeRef("System.Reflection.MemberInfo")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionPartCreationInfo+<GetExports>d__16 */ 

(function $lGetExports$gd__16$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionPartCreationInfo+<GetExports>d__16", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.ComponentModel.Composition.Primitives.ExportDefinition$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.ComponentModel.Composition.Primitives.ExportDefinition$g.get_Current", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionPartCreationInfo"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.ComponentModel.Composition.Primitives.ExportDefinition$g.Current", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]), 
      /* 3 */ $asm0F.TypeRef("System.IDisposable"), 
      /* 4 */ $asm0F.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionPartCreationInfo+<GetImports>d__17 */ 

(function $lGetImports$gd__17$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionPartCreationInfo+<GetImports>d__17", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.ComponentModel.Composition.Primitives.ImportDefinition$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.ComponentModel.Composition.Primitives.ImportDefinition$g.get_Current", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionPartCreationInfo"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.ComponentModel.Composition.Primitives.ImportDefinition$g.Current", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]), 
      /* 3 */ $asm0F.TypeRef("System.IDisposable"), 
      /* 4 */ $asm0F.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.ReflectionModel.LazyExportDefinition */ 

(function LazyExportDefinition$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.LazyExportDefinition", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_metadata", $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])]));

    $.Property({Static:false, Public:true , Virtual:true }, "Metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionItem */ 

(function ReflectionItem$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ReturnType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:true , Virtual:true }, "Name", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "ReturnType", $asm0F.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionMember */ 

(function ReflectionMember$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionItem"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionMember", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanRead", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DeclaringType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_RequiresInstance", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_UnderlyingMember", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.MemberInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.Property({Static:false, Public:true , Virtual:true }, "CanRead", $.Boolean);

    $.Property({Static:false, Public:true }, "DeclaringType", $asm0F.TypeRef("System.Type"));

    $.Property({Static:false, Public:true , Virtual:true }, "Name", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "RequiresInstance", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "UnderlyingMember", $asm0F.TypeRef("System.Reflection.MemberInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionWritableMember */ 

(function ReflectionWritableMember$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionMember"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionWritableMember", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanWrite", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.Property({Static:false, Public:true , Virtual:true }, "CanWrite", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionField */ 

(function ReflectionField$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionWritableMember"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionField", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Reflection.FieldInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanRead", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanWrite", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_RequiresInstance", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ReturnType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UndelyingField", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.FieldInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_UnderlyingMember", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.MemberInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_field", $asm0F.TypeRef("System.Reflection.FieldInfo"));

    $.Property({Static:false, Public:true }, "UndelyingField", $asm0F.TypeRef("System.Reflection.FieldInfo"));

    $.Property({Static:false, Public:true , Virtual:true }, "UnderlyingMember", $asm0F.TypeRef("System.Reflection.MemberInfo"));

    $.Property({Static:false, Public:true , Virtual:true }, "CanRead", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanWrite", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "RequiresInstance", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ReturnType", $asm0F.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionParameter */ 

(function ReflectionParameter$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionItem"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionParameter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Reflection.ParameterInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ReturnType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UnderlyingParameter", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.ParameterInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_parameter", $asm0F.TypeRef("System.Reflection.ParameterInfo"));

    $.Property({Static:false, Public:true }, "UnderlyingParameter", $asm0F.TypeRef("System.Reflection.ParameterInfo"));

    $.Property({Static:false, Public:true , Virtual:true }, "Name", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "ReturnType", $asm0F.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionProperty */ 

(function ReflectionProperty$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionWritableMember"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionProperty", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Reflection.MethodInfo"), $asm0F.TypeRef("System.Reflection.MethodInfo")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanRead", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanWrite", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_RequiresInstance", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ReturnType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UnderlyingGetMethod", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_UnderlyingMember", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.MemberInfo"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UnderlyingSetMethod", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_getMethod", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_setMethod", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Property({Static:false, Public:true , Virtual:true }, "UnderlyingMember", $asm0F.TypeRef("System.Reflection.MemberInfo"));

    $.Property({Static:false, Public:true , Virtual:true }, "CanRead", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanWrite", $.Boolean);

    $.Property({Static:false, Public:true }, "UnderlyingGetMethod", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Property({Static:false, Public:true }, "UnderlyingSetMethod", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Property({Static:false, Public:true , Virtual:true }, "Name", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "RequiresInstance", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ReturnType", $asm0F.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionType */ 

(function ReflectionType$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionMember"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionType", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanRead", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_RequiresInstance", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ReturnType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_UnderlyingMember", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.MemberInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.Field({Static:false, Public:false}, "_type", $asm0F.TypeRef("System.Type"));

    $.Property({Static:false, Public:true , Virtual:true }, "UnderlyingMember", $asm0F.TypeRef("System.Reflection.MemberInfo"));

    $.Property({Static:false, Public:true , Virtual:true }, "CanRead", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "RequiresInstance", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ReturnType", $asm0F.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.ReflectionModel.ReflectionMethod */ 

(function ReflectionMethod$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionMember"), 
      Name: "System.ComponentModel.Composition.ReflectionModel.ReflectionMethod", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanRead", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_RequiresInstance", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ReturnType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_UnderlyingMember", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.MemberInfo"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UnderlyingMethod", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "SafeCreateExportedDelegate", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportedDelegate"), [$.Object, $asm0F.TypeRef("System.Reflection.MethodInfo")])
    )
      .Attribute($asm0F.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_method", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Property({Static:false, Public:true }, "UnderlyingMethod", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Property({Static:false, Public:true , Virtual:true }, "UnderlyingMember", $asm0F.TypeRef("System.Reflection.MemberInfo"));

    $.Property({Static:false, Public:true , Virtual:true }, "CanRead", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "RequiresInstance", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ReturnType", $asm0F.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.ComponentModel.Composition.Primitives.IPartCreatorImportDefinition */ 

JSIL.MakeInterface(
  "System.ComponentModel.Composition.Primitives.IPartCreatorImportDefinition", false, [], function ($) {
    $.Method({}, "get_ProductImportDefinition", JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition")));
    $.Property({}, "ProductImportDefinition");
  }, []);

/* class System.ComponentModel.Composition.Primitives.PrimitivesServices */ 

(function PrimitivesServices$Members () {
  var $, $thisType;






  JSIL.MakeStaticClass("System.ComponentModel.Composition.Primitives.PrimitivesServices", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "GetCandidateContractNames", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetProductImportDefinition", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsGeneric", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsImportDependentOnPart", 
      new JSIL.MethodSignature($.Boolean, [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TranslateImport", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Primitives.PrimitivesServices+<GetCandidateContractNames>d__2 */ 

(function $lGetCandidateContractNames$gd__2$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Primitives.PrimitivesServices+<GetCandidateContractNames>d__2", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.String$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$.String]))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.String")]), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.String$g.get_Current", 
      JSIL.MethodSignature.Return($.String)
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.String")]), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $.String);

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "$import", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"));

    $.Field({Static:false, Public:true }, "$l$g3__import", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"));

    $.Field({Static:false, Public:false}, "part", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"));

    $.Field({Static:false, Public:true }, "$l$g3__part", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"));

    $.Field({Static:false, Public:false}, "$lgenericContractName$g5__1", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.String$g.Current", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$.String]), 
      /* 3 */ $asm0F.TypeRef("System.IDisposable"), 
      /* 4 */ $asm0F.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Primitives.ComposablePartCatalog */ 

(function ComposablePartCatalog$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Primitives.ComposablePartCatalog", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Parts", 
      JSIL.MethodSignature.Return($asm15.TypeRef("System.Linq.IQueryable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetCandidateParts", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Tuple`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_isDisposed", $.Boolean);

    $.Field({Static:false, Public:false}, "_queryableParts", $asm15.TypeRef("System.Linq.IQueryable`1"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "_EmptyExportsList", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0F.TypeRef("System.Tuple`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]));

    $.Property({Static:false, Public:true , Virtual:true }, "Parts", $asm15.TypeRef("System.Linq.IQueryable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]));

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Primitives.ComposablePartException */ 

(function ComposablePartException$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Exception"), 
      Name: "System.ComponentModel.Composition.Primitives.ComposablePartException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), 
          $asm0F.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm0F.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Attribute($asm0F.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_element", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Primitives.SerializableCompositionElement */ 

(function SerializableCompositionElement$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Primitives.SerializableCompositionElement", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")])
    );

    $.ExternalMethod({Static:true , Public:true }, "FromICompositionElement", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Origin", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_displayName", $.String);

    $.Field({Static:false, Public:false, ReadOnly:true }, "_origin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.Property({Static:false, Public:true , Virtual:true }, "DisplayName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Origin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.ImplementInterfaces(
      /* 0 */ $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Primitives.CompositionElement */ 

(function CompositionElement$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.SerializableCompositionElement"), 
      Name: "System.ComponentModel.Composition.Primitives.CompositionElement", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "UnknownOrigin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_underlyingObject", $.Object);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Primitives.CompositionElementExtensions */ 

(function CompositionElementExtensions$Members () {
  var $, $thisType;











  JSIL.MakeStaticClass("System.ComponentModel.Composition.Primitives.CompositionElementExtensions", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "GetDisplayName", 
      new JSIL.MethodSignature($.String, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetDisplayName", 
      new JSIL.MethodSignature($.String, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDisplayNameCore", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToElement", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToElement", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToElement", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToElement", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToElement", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ToElementCore", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToSerializableElement", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Primitives.Export */ 

(function Export$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Primitives.Export", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm0F.TypeRef("System.Func`1", [$.Object])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $asm0F.TypeRef("System.Func`1", [$.Object])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Definition", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetExportedValueCore", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_definition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_exportedValueGetter", $asm0F.TypeRef("System.Func`1", [$.Object]));

    $.Field({Static:true , Public:false, ReadOnly:true }, "_EmptyValue", $.Object);

    $.Field({Static:false, Public:false}, "_exportedValue", $asm0F.TypeRef("System.Object"));

    $.Property({Static:false, Public:true , Virtual:true }, "Definition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"));

    $.Property({Static:false, Public:true }, "Metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:true }, "Value", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Primitives.ExportedDelegate */ 

(function ExportedDelegate$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Primitives.ExportedDelegate", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Object, $asm0F.TypeRef("System.Reflection.MethodInfo")])
    )
      .Attribute($asm0F.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateDelegate", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Delegate"), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateStandardDelegateType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type"))
    );

    $.Field({Static:false, Public:false}, "_instance", $.Object);

    $.Field({Static:false, Public:false}, "_method", $asm0F.TypeRef("System.Reflection.MethodInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.ComponentModel.Composition.Primitives.ICompositionElement */ 

JSIL.MakeInterface(
  "System.ComponentModel.Composition.Primitives.ICompositionElement", true, [], function ($) {
    $.Method({}, "get_DisplayName", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Origin", JSIL.MethodSignature.Return($.Type));
    $.Property({}, "DisplayName");
    $.Property({}, "Origin");
  }, []);

/* enum System.ComponentModel.Composition.Primitives.ImportCardinality */ 

JSIL.MakeEnum(
  {
    FullName: "System.ComponentModel.Composition.Primitives.ImportCardinality", 
    BaseType: $asm0F.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    ZeroOrOne: 0, 
    ExactlyOne: 1, 
    ZeroOrMore: 2, 
  }
);

JSIL.DeclareNamespace("System.ComponentModel.Composition.Hosting");
/* class System.ComponentModel.Composition.Hosting.ExportProvider */ 

(function ExportProvider$Members () {
  var $, $thisType;




































  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ExportProvider", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "add_ExportsChanged", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_ExportsChanging", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "BuildImportDefinition", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), [
          $asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Type"), 
          $.String, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExport", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Lazy`1", ["!!0"]), null, ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExport", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Lazy`1", ["!!0"]), [$.String], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExport", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Lazy`2", ["!!0", "!!1"]), null, ["T", "TMetadataView"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExport", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Lazy`2", ["!!0", "!!1"]), [$.String], ["T", "TMetadataView"])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExportCore", 
      new JSIL.MethodSignature($asm13.TypeRef("System.Lazy`2", ["!!0", "!!1"]), [$.String], ["T", "TMetadataView"])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExportCore", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Lazy`1", ["!!0"]), [$.String], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExportedValue", 
      new JSIL.MethodSignature("!!0", null, ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExportedValue", 
      new JSIL.MethodSignature("!!0", [$.String], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExportedValueCore", 
      new JSIL.MethodSignature("!!0", [$.String, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality")], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExportedValueOrDefault", 
      new JSIL.MethodSignature("!!0", null, ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExportedValueOrDefault", 
      new JSIL.MethodSignature("!!0", [$.String], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExportedValues", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), null, ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExportedValues", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$.String], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExportedValuesCore", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$.String], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.Lazy`2", [$.Object, $.Object])]), [
          $asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Type"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Lazy`1", ["!!0"])]), null, ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Lazy`1", ["!!0"])]), [$.String], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.Lazy`2", ["!!0", "!!1"])]), null, ["T", "TMetadataView"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.Lazy`2", ["!!0", "!!1"])]), [$.String], ["T", "TMetadataView"])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetExportsCore", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExportsCore", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Lazy`1", ["!!0"])]), [$.String], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExportsCore", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.Lazy`2", ["!!0", "!!1"])]), [$.String], ["T", "TMetadataView"])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExportsCore", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")]), [
          $asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Type"), 
          $.String, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnExportsChanged", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnExportsChanging", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_ExportsChanged", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_ExportsChanging", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "TryGetExports", 
      new JSIL.MethodSignature($.Boolean, [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetExportsCore", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ExportCardinalityCheckResult"), [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])])
        ])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "EmptyExports", $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")]), function ($pi) {
        return JSIL.Array.New($asm13.System.ComponentModel.Composition.Primitives.Export, 0);
      });

    $.Field({Static:false, Public:false}, "ExportsChanged", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs")]))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ExportsChanging", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs")]))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Event({Static:false, Public:true }, "ExportsChanged", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs")]));

    $.Event({Static:false, Public:true }, "ExportsChanging", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider */ 

(function CatalogExportProvider$Members () {
  var $, $thisType;


































  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionOptions")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AllowPartCollection", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateExport", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"), [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), 
          $.Boolean, $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "DetermineRejection", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "DisposePart", 
      new JSIL.MethodSignature(null, [
          $.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogPart"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureCanRun", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureCanSet", 
      new JSIL.MethodSignature(null, ["!!0"], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureRejection", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureRunning", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Catalog", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SourceProvider", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetComposablePart", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogPart"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExportedValue", 
      new JSIL.MethodSignature($.Object, [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogPart"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetExportsCore", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetExportsFromPartDefinitions", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]), [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPartQueryStateNode", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+PartQueryStateNode"), [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSharedPart", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogPart"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalGetExportsCore", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsRejected", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnCatalogChanging", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnExportsChangingInternal", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PreventPartCollection", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")])
    );

    $.ExternalMethod({Static:false, Public:false}, "QueryPartState", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+AtomicCompositionQueryState"), [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReleasePart", 
      new JSIL.MethodSignature(null, [
          $.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogPart"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SourceProvider", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateAtomicCompositionQueryForPartEquals", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+AtomicCompositionQueryState")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateAtomicCompositionQueryForPartInHashSet", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition"), $asm15.TypeRef("System.Collections.Generic.HashSet`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), 
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+AtomicCompositionQueryState")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateRejections", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_lock", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionLock"));

    $.Field({Static:false, Public:false}, "_activatedParts", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogPart")]));

    $.Field({Static:false, Public:false}, "_rejectedParts", $asm15.TypeRef("System.Collections.Generic.HashSet`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]));

    $.Field({Static:false, Public:false}, "_gcRoots", $asm0F.TypeRef("System.Runtime.CompilerServices.ConditionalWeakTable`2", [$.Object, $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")])]));

    $.Field({Static:false, Public:false}, "_partsToDispose", $asm15.TypeRef("System.Collections.Generic.HashSet`1", [$asm0F.TypeRef("System.IDisposable")]));

    $.Field({Static:false, Public:false}, "_catalog", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"));

    $.Field({Static:false, Public:false}, "_isDisposed", $asm0F.TypeRef("System.Boolean"));

    $.Field({Static:false, Public:false}, "_isRunning", $asm0F.TypeRef("System.Boolean"));

    $.Field({Static:false, Public:false}, "_disableSilentRejection", $.Boolean);

    $.Field({Static:false, Public:false}, "_sourceProvider", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"));

    $.Field({Static:false, Public:false}, "_importEngine", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine"));

    $.Field({Static:false, Public:false}, "_compositionOptions", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionOptions"));

    $.Field({Static:false, Public:false}, "_innerExportProvider", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"));

    $.Property({Static:false, Public:true }, "Catalog", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"));

    $.Property({Static:false, Public:true }, "SourceProvider", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"));

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+FactoryExport */ 

(function FactoryExport$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+FactoryExport", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateExportProduct", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Definition", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_UnderlyingExportDefinition", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_UnderlyingPartDefinition", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetExportedValueCore", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_partDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_exportDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"));

    $.Field({Static:false, Public:false}, "_factoryExportDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"));

    $.Field({Static:false, Public:false}, "_factoryExportPartDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+FactoryExport+FactoryExportPartDefinition"));

    $.Property({Static:false, Public:true , Virtual:true }, "Definition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"));

    $.Property({Static:false, Public:false}, "UnderlyingPartDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"));

    $.Property({Static:false, Public:false}, "UnderlyingExportDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+FactoryExport+FactoryExportPartDefinition */ 

(function FactoryExportPartDefinition$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+FactoryExport+FactoryExportPartDefinition", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+FactoryExport"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreatePart", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateProductExport", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ExportDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FactoryExportDefinition", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ImportDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]))
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_FactoryExport", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+FactoryExport"));

    $.Property({Static:false, Public:true , Virtual:true }, "ExportDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Property({Static:false, Public:true , Virtual:true }, "ImportDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]));

    $.Property({Static:false, Public:true }, "FactoryExportDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+FactoryExport+FactoryExportPart */ 

(function FactoryExportPart$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+FactoryExport+FactoryExportPart", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+FactoryExport+FactoryExportPartDefinition"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ExportDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ImportDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExportedValue", 
      new JSIL.MethodSignature($.Object, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetImport", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_definition", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+FactoryExport+FactoryExportPartDefinition"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_export", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"));

    $.Property({Static:false, Public:true , Virtual:true }, "ExportDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Property({Static:false, Public:true , Virtual:true }, "ImportDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]));

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+PartCreatorExport */ 

(function PartCreatorExport$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+FactoryExport"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+PartCreatorExport", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateExportProduct", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"))
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_catalogExportProvider", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+ScopeFactoryExport */ 

(function ScopeFactoryExport$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+FactoryExport"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+ScopeFactoryExport", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+ScopeManager"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionScopeDefinition"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateExportProduct", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"))
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_scopeManager", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+ScopeManager"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_catalog", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionScopeDefinition"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+ScopeFactoryExport+ScopeCatalogExport */ 

(function ScopeCatalogExport$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+ScopeFactoryExport+ScopeCatalogExport", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+ScopeFactoryExport"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Definition", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetExportedValueCore", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_scopeFactoryExport", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+ScopeFactoryExport"));

    $.Field({Static:false, Public:false}, "_childContainer", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionContainer"));

    $.Field({Static:false, Public:false}, "_export", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_lock", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Definition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"));

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+ScopeManager */ 

(function ScopeManager$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+ScopeManager", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionScopeDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateChildContainer", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionContainer"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateScopeExport", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"), [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionScopeDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetExportsCore", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:true , Public:false}, "TranslateImport", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.Field({Static:false, Public:false}, "_scopeDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionScopeDefinition"));

    $.Field({Static:false, Public:false}, "_catalogExportProvider", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogChangeProxy */ 

(function CatalogChangeProxy$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogChangeProxy", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), 
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetExports$gb__5_0", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Tuple`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])])
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Tuple`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.Field({Static:false, Public:false}, "_originalCatalog", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"));

    $.Field({Static:false, Public:false}, "_addedParts", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]));

    $.Field({Static:false, Public:false}, "_removedParts", $asm15.TypeRef("System.Collections.Generic.HashSet`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogExport */ 

(function CatalogExport$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogExport", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateExport", 
      new JSIL.MethodSignature($.Type, [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "DisposePartCore", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogPart"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Definition", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsSharedPart", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetExportedValueCore", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetPart", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogPart"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPartCore", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogPart"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ShouldUseSharedPart", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"), $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy")])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_catalogExportProvider", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_partDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_definition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"));

    $.Property({Static:false, Public:true , Virtual:true }, "Definition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"));

    $.Property({Static:false, Public:false, Virtual:true }, "IsSharedPart", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+NonSharedCatalogExport */ 

(function NonSharedCatalogExport$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogExport"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+NonSharedCatalogExport", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsSharedPart", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetPart", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogPart"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "_part", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogPart"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_lock", $.Object);

    $.Property({Static:false, Public:false, Virtual:true }, "IsSharedPart", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+InnerCatalogExportProvider */ 

(function InnerCatalogExportProvider$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+InnerCatalogExportProvider", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetExportsCore", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.Field({Static:false, Public:false}, "_outerExportProvider", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.ComponentModel.Composition.Hosting.CatalogExportProvider+AtomicCompositionQueryState */ 

JSIL.MakeEnum(
  {
    FullName: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+AtomicCompositionQueryState", 
    BaseType: $asm0F.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Unknown: 0, 
    TreatAsRejected: 1, 
    TreatAsValidated: 2, 
    NeedsTesting: 3, 
  }
);

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+PartQueryStateNode */ 

(function PartQueryStateNode$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+PartQueryStateNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+AtomicCompositionQueryState")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetQueryState", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+AtomicCompositionQueryState"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "IsMatchingDefinition", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $.Int32])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_previousNode", $.Type);

    $.Field({Static:false, Public:false, ReadOnly:true }, "_state", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+AtomicCompositionQueryState"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+PartEqualsQueryStateNode */ 

(function PartEqualsQueryStateNode$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+PartQueryStateNode"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+PartEqualsQueryStateNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+PartQueryStateNode"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+AtomicCompositionQueryState")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "IsMatchingDefinition", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $.Int32])
    );

    $.Field({Static:false, Public:false}, "_part", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"));

    $.Field({Static:false, Public:false}, "_hashCode", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+PartInHashSetQueryStateNode */ 

(function PartInHashSetQueryStateNode$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+PartQueryStateNode"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+PartInHashSetQueryStateNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm15.TypeRef("System.Collections.Generic.HashSet`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+PartQueryStateNode"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+AtomicCompositionQueryState")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "IsMatchingDefinition", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $.Int32])
    );

    $.Field({Static:false, Public:false}, "_parts", $asm15.TypeRef("System.Collections.Generic.HashSet`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogPart */ 

(function CatalogPart$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm13.System.ComponentModel.Composition.Primitives.ComposablePart)) ();
  };




  function CatalogPart_get_Part () {
    return this.CatalogPart$Part$value;
  }; 


  function CatalogPart_set_Part (value) {
    this.CatalogPart$Part$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+CatalogPart", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ImportsSatisfied", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_Part", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")), 
      CatalogPart_get_Part
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_ImportsSatisfied", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Method({Static:false, Public:false}, "set_Part", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")), 
      CatalogPart_set_Part
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "_importsSatisfied", $asm0F.TypeRef("System.Boolean"));

    $.Field({Static:false, Public:false}, "CatalogPart$Part$value", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Part", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"));

    $.Property({Static:false, Public:true }, "ImportsSatisfied", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass36_0 */ 

(function $l$gc__DisplayClass36_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass36_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lOnCatalogChanging$gb__0", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "capturedDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"));

    $.Field({Static:false, Public:true }, "CS$$l$g8__locals1", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass36_1"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass36_1 */ 

(function $l$gc__DisplayClass36_1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass36_1", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lOnCatalogChanging$gb__1", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "addedExports", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Field({Static:false, Public:true }, "removedExports", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass41_0 */ 

(function $l$gc__DisplayClass41_0$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass41_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lDisposePart$gb__0", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lDisposePart$gb__1", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "exportedValue", $.Object);

    $.Field({Static:false, Public:true }, "diposablePart", $asm0F.TypeRef("System.IDisposable"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass46_0 */ 

(function $l$gc__DisplayClass46_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass46_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lDetermineRejection$gb__1", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "definition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"));

    $.Field({Static:false, Public:true }, "exception", $asm13.TypeRef("System.ComponentModel.Composition.ChangeRejectedException"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass46_1 */ 

(function $l$gc__DisplayClass46_1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass46_1", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lDetermineRejection$gb__0", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "newPart", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"));

    $.Field({Static:false, Public:true }, "CS$$l$g8__locals1", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass46_0"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass47_0 */ 

(function $l$gc__DisplayClass47_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass47_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lUpdateRejections$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.Field({Static:false, Public:true }, "$import", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass47_1 */ 

(function $l$gc__DisplayClass47_1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass47_1", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lUpdateRejections$gb__1", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "capturedPartDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"));

    $.Field({Static:false, Public:true }, "CS$$l$g8__locals1", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass47_2"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass47_2 */ 

(function $l$gc__DisplayClass47_2$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CatalogExportProvider+<>c__DisplayClass47_2", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lUpdateRejections$gb__2", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "resurrectedExports", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.CompositionContainer */ 

(function CompositionContainer$Members () {
  var $, $thisType;
























  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"), 
      Name: "System.ComponentModel.Composition.Hosting.CompositionContainer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider")]))
    )
      .Parameter(0, "providers", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionOptions"), $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider")])])
    )
      .Parameter(1, "providers", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider")])])
    )
      .Parameter(1, "providers", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), $.Boolean, 
          $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider")])
        ])
    )
      .Parameter(2, "providers", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionOptions"), 
          $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider")])
        ])
    )
      .Parameter(2, "providers", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, "Compose", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionBatch"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Catalog", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CatalogExportProvider", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CompositionOptions", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionOptions"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Providers", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetExportsCore", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnExportsChangedInternal", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnExportsChangingInternal", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReleaseExport", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ReleaseExport", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Lazy`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReleaseExports", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "ReleaseExports", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Lazy`1", ["!!0"])])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReleaseExports", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.Lazy`2", ["!!0", "!!1"])])], ["T", "TMetadataView"])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SatisfyImportsOnce", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_compositionOptions", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionOptions"));

    $.Field({Static:false, Public:false}, "_importEngine", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine"));

    $.Field({Static:false, Public:false}, "_partExportProvider", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"));

    $.Field({Static:false, Public:false}, "_rootProvider", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"));

    $.Field({Static:false, Public:false}, "_disposableRootProvider", $asm0F.TypeRef("System.IDisposable"));

    $.Field({Static:false, Public:false}, "_catalogExportProvider", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider"));

    $.Field({Static:false, Public:false}, "_localExportProvider", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"));

    $.Field({Static:false, Public:false}, "_disposableLocalExportProvider", $asm0F.TypeRef("System.IDisposable"));

    $.Field({Static:false, Public:false}, "_ancestorExportProvider", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"));

    $.Field({Static:false, Public:false}, "_disposableAncestorExportProvider", $asm0F.TypeRef("System.IDisposable"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_providers", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider")]));

    $.Field({Static:false, Public:false}, "_isDisposed", $asm0F.TypeRef("System.Boolean"));

    $.Field({Static:false, Public:false}, "_lock", $.Object);

    $.Field({Static:true , Public:false}, "EmptyProviders", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider")]));

    $.Property({Static:false, Public:false}, "CompositionOptions", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionOptions"));

    $.Property({Static:false, Public:true }, "Catalog", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"));

    $.Property({Static:false, Public:false}, "CatalogExportProvider", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CatalogExportProvider"));

    $.Property({Static:false, Public:true }, "Providers", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider")]));

    $.ImplementInterfaces(
      /* 0 */ $asm13.TypeRef("System.ComponentModel.Composition.ICompositionService"), 
      /* 1 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CompositionContainer+CompositionServiceShim */ 

(function CompositionServiceShim$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CompositionContainer+CompositionServiceShim", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionContainer"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"))
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.ICompositionService"), "SatisfyImportsOnce");

    $.Field({Static:false, Public:false}, "_innerContainer", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionContainer"));

    $.ImplementInterfaces(
      /* 0 */ $asm13.TypeRef("System.ComponentModel.Composition.ICompositionService")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CompositionLock */ 

(function CompositionLock$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CompositionLock", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "EnterCompositionLock", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ExitCompositionLock", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsThreadSafe", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "LockComposition", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.IDisposable"))
    );

    $.ExternalMethod({Static:false, Public:true }, "LockStateForRead", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.IDisposable"))
    );

    $.ExternalMethod({Static:false, Public:true }, "LockStateForWrite", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.IDisposable"))
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_stateLock", $asm13.TypeRef("Microsoft.Internal.Lock"));

    $.Field({Static:true , Public:false}, "_compositionLock", $.Object);

    $.Field({Static:false, Public:false}, "_isDisposed", $.Int32);

    $.Field({Static:false, Public:false}, "_isThreadSafe", $.Boolean);

    $.Field({Static:true , Public:false, ReadOnly:true }, "_EmptyLockHolder", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionLock+EmptyLockHolder"));

    $.Property({Static:false, Public:true }, "IsThreadSafe", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CompositionLock+CompositionLockHolder */ 

(function CompositionLockHolder$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CompositionLock+CompositionLockHolder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionLock"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_lock", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionLock"));

    $.Field({Static:false, Public:false}, "_isDisposed", $.Int32);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CompositionLock+EmptyLockHolder */ 

(function EmptyLockHolder$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CompositionLock+EmptyLockHolder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.ImportSourceImportDefinitionHelpers */ 

(function ImportSourceImportDefinitionHelpers$Members () {
  var $, $thisType;


  JSIL.MakeStaticClass("System.ComponentModel.Composition.Hosting.ImportSourceImportDefinitionHelpers", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "RemoveImportSource", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.ImportSourceImportDefinitionHelpers+NonImportSourceImportDefinition */ 

(function NonImportSourceImportDefinition$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"), 
      Name: "System.ComponentModel.Composition.Hosting.ImportSourceImportDefinitionHelpers+NonImportSourceImportDefinition", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Cardinality", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Constraint", 
      JSIL.MethodSignature.Return($asm15.TypeRef("System.Linq.Expressions.Expression`1", [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean])]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ContractName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsPrerequisite", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsRecomposable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_RequiredCreationPolicy", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_RequiredMetadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0F.TypeRef("System.Type")])]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_RequiredTypeIdentity", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsConstraintSatisfiedBy", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_sourceDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition"));

    $.Field({Static:false, Public:false}, "_metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:true , Virtual:true }, "ContractName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:true , Virtual:true }, "Cardinality", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality"));

    $.Property({Static:false, Public:true , Virtual:true }, "Constraint", $asm15.TypeRef("System.Linq.Expressions.Expression`1", [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.Boolean])]));

    $.Property({Static:false, Public:true , Virtual:true }, "IsPrerequisite", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsRecomposable", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "RequiredTypeIdentity", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "RequiredMetadata", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0F.TypeRef("System.Type")])]));

    $.Property({Static:false, Public:true , Virtual:true }, "RequiredCreationPolicy", $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.FilteredCatalog */ 

(function FilteredCatalog$Members () {
  var $, $thisType;




























  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), 
      Name: "System.ComponentModel.Composition.Hosting.FilteredCatalog", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $.Boolean]), 
          $.Type
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Complement$gb__12_0", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "add_Changed", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "add_Changing", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "FreezeInnerCatalog", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Complement", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Tuple`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetTraversalClosure", 
      new JSIL.MethodSignature($asm15.TypeRef("System.Collections.Generic.HashSet`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.FilteredCatalog+IComposablePartCatalogTraversal")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetTraversalClosure", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), $asm15.TypeRef("System.Collections.Generic.HashSet`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), 
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.FilteredCatalog+IComposablePartCatalogTraversal")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "IncludeDependencies", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true }, "IncludeDependencies", 
      new JSIL.MethodSignature($.Type, [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:true }, "IncludeDependents", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true }, "IncludeDependents", 
      new JSIL.MethodSignature($.Type, [$asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnChangedInternal", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanging", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnChangingInternal", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessEventArgs", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs"), [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "remove_Changed", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "remove_Changing", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "ThrowOnRecomposition", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Traverse", 
      new JSIL.MethodSignature($.Type, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.FilteredCatalog+IComposablePartCatalogTraversal")])
    );

    $.ExternalMethod({Static:false, Public:false}, "UnfreezeInnerCatalog", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_filter", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $.Boolean]));

    $.Field({Static:false, Public:false}, "_innerCatalog", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"));

    $.Field({Static:false, Public:false}, "_complement", $.Type);

    $.Field({Static:false, Public:false}, "_lock", $.Object);

    $.Field({Static:false, Public:false}, "_isDisposed", $asm0F.TypeRef("System.Boolean"));

    $.Field({Static:false, Public:false}, "Changed", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Changing", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Complement", $.Type);

    $.Event({Static:false, Public:true , Virtual:true }, "Changed", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]));

    $.Event({Static:false, Public:true , Virtual:true }, "Changing", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]));

    $.ImplementInterfaces(
      /* 3 */ $asm13.TypeRef("System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.FilteredCatalog+DependenciesTraversal */ 

(function DependenciesTraversal$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.FilteredCatalog+DependenciesTraversal", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.FilteredCatalog"), $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddToExportersIndex", 
      new JSIL.MethodSignature(null, [$.String, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "BuildExportersIndex", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Initialize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TryTraverse", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $jsilcore.TypeRef("JSIL.Reference", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])])])
    );

    $.Field({Static:false, Public:false}, "_parts", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]));

    $.Field({Static:false, Public:false}, "_importFilter", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $.Boolean]));

    $.Field({Static:false, Public:false}, "_exportersIndex", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])]));

    $.ImplementInterfaces(
      /* 0 */ $asm13.TypeRef("System.ComponentModel.Composition.Hosting.FilteredCatalog+IComposablePartCatalogTraversal")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.FilteredCatalog+DependentsTraversal */ 

(function DependentsTraversal$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.FilteredCatalog+DependentsTraversal", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.FilteredCatalog"), $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddToImportersIndex", 
      new JSIL.MethodSignature(null, [$.String, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "BuildImportersIndex", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Initialize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TryTraverse", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $jsilcore.TypeRef("JSIL.Reference", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])])])
    );

    $.Field({Static:false, Public:false}, "_parts", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]));

    $.Field({Static:false, Public:false}, "_importFilter", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $.Boolean]));

    $.Field({Static:false, Public:false}, "_importersIndex", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])]));

    $.ImplementInterfaces(
      /* 0 */ $asm13.TypeRef("System.ComponentModel.Composition.Hosting.FilteredCatalog+IComposablePartCatalogTraversal")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.ComponentModel.Composition.Hosting.FilteredCatalog+IComposablePartCatalogTraversal */ 

JSIL.MakeInterface(
  "System.ComponentModel.Composition.Hosting.FilteredCatalog+IComposablePartCatalogTraversal", false, [], function ($) {
    $.Method({}, "Initialize", JSIL.MethodSignature.Void);
    $.Method({}, "TryTraverse", new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $jsilcore.TypeRef("JSIL.Reference", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])])]));
  }, []);

/* class System.ComponentModel.Composition.Hosting.FilteredCatalog+<>c__DisplayClass8_0 */ 

(function $l$gc__DisplayClass8_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.FilteredCatalog+<>c__DisplayClass8_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l.ctor$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])
    );

    $.Field({Static:false, Public:true }, "filter", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $.Boolean]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.FilteredCatalog+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.FilteredCatalog+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lIncludeDependencies$gb__26_0", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lIncludeDependents$gb__28_0", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__26_0", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $.Boolean]));

    $.Field({Static:true , Public:true }, "$l$g9__28_0", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $.Boolean]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.FilteredCatalog+<>c__DisplayClass30_0 */ 

(function $l$gc__DisplayClass30_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.FilteredCatalog+<>c__DisplayClass30_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lTraverse$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])
    );

    $.Field({Static:false, Public:true }, "traversalClosure", $asm15.TypeRef("System.Collections.Generic.HashSet`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ScopingExtensions */ 

(function ScopingExtensions$Members () {
  var $, $thisType;







  JSIL.MakeStaticClass("System.ComponentModel.Composition.Hosting.ScopingExtensions", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "ContainsPartMetadata", 
      new JSIL.MethodSignature($.Boolean, [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $.String, 
          "!!0"
        ], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "ContainsPartMetadataWithKey", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "Exports", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "Filter", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Hosting.FilteredCatalog"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $.Boolean])])
    );

    $.ExternalMethod({Static:true , Public:true }, "Imports", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "Imports", 
      new JSIL.MethodSignature($.Boolean, [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $.String, 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality")
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.AtomicComposition */ 

(function AtomicComposition$Members () {
  var $, $thisType;



















  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.AtomicComposition", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:true }, "AddCompleteAction", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Action"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddRevertAction", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Action"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Complete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CopyComplete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "FinalComplete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ContainsInnerAtomicComposition", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetValueInternal", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfContainsInnerAtomicComposition", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $jsilcore.TypeRef("JSIL.Reference", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [
          $.Object, $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", ["!!0"])
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetValueInternal", 
      new JSIL.MethodSignature($.Boolean, [
          $.Object, $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", ["!!0"])
        ], ["T"])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_outerAtomicComposition", $.Type);

    $.Field({Static:false, Public:false}, "_values", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.Object, $.Object])]));

    $.Field({Static:false, Public:false}, "_valueCount", $.Int32);

    $.Field({Static:false, Public:false}, "_completeActionList", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0F.TypeRef("System.Action")]));

    $.Field({Static:false, Public:false}, "_revertActionList", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0F.TypeRef("System.Action")]));

    $.Field({Static:false, Public:false}, "_isDisposed", $.Boolean);

    $.Field({Static:false, Public:false}, "_isCompleted", $.Boolean);

    $.Field({Static:false, Public:false}, "_containsInnerAtomicComposition", $.Boolean);

    $.Property({Static:false, Public:false}, "ContainsInnerAtomicComposition", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.AtomicCompositionExtensions */ 

(function AtomicCompositionExtensions$Members () {
  var $, $thisType;





  JSIL.MakeStaticClass("System.ComponentModel.Composition.Hosting.AtomicCompositionExtensions", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "AddCompleteActionAllowNull", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition"), $asm0F.TypeRef("System.Action")])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddRevertActionAllowNull", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition"), $asm0F.TypeRef("System.Action")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetValueAllowNull", 
      new JSIL.MethodSignature("!!0", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition"), "!!0"], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetValueAllowNull", 
      new JSIL.MethodSignature("!!0", [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition"), $.Object, 
          "!!0"
        ], ["T"])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CompositionConstants */ 

(function CompositionConstants$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.ComponentModel.Composition.Hosting.CompositionConstants", true, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "CompositionNamespace", $.String, "System.ComponentModel.Composition");

    $.Constant({Static:true , Public:true }, "PartCreationPolicyMetadataName", $.String, "System.ComponentModel.Composition.CreationPolicy");

    $.Constant({Static:true , Public:true }, "ImportSourceMetadataName", $.String, "System.ComponentModel.Composition.ImportSource");

    $.Constant({Static:true , Public:true }, "IsGenericPartMetadataName", $.String, "System.ComponentModel.Composition.IsGenericPart");

    $.Constant({Static:true , Public:true }, "GenericContractMetadataName", $.String, "System.ComponentModel.Composition.GenericContractName");

    $.Constant({Static:true , Public:true }, "GenericParametersMetadataName", $.String, "System.ComponentModel.Composition.GenericParameters");

    $.Constant({Static:true , Public:true }, "ExportTypeIdentityMetadataName", $.String, "ExportTypeIdentity");

    $.Constant({Static:true , Public:false}, "GenericImportParametersOrderMetadataName", $.String, "System.ComponentModel.Composition.GenericImportParametersOrderMetadataName");

    $.Constant({Static:true , Public:false}, "GenericExportParametersOrderMetadataName", $.String, "System.ComponentModel.Composition.GenericExportParametersOrderMetadataName");

    $.Constant({Static:true , Public:false}, "GenericPartArityMetadataName", $.String, "System.ComponentModel.Composition.GenericPartArity");

    $.Constant({Static:true , Public:false}, "GenericParameterConstraintsMetadataName", $.String, "System.ComponentModel.Composition.GenericParameterConstraints");

    $.Constant({Static:true , Public:false}, "GenericParameterAttributesMetadataName", $.String, "System.ComponentModel.Composition.GenericParameterAttributes");

    $.Constant({Static:true , Public:false}, "ProductDefinitionMetadataName", $.String, "ProductDefinition");

    $.Constant({Static:true , Public:false}, "PartCreatorContractName", $.String, "System.ComponentModel.Composition.Contracts.ExportFactory");

    $.Field({Static:true , Public:false, ReadOnly:true }, "PartCreatorTypeIdentity", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.ComponentModel.Composition.Hosting.CompositionOptions */ 

JSIL.MakeEnum(
  {
    FullName: "System.ComponentModel.Composition.Hosting.CompositionOptions", 
    BaseType: $asm0F.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: true, 
  }, 
  {
    Default: 0, 
    DisableSilentRejection: 1, 
    IsThreadSafe: 2, 
    ExportCompositionService: 4, 
  }
);

/* class System.ComponentModel.Composition.Hosting.CompositionScopeDefinition */ 

(function CompositionScopeDefinition$Members () {
  var $, $thisType;




















  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), 
      Name: "System.ComponentModel.Composition.Hosting.CompositionScopeDefinition", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type])])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]), 
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "add_Changed", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "add_Changing", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Children", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_PublicSurface", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Tuple`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExportsFromPublicSurface", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Tuple`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeCompositionScopeDefinition", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]), 
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnChangedInternal", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanging", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnChangingInternal", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "remove_Changed", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "remove_Changing", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_catalog", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"));

    $.Field({Static:false, Public:false}, "_publicSurface", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Field({Static:false, Public:false}, "_children", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]));

    $.Field({Static:false, Public:false}, "_isDisposed", $asm0F.TypeRef("System.Int32"));

    $.Field({Static:false, Public:false}, "Changed", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Changing", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "Children", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]));

    $.Property({Static:false, Public:true , Virtual:true }, "PublicSurface", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Event({Static:false, Public:true , Virtual:true }, "Changed", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]));

    $.Event({Static:false, Public:true , Virtual:true }, "Changing", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]));

    $.ImplementInterfaces(
      /* 3 */ $asm13.TypeRef("System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CompositionScopeDefinition+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CompositionScopeDefinition+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_PublicSurface$gb__12_0", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__12_0", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.CompositionScopeDefinitionDebuggerProxy */ 

(function CompositionScopeDefinitionDebuggerProxy$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CompositionScopeDefinitionDebuggerProxy", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionScopeDefinition"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Children", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionScopeDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Parts", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PublicSurface", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]))
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_compositionScopeDefinition", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionScopeDefinition"));

    $.Property({Static:false, Public:true }, "Parts", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]));

    $.Property({Static:false, Public:true }, "PublicSurface", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Property({Static:false, Public:true , Virtual:true }, "Children", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionScopeDefinition")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.AggregateCatalog */ 

(function AggregateCatalog$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), 
      Name: "System.ComponentModel.Composition.Hosting.AggregateCatalog", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")]))
    )
      .Parameter(0, "catalogs", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "add_Changed", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "add_Changing", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Catalogs", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.ICollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Tuple`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanging", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "remove_Changed", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "remove_Changing", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_catalogs", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogCollection"));

    $.Field({Static:false, Public:false}, "_isDisposed", $asm0F.TypeRef("System.Int32"));

    $.Property({Static:false, Public:true }, "Catalogs", $asm0F.TypeRef("System.Collections.Generic.ICollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")]));

    $.Event({Static:false, Public:true , Virtual:true }, "Changed", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]));

    $.Event({Static:false, Public:true , Virtual:true }, "Changing", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]));

    $.ImplementInterfaces(
      /* 3 */ $asm13.TypeRef("System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.AggregateCatalog+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.AggregateCatalog+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetEnumerator$gb__15_0", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__15_0", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.AggregateExportProvider */ 

(function AggregateExportProvider$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"), 
      Name: "System.ComponentModel.Composition.Hosting.AggregateExportProvider", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider")]))
    )
      .Parameter(0, "providers", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Providers", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetExportsCore", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnExportChangedInternal", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnExportChangingInternal", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_readOnlyProviders", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider")]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_providers", $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider")]));

    $.Field({Static:false, Public:false}, "_isDisposed", $asm0F.TypeRef("System.Int32"));

    $.Property({Static:false, Public:true }, "Providers", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider")]));

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.AssemblyCatalog */ 

(function AssemblyCatalog$Members () {
  var $, $thisType;





















  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), 
      Name: "System.ComponentModel.Composition.Hosting.AssemblyCatalog", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm0F.TypeRef("System.Reflection.ReflectionContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm0F.TypeRef("System.Reflection.ReflectionContext"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Reflection.Assembly"), $asm0F.TypeRef("System.Reflection.ReflectionContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Reflection.Assembly"), $asm0F.TypeRef("System.Reflection.ReflectionContext"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Reflection.Assembly"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Reflection.Assembly"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Assembly", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.Assembly"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InnerCatalog", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Tuple`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeAssemblyCatalog", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Reflection.Assembly"))
    );

    $.ExternalMethod({Static:true , Public:false}, "LoadAssembly", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Reflection.Assembly"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_DisplayName");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"))
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_Origin");

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_thisLock", $.Object);

    $.Field({Static:false, Public:false, ReadOnly:true }, "_definitionOrigin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.Field({Static:false, Public:false}, "_assembly", $asm0F.TypeRef("System.Reflection.Assembly"));

    $.Field({Static:false, Public:false}, "_innerCatalog", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"));

    $.Field({Static:false, Public:false}, "_isDisposed", $.Int32);

    $.Field({Static:false, Public:false}, "_reflectionContext", $asm0F.TypeRef("System.Reflection.ReflectionContext"));

    $.Property({Static:false, Public:false}, "InnerCatalog", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"));

    $.Property({Static:false, Public:true }, "Assembly", $asm0F.TypeRef("System.Reflection.Assembly"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.Origin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.ImplementInterfaces(
      /* 3 */ $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.AssemblyCatalogDebuggerProxy */ 

(function AssemblyCatalogDebuggerProxy$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.AssemblyCatalogDebuggerProxy", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.AssemblyCatalog"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Assembly", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.Assembly"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Parts", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_catalog", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AssemblyCatalog"));

    $.Property({Static:false, Public:true }, "Assembly", $asm0F.TypeRef("System.Reflection.Assembly"));

    $.Property({Static:false, Public:true }, "Parts", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CatalogExtensions */ 

(function CatalogExtensions$Members () {
  var $, $thisType;


  JSIL.MakeStaticClass("System.ComponentModel.Composition.Hosting.CatalogExtensions", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CreateCompositionService", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionService"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs */ 

(function ComposablePartCatalogChangeEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm13.System.ComponentModel.Composition.Hosting.AtomicComposition)) ();
  };




  function ComposablePartCatalogChangeEventArgs_get_AtomicComposition () {
    return this.ComposablePartCatalogChangeEventArgs$AtomicComposition$value;
  }; 


  function ComposablePartCatalogChangeEventArgs_set_AtomicComposition (value) {
    this.ComposablePartCatalogChangeEventArgs$AtomicComposition$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.EventArgs"), 
      Name: "System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), 
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AddedDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.Method({Static:false, Public:true }, "get_AtomicComposition", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")), 
      ComposablePartCatalogChangeEventArgs_get_AtomicComposition
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_RemovedDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.Method({Static:false, Public:false}, "set_AtomicComposition", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")), 
      ComposablePartCatalogChangeEventArgs_set_AtomicComposition
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_addedDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_removedDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]));

    $.Field({Static:false, Public:false}, "ComposablePartCatalogChangeEventArgs$AtomicComposition$value", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition"))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "AddedDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]));

    $.Property({Static:false, Public:true }, "RemovedDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]));

    $.Property({Static:false, Public:true }, "AtomicComposition", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.ComposablePartCatalogCollection */ 

(function ComposablePartCatalogCollection$Members () {
  var $, $thisType;





























  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ComposablePartCatalogCollection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")]), $asm0F.TypeRef("System.Action`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]), 
          $asm0F.TypeRef("System.Action`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "add_Changed", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "add_Changing", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clear", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasChanged", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "OnChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true }, "OnChanging", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnContainedCatalogChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnContainedCatalogChanging", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RaiseChangedEvent", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])]), $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "RaiseChangingEvent", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])]), $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])]), 
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Remove", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "remove_Changed", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "remove_Changing", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SubscribeToCatalogNotifications", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SubscribeToCatalogNotifications", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "UnsubscribeFromCatalogNotifications", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"))
    );

    $.ExternalMethod({Static:false, Public:false}, "UnsubscribeFromCatalogNotifications", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")]))
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_lock", $asm13.TypeRef("Microsoft.Internal.Lock"));

    $.Field({Static:false, Public:false}, "_onChanged", $asm0F.TypeRef("System.Action`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]));

    $.Field({Static:false, Public:false}, "_onChanging", $asm0F.TypeRef("System.Action`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]));

    $.Field({Static:false, Public:false}, "_catalogs", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")]));

    $.Field({Static:false, Public:false}, "_isCopyNeeded", $asm0F.TypeRef("System.Boolean"));

    $.Field({Static:false, Public:false}, "_isDisposed", $asm0F.TypeRef("System.Boolean"));

    $.Field({Static:false, Public:false}, "_hasChanged", $.Boolean);

    $.Field({Static:false, Public:false}, "Changed", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Changing", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "IsReadOnly", $.Boolean);

    $.Property({Static:false, Public:false}, "HasChanged", $.Boolean);

    $.Event({Static:false, Public:true , Virtual:true }, "Changed", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]));

    $.Event({Static:false, Public:true , Virtual:true }, "Changing", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]));

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.ICollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")]), 
      /* 2 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 3 */ $asm13.TypeRef("System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.ComposablePartCatalogCollection+<>c__DisplayClass8_0 */ 

(function $l$gc__DisplayClass8_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ComposablePartCatalogCollection+<>c__DisplayClass8_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lAdd$gb__0", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.Field({Static:false, Public:true }, "item", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ComposablePartCatalogCollection+<>c__DisplayClass15_0 */ 

(function $l$gc__DisplayClass15_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ComposablePartCatalogCollection+<>c__DisplayClass15_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lClear$gb__0", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.Field({Static:false, Public:true }, "catalogs", $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ComposablePartCatalogCollection+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ComposablePartCatalogCollection+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lClear$gb__15_1", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lDispose$gb__28_0", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__15_1", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])]));

    $.Field({Static:true , Public:true }, "$l$g9__28_0", $asm0F.TypeRef("System.Action`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ComposablePartCatalogCollection+<>c__DisplayClass22_0 */ 

(function $l$gc__DisplayClass22_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ComposablePartCatalogCollection+<>c__DisplayClass22_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lRemove$gb__0", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.Field({Static:false, Public:true }, "item", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ComposablePartExportProvider */ 

(function ComposablePartExportProvider$Members () {
  var $, $thisType;



















  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"), 
      Name: "System.ComponentModel.Composition.Hosting.ComposablePartExportProvider", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionOptions"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Compose", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionBatch"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateExport", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureCanRun", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureCanSet", 
      new JSIL.MethodSignature(null, ["!!0"], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureRunning", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ImportEngine", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SourceProvider", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExportedValue", 
      new JSIL.MethodSignature($.Object, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetExportsCore", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetUpdatedPartsList", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")]), [$jsilcore.TypeRef("JSIL.Reference", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionBatch")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "Recompose", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionBatch"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SourceProvider", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_parts", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")]));

    $.Field({Static:false, Public:false}, "_isDisposed", $asm0F.TypeRef("System.Boolean"));

    $.Field({Static:false, Public:false}, "_isRunning", $asm0F.TypeRef("System.Boolean"));

    $.Field({Static:false, Public:false}, "_lock", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionLock"));

    $.Field({Static:false, Public:false}, "_sourceProvider", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"));

    $.Field({Static:false, Public:false}, "_importEngine", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine"));

    $.Field({Static:false, Public:false}, "_currentlyComposing", $asm0F.TypeRef("System.Boolean"));

    $.Field({Static:false, Public:false}, "_compositionOptions", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionOptions"));

    $.Property({Static:false, Public:true }, "SourceProvider", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"));

    $.Property({Static:false, Public:false}, "ImportEngine", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine"));

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.ComposablePartExportProvider+<>c__DisplayClass19_0 */ 

(function $l$gc__DisplayClass19_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ComposablePartExportProvider+<>c__DisplayClass19_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCompose$gb__0", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "part", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ComposablePartExportProvider+<>c__DisplayClass21_0 */ 

(function $l$gc__DisplayClass21_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ComposablePartExportProvider+<>c__DisplayClass21_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lRecompose$gb__2", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "addedExports", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Field({Static:false, Public:true }, "removedExports", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ComposablePartExportProvider+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ComposablePartExportProvider+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lRecompose$gb__21_0", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lRecompose$gb__21_1", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__21_0", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]));

    $.Field({Static:true , Public:true }, "$l$g9__21_1", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ComposablePartExportProvider+<>c__DisplayClass22_0 */ 

(function $l$gc__DisplayClass22_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ComposablePartExportProvider+<>c__DisplayClass22_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCreateExport$gb__0", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.Field({Static:false, Public:true }, "part", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"));

    $.Field({Static:false, Public:true }, "$export", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.CompositionBatch */ 

(function CompositionBatch$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CompositionBatch", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")]), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddExport", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddPart", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PartsToAdd", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PartsToRemove", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "RemovePart", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"))
    );

    $.Field({Static:false, Public:false}, "_lock", $.Object);

    $.Field({Static:false, Public:false}, "_copyNeededForAdd", $.Boolean);

    $.Field({Static:false, Public:false}, "_copyNeededForRemove", $.Boolean);

    $.Field({Static:false, Public:false}, "_partsToAdd", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")]));

    $.Field({Static:false, Public:false}, "_readOnlyPartsToAdd", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")]));

    $.Field({Static:false, Public:false}, "_partsToRemove", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")]));

    $.Field({Static:false, Public:false}, "_readOnlyPartsToRemove", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")]));

    $.Property({Static:false, Public:true }, "PartsToAdd", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")]));

    $.Property({Static:false, Public:true }, "PartsToRemove", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CompositionBatch+SingleExportComposablePart */ 

(function SingleExportComposablePart$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), 
      Name: "System.ComponentModel.Composition.Hosting.CompositionBatch+SingleExportComposablePart", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ExportDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ImportDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExportedValue", 
      new JSIL.MethodSignature($.Object, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetImport", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_export", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export"));

    $.Property({Static:false, Public:true , Virtual:true }, "Metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:true , Virtual:true }, "ExportDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Property({Static:false, Public:true , Virtual:true }, "ImportDefinitions", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CompositionService */ 

(function CompositionService$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CompositionService", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "OnCatalogChanging", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SatisfyImportsOnce", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"))
    );

    $.Field({Static:false, Public:false}, "_compositionContainer", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionContainer"));

    $.Field({Static:false, Public:false}, "_notifyCatalog", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged"));

    $.ImplementInterfaces(
      /* 0 */ $asm13.TypeRef("System.ComponentModel.Composition.ICompositionService"), 
      /* 1 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CompositionServices */ 

(function CompositionServices$Members () {
  var $, $thisType;


























  JSIL.MakeStaticClass("System.ComponentModel.Composition.Hosting.CompositionServices", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "AdjustSpecifiedTypeIdentityType", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Type"), [$asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Reflection.MemberInfo")])
    );

    $.ExternalMethod({Static:true , Public:false}, "AdjustSpecifiedTypeIdentityType", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Type"), [$asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "AdjustTypeIdentity", 
      new JSIL.MethodSignature($.String, [$.String, $asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetContractInfoFromExport", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Reflection.MemberInfo"), $asm13.TypeRef("System.ComponentModel.Composition.ExportAttribute"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0F.TypeRef("System.Type")]), $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetContractNameFromImport", 
      new JSIL.MethodSignature($.String, [$asm13.TypeRef("System.ComponentModel.Composition.IAttributedImport"), $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportType")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetContractTypeFromImport", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Type"), [$asm13.TypeRef("System.ComponentModel.Composition.IAttributedImport"), $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportType")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDefaultTypeFromMember", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Type"), [$asm0F.TypeRef("System.Reflection.MemberInfo")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetExportedValueFromComposedPart", 
      new JSIL.MethodSignature($.Object, [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetImportMetadata", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportType"), $asm13.TypeRef("System.ComponentModel.Composition.IAttributedImport")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetImportMetadata", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm0F.TypeRef("System.Type"), $asm13.TypeRef("System.ComponentModel.Composition.IAttributedImport")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetPartMetadataForType", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm0F.TypeRef("System.Type"), $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetRequiredCreationPolicy", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetRequiredMetadata", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0F.TypeRef("System.Type")])]), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetTypeIdentityFromExport", 
      new JSIL.MethodSignature($.String, [$asm0F.TypeRef("System.Reflection.MemberInfo"), $asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetTypeIdentityFromImport", 
      new JSIL.MethodSignature($.String, [$asm13.TypeRef("System.ComponentModel.Composition.IAttributedImport"), $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ImportType")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetTypeIdentityTypeFromExport", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Type"), [$asm0F.TypeRef("System.Reflection.MemberInfo"), $asm13.TypeRef("System.ComponentModel.Composition.ExportAttribute")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsAtMostOne", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportCardinality")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsContractNameSameAsTypeIdentity", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.ExportAttribute")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsRecomposable", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsValidAttributeType", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsValidAttributeType", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Type"), $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryContributeMetadataValue", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $.String, 
          $.Object, $asm0F.TypeRef("System.Type"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryExportMetadataForMember", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Reflection.MemberInfo"), $jsilcore.TypeRef("JSIL.Reference", [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])])])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryFire", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionResult"), [
          $asm0F.TypeRef("System.EventHandler`1", ["!!0"]), $.Object, 
          "!!0"
        ], ["TEventArgs"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryInvoke", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionResult"), [$asm0F.TypeRef("System.Action")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "InheritedExportAttributeType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm13.System.ComponentModel.Composition.InheritedExportAttribute.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "ExportAttributeType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm13.System.ComponentModel.Composition.ExportAttribute.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "AttributeType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Attribute.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "ObjectType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Object.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "reservedMetadataNames", $jsilcore.TypeRef("System.Array", [$.String]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CompositionServices+MetadataList */ 

(function MetadataList$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CompositionServices+MetadataList", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$.Object, $asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InferArrayType", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ToArray", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Array"))
    );

    $.Field({Static:false, Public:false}, "_arrayType", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "_containsNulls", $.Boolean);

    $.Field({Static:true , Public:false, ReadOnly:true }, "ObjectType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Object.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "TypeType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Type.__Type__;
      });

    $.Field({Static:false, Public:false}, "_innerList", $asm0F.TypeRef("System.Collections.ObjectModel.Collection`1", [$.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.CompositionServices+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.CompositionServices+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetRequiredMetadata$gb__20_0", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Reflection.PropertyInfo")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetRequiredMetadata$gb__20_1", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0F.TypeRef("System.Type")]), [$asm0F.TypeRef("System.Reflection.PropertyInfo")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lIsRecomposable$gb__24_0", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__20_0", $asm0F.TypeRef("System.Func`2", [$asm0F.TypeRef("System.Reflection.PropertyInfo"), $.Boolean]));

    $.Field({Static:true , Public:true }, "$l$g9__20_1", $asm0F.TypeRef("System.Func`2", [$asm0F.TypeRef("System.Reflection.PropertyInfo"), $asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0F.TypeRef("System.Type")])]));

    $.Field({Static:true , Public:true }, "$l$g9__24_0", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $.Boolean]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs */ 

(function ExportsChangeEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm13.System.ComponentModel.Composition.Hosting.AtomicComposition)) ();
  };




  function ExportsChangeEventArgs_get_AtomicComposition () {
    return this.ExportsChangeEventArgs$AtomicComposition$value;
  }; 



  function ExportsChangeEventArgs_set_AtomicComposition (value) {
    this.ExportsChangeEventArgs$AtomicComposition$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.EventArgs"), 
      Name: "System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]), 
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AddedExports", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]))
    );

    $.Method({Static:false, Public:true }, "get_AtomicComposition", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")), 
      ExportsChangeEventArgs_get_AtomicComposition
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_ChangedContractNames", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RemovedExports", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]))
    );

    $.Method({Static:false, Public:false}, "set_AtomicComposition", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")), 
      ExportsChangeEventArgs_set_AtomicComposition
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_addedExports", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_removedExports", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Field({Static:false, Public:false}, "_changedContractNames", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String]));

    $.Field({Static:false, Public:false}, "ExportsChangeEventArgs$AtomicComposition$value", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition"))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "AddedExports", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Property({Static:false, Public:true }, "RemovedExports", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Property({Static:false, Public:true }, "ChangedContractNames", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String]));

    $.Property({Static:false, Public:true }, "AtomicComposition", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_ChangedContractNames$gb__9_0", 
      new JSIL.MethodSignature($.String, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__9_0", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.String]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ImportEngine */ 

(function ImportEngine$Members () {
  var $, $thisType;

























  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ImportEngine", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionOptions")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetEngineContext", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+EngineContext"), [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPartManager", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "InPrerequisiteLoop", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "IsRequiredImportForPreview", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnExportsChanging", 
      new JSIL.MethodSignature(null, [$.Object, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true }, "PreviewImports", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReleaseImports", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:false, Public:true }, "SatisfyImports", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SatisfyImportsOnce", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"))
    );

    $.ExternalMethod({Static:false, Public:false}, "StartSatisfyingImports", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "StopSatisfyingImports", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "TryGetExports", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionResult`1", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])]), [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryPreviewImportsStateMachine", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionResult"), [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryRecomposeImport", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionResult"), [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"), $.Boolean, 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryRecomposeImports", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionResult"), [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]), 
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TrySatisfyImports", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionResult"), [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TrySatisfyImportsStateMachine", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionResult"), [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")])
    );

    $.ExternalMethod({Static:false, Public:false}, "TrySatisfyImportSubset", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionResult"), [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]), 
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")
        ])
    );

    $.Constant({Static:true , Public:false}, "MaximumNumberOfCompositionIterations", $.Int32, 100);

    $.Field({Static:false, Public:false}, "_isDisposed", $asm0F.TypeRef("System.Boolean"));

    $.Field({Static:false, Public:false}, "_sourceProvider", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ExportProvider"));

    $.Field({Static:false, Public:false}, "_recursionStateStack", $asm12.TypeRef("System.Collections.Generic.Stack`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager")]));

    $.Field({Static:false, Public:false}, "_partManagers", $asm0F.TypeRef("System.Runtime.CompilerServices.ConditionalWeakTable`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager")]));

    $.Field({Static:false, Public:false}, "_recompositionManager", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+RecompositionManager"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_lock", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionLock"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_compositionOptions", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.CompositionOptions"));

    $.ImplementInterfaces(
      /* 0 */ $asm13.TypeRef("System.ComponentModel.Composition.ICompositionService"), 
      /* 1 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.ImportEngine+RecompositionManager */ 

(function RecompositionManager$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ImportEngine+RecompositionManager", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AddIndexEntries", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddPartToIndex", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddPartToUnindex", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"))
    );

    $.ExternalMethod({Static:true , Public:true }, "GetAffectedImports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetAffectedParts", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager")]), [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetPartsImporting", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager")]), [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsAffectedImport", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveIndexEntries", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateImportIndex", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_partsToIndex", $asm13.TypeRef("Microsoft.Internal.Collections.WeakReferenceCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager")]));

    $.Field({Static:false, Public:false}, "_partsToUnindex", $asm13.TypeRef("Microsoft.Internal.Collections.WeakReferenceCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager")]));

    $.Field({Static:false, Public:false}, "_partManagerIndex", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm13.TypeRef("Microsoft.Internal.Collections.WeakReferenceCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager")])]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.ImportEngine+RecompositionManager+<>c__DisplayClass6_0 */ 

(function $l$gc__DisplayClass6_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ImportEngine+RecompositionManager+<>c__DisplayClass6_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetAffectedImports$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.Field({Static:false, Public:true }, "changedExports", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ImportEngine+EngineContext */ 

(function EngineContext$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ImportEngine+EngineContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine"), $.Type])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddPartManager", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Complete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "GetAddedPartManagers", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRemovedPartManagers", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "RemovePartManager", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"))
    );

    $.Field({Static:false, Public:false}, "_importEngine", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine"));

    $.Field({Static:false, Public:false}, "_addedPartManagers", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager")]));

    $.Field({Static:false, Public:false}, "_removedPartManagers", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager")]));

    $.Field({Static:false, Public:false}, "_parentEngineContext", $.Type);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.ImportEngine+PartManager */ 

(function PartManager$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };







  function PartManager_get_TrackingImports () {
    return this.PartManager$TrackingImports$value;
  }; 




  function PartManager_set_TrackingImports (value) {
    this.PartManager$TrackingImports$value = value;
  }; 





  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ImportEngine+PartManager", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ClearSavedImports", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "DisposeAllDependencies", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Part", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_State", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+ImportState"))
    );

    $.Method({Static:false, Public:true }, "get_TrackingImports", 
      JSIL.MethodSignature.Return($.Boolean), 
      PartManager_get_TrackingImports
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetImportedContractNames", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetSavedImport", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_State", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+ImportState"))
    );

    $.Method({Static:false, Public:true }, "set_TrackingImports", 
      JSIL.MethodSignature.Action($.Boolean), 
      PartManager_set_TrackingImports
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetSavedImport", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")]), 
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AtomicComposition")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "TryOnComposed", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.CompositionResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "TrySetImport", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.CompositionResult"), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "UpdateDisposableDependencies", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])])
    );

    $.Field({Static:false, Public:false}, "_importedDisposableExports", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0F.TypeRef("System.IDisposable")])]));

    $.Field({Static:false, Public:false}, "_importCache", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")])]));

    $.Field({Static:false, Public:false}, "_importedContractNames", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "_part", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"));

    $.Field({Static:false, Public:false}, "_state", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+ImportState"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_importEngine", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine"));

    $.Field({Static:false, Public:false}, "PartManager$TrackingImports$value", $.Boolean)
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Part", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePart"));

    $.Property({Static:false, Public:true }, "State", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+ImportState"));

    $.Property({Static:false, Public:true }, "TrackingImports", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.ImportEngine+PartManager+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ImportEngine+PartManager+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lDisposeAllDependencies$gb__23_0", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.IDisposable")]), [$asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0F.TypeRef("System.IDisposable")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lDisposeAllDependencies$gb__23_1", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.IDisposable"))
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetImportedContractNames$gb__16_0", 
      new JSIL.MethodSignature($.String, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lUpdateDisposableDependencies$gb__22_0", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.IDisposable"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__16_0", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $.String]));

    $.Field({Static:true , Public:true }, "$l$g9__22_0", $asm0F.TypeRef("System.Action`1", [$asm0F.TypeRef("System.IDisposable")]));

    $.Field({Static:true , Public:true }, "$l$g9__23_0", $asm0F.TypeRef("System.Func`2", [$asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0F.TypeRef("System.IDisposable")]), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.IDisposable")])]));

    $.Field({Static:true , Public:true }, "$l$g9__23_1", $asm0F.TypeRef("System.Action`1", [$asm0F.TypeRef("System.IDisposable")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ImportEngine+PartManager+<>c__DisplayClass18_0 */ 

(function $l$gc__DisplayClass18_0$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ImportEngine+PartManager+<>c__DisplayClass18_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "$import", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ImportEngine+PartManager+<>c__DisplayClass18_1 */ 

(function $l$gc__DisplayClass18_1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ImportEngine+PartManager+<>c__DisplayClass18_1", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lSetSavedImport$gb__0", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "savedExports", $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")]));

    $.Field({Static:false, Public:true }, "CS$$l$g8__locals1", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager+<>c__DisplayClass18_0"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* enum System.ComponentModel.Composition.Hosting.ImportEngine+ImportState */ 

JSIL.MakeEnum(
  {
    FullName: "System.ComponentModel.Composition.Hosting.ImportEngine+ImportState", 
    BaseType: $asm0F.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    NoImportsSatisfied: 0, 
    ImportsPreviewing: 1, 
    ImportsPreviewed: 2, 
    PreExportImportsSatisfying: 3, 
    PreExportImportsSatisfied: 4, 
    PostExportImportsSatisfying: 5, 
    PostExportImportsSatisfied: 6, 
    ComposedNotifying: 7, 
    Composed: 8, 
  }
);

/* class System.ComponentModel.Composition.Hosting.ImportEngine+<>c__DisplayClass14_0 */ 

(function $l$gc__DisplayClass14_0$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ImportEngine+<>c__DisplayClass14_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lPreviewImports$gb__0", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lPreviewImports$gb__1", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "compositionLockHolder", $asm0F.TypeRef("System.IDisposable"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ImportEngine+<>c__DisplayClass20_0 */ 

(function $l$gc__DisplayClass20_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ImportEngine+<>c__DisplayClass20_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lTryPreviewImportsStateMachine$gb__0", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "partManager", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ImportEngine+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ImportEngine+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lTrySatisfyImportsStateMachine$gb__21_0", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lTrySatisfyImportsStateMachine$gb__21_1", 
      new JSIL.MethodSignature($.Boolean, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__21_0", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $.Boolean]));

    $.Field({Static:true , Public:true }, "$l$g9__21_1", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"), $.Boolean]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ImportEngine+<>c__DisplayClass25_0 */ 

(function $l$gc__DisplayClass25_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ImportEngine+<>c__DisplayClass25_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lTryRecomposeImports$gb__0", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "partManager", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ImportEngine+<>c__DisplayClass26_0 */ 

(function $l$gc__DisplayClass26_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.ImportEngine+<>c__DisplayClass26_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lTryRecomposeImport$gb__0", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "partManager", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ImportEngine+PartManager"));

    $.Field({Static:false, Public:true }, "$import", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"));

    $.Field({Static:false, Public:true }, "exports", $jsilcore.TypeRef("System.Array", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.Export")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* interface System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged */ 

JSIL.MakeInterface(
  "System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged", true, [], function ($) {
    $.Method({}, "add_Changed", JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")])));
    $.Method({}, "remove_Changed", JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")])));
    $.Method({}, "add_Changing", JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")])));
    $.Method({}, "remove_Changing", JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")])));
  }, []);

/* class System.ComponentModel.Composition.Hosting.TypeCatalog */ 

(function TypeCatalog$Members () {
  var $, $thisType;




















  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), 
      Name: "System.ComponentModel.Composition.Hosting.TypeCatalog", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")]))
    )
      .Parameter(0, "types", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Type")]))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Type")]), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Type")]), $asm0F.TypeRef("System.Reflection.ReflectionContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Type")]), $asm0F.TypeRef("System.Reflection.ReflectionContext"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateIndex", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_PartsInternal", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetCandidateParts", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetCandidateParts", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetTypesDisplay", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeTypeCatalog", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Type")]), $asm0F.TypeRef("System.Reflection.ReflectionContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeTypeCatalog", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Type")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_DisplayName");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"))
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_Origin");

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_thisLock", $.Object);

    $.Field({Static:false, Public:false}, "_types", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "_parts", $asm0F.TypeRef("System.Collections.Generic.List`1"));

    $.Field({Static:false, Public:false}, "_isDisposed", $asm0F.TypeRef("System.Boolean"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_definitionOrigin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_contractPartIndex", $asm0F.TypeRef("System.Lazy`1", [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])])]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.Origin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.Property({Static:false, Public:false}, "PartsInternal", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]));

    $.ImplementInterfaces(
      /* 3 */ $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.TypeCatalog+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.TypeCatalog+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCreateIndex$gb__22_0", 
      new JSIL.MethodSignature($.String, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__22_0", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), $.String]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.ApplicationCatalog */ 

(function ApplicationCatalog$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), 
      Name: "System.ComponentModel.Composition.Hosting.ApplicationCatalog", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Reflection.ReflectionContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Reflection.ReflectionContext"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateCatalog", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InnerCatalog", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Hosting.AggregateCatalog"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Tuple`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_DisplayName");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"))
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_Origin");

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_isDisposed", $.Boolean);

    $.Field({Static:false, Public:false}, "_innerCatalog", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AggregateCatalog"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_thisLock", $.Object);

    $.Field({Static:false, Public:false}, "_definitionOrigin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.Field({Static:false, Public:false}, "_reflectionContext", $asm0F.TypeRef("System.Reflection.ReflectionContext"));

    $.Property({Static:false, Public:false}, "InnerCatalog", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AggregateCatalog"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.Origin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.ImplementInterfaces(
      /* 3 */ $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.DirectoryCatalog */ 

(function DirectoryCatalog$Members () {
  var $, $thisType;

































  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), 
      Name: "System.ComponentModel.Composition.Hosting.DirectoryCatalog", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm0F.TypeRef("System.Reflection.ReflectionContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm0F.TypeRef("System.Reflection.ReflectionContext"), 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm0F.TypeRef("System.Reflection.ReflectionContext")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm0F.TypeRef("System.Reflection.ReflectionContext"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "add_Changed", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "add_Changing", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "CreateAssemblyCatalogGuarded", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Hosting.AssemblyCatalog"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "DiffChanges", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.String]), $jsilcore.TypeRef("System.Array", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0F.TypeRef("System.Tuple`2", [$.String, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AssemblyCatalog")])])]), $jsilcore.TypeRef("JSIL.Reference", [$asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0F.TypeRef("System.Tuple`2", [$.String, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AssemblyCatalog")])])])
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FullPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LoadedFiles", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Path", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SearchPattern", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Tuple`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetFiles", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.String]))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetFullPath", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanging", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Refresh", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "remove_Changed", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "remove_Changing", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_DisplayName");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"))
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_Origin");

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_thisLock", $asm13.TypeRef("Microsoft.Internal.Lock"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_definitionOrigin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.Field({Static:false, Public:false}, "_catalogCollection", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogCollection"));

    $.Field({Static:false, Public:false}, "_assemblyCatalogs", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AssemblyCatalog")]));

    $.Field({Static:false, Public:false}, "_isDisposed", $asm0F.TypeRef("System.Boolean"));

    $.Field({Static:false, Public:false}, "_path", $.String);

    $.Field({Static:false, Public:false}, "_fullPath", $.String);

    $.Field({Static:false, Public:false}, "_searchPattern", $.String);

    $.Field({Static:false, Public:false}, "_loadedFiles", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.String]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_reflectionContext", $asm0F.TypeRef("System.Reflection.ReflectionContext"));

    $.Field({Static:false, Public:false}, "Changed", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Changing", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]))
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "FullPath", $.String);

    $.Property({Static:false, Public:true }, "LoadedFiles", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.String]));

    $.Property({Static:false, Public:true }, "Path", $.String);

    $.Property({Static:false, Public:true }, "SearchPattern", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.Origin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.Event({Static:false, Public:true , Virtual:true }, "Changed", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]));

    $.Event({Static:false, Public:true , Virtual:true }, "Changing", $asm0F.TypeRef("System.EventHandler`1", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs")]));

    $.ImplementInterfaces(
      /* 3 */ $asm13.TypeRef("System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged"), 
      /* 4 */ $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.DirectoryCatalog+DirectoryCatalogDebuggerProxy */ 

(function DirectoryCatalogDebuggerProxy$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.DirectoryCatalog+DirectoryCatalogDebuggerProxy", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Hosting.DirectoryCatalog"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Assemblies", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0F.TypeRef("System.Reflection.Assembly")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FullPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LoadedFiles", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Parts", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Path", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ReflectionContext", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.ReflectionContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SearchPattern", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_catalog", $asm13.TypeRef("System.ComponentModel.Composition.Hosting.DirectoryCatalog"));

    $.Property({Static:false, Public:true }, "Assemblies", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0F.TypeRef("System.Reflection.Assembly")]));

    $.Property({Static:false, Public:true }, "ReflectionContext", $asm0F.TypeRef("System.Reflection.ReflectionContext"));

    $.Property({Static:false, Public:true }, "SearchPattern", $.String);

    $.Property({Static:false, Public:true }, "Path", $.String);

    $.Property({Static:false, Public:true }, "FullPath", $.String);

    $.Property({Static:false, Public:true }, "LoadedFiles", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.String]));

    $.Property({Static:false, Public:true }, "Parts", $asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Hosting.DirectoryCatalog+DirectoryCatalogDebuggerProxy+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.DirectoryCatalog+DirectoryCatalogDebuggerProxy+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Assemblies$gb__3_0", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Reflection.Assembly"), [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.AssemblyCatalog")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__3_0", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Hosting.AssemblyCatalog"), $asm0F.TypeRef("System.Reflection.Assembly")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.DirectoryCatalog+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.DirectoryCatalog+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetEnumerator$gb__33_0", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetFiles$gb__42_0", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lRefresh$gb__37_0", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), [$asm0F.TypeRef("System.Tuple`2", [$.String, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AssemblyCatalog")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lRefresh$gb__37_1", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")]), [$asm0F.TypeRef("System.Tuple`2", [$.String, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AssemblyCatalog")])])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__33_0", $asm0F.TypeRef("System.Func`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])]));

    $.Field({Static:true , Public:true }, "$l$g9__37_0", $asm0F.TypeRef("System.Func`2", [$asm0F.TypeRef("System.Tuple`2", [$.String, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AssemblyCatalog")]), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])]));

    $.Field({Static:true , Public:true }, "$l$g9__37_1", $asm0F.TypeRef("System.Func`2", [$asm0F.TypeRef("System.Tuple`2", [$.String, $asm13.TypeRef("System.ComponentModel.Composition.Hosting.AssemblyCatalog")]), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition")])]));

    $.Field({Static:true , Public:true }, "$l$g9__42_0", $asm0F.TypeRef("System.Converter`2", [$.String, $.String]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.Hosting.DirectoryCatalog+<>c__DisplayClass34_0 */ 

(function $l$gc__DisplayClass34_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Hosting.DirectoryCatalog+<>c__DisplayClass34_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetExports$gb__0", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Tuple`2", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")])]), [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartCatalog")])
    );

    $.Field({Static:false, Public:true }, "definition", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.ComponentModel.Composition.Diagnostics");
/* class System.ComponentModel.Composition.Diagnostics.CompositionTrace */ 

(function CompositionTrace$Members () {
  var $, $thisType;








  JSIL.MakeStaticClass("System.ComponentModel.Composition.Diagnostics.CompositionTrace", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "AssemblyLoadFailed", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Hosting.DirectoryCatalog"), $.String, 
          $asm0F.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DefinitionContainsNoExports", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:true , Public:false}, "DefinitionMarkedWithPartNotDiscoverableAttribute", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:true , Public:false}, "DefinitionMismatchedExportArity", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Reflection.MemberInfo")])
    );

    $.ExternalMethod({Static:true , Public:false}, "MemberMarkedWithMultipleImportAndImportMany", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionItem"))
    );

    $.ExternalMethod({Static:true , Public:false}, "PartDefinitionRejected", 
      new JSIL.MethodSignature(null, [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), $asm13.TypeRef("System.ComponentModel.Composition.ChangeRejectedException")])
    );

    $.ExternalMethod({Static:true , Public:false}, "PartDefinitionResurrected", 
      JSIL.MethodSignature.Action($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.ComponentModel.Composition.Diagnostics.CompositionTraceId */ 

JSIL.MakeEnum(
  {
    FullName: "System.ComponentModel.Composition.Diagnostics.CompositionTraceId", 
    BaseType: $asm0F.TypeRef("System.UInt16"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Rejection_DefinitionRejected: 1, 
    Rejection_DefinitionResurrected: 2, 
    Discovery_AssemblyLoadFailed: 3, 
    Discovery_DefinitionMarkedWithPartNotDiscoverableAttribute: 4, 
    Discovery_DefinitionMismatchedExportArity: 5, 
    Discovery_DefinitionContainsNoExports: 6, 
    Discovery_MemberMarkedWithMultipleImportAndImportMany: 7, 
  }
);

/* class System.ComponentModel.Composition.Diagnostics.CompositionTraceSource */ 

(function CompositionTraceSource$Members () {
  var $, $thisType;








  JSIL.MakeStaticClass("System.ComponentModel.Composition.Diagnostics.CompositionTraceSource", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "EnsureEnabled", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_CanWriteError", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_CanWriteInformation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_CanWriteWarning", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "WriteError", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Diagnostics.CompositionTraceId"), $.String, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(2, "arguments", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:true }, "WriteInformation", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Diagnostics.CompositionTraceId"), $.String, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(2, "arguments", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:true }, "WriteWarning", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Diagnostics.CompositionTraceId"), $.String, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(2, "arguments", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.Field({Static:true , Public:false, ReadOnly:true }, "Source", $asm13.TypeRef("System.ComponentModel.Composition.Diagnostics.TraceSourceTraceWriter"));

    $.Property({Static:true , Public:true }, "CanWriteInformation", $.Boolean);

    $.Property({Static:true , Public:true }, "CanWriteWarning", $.Boolean);

    $.Property({Static:true , Public:true }, "CanWriteError", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Diagnostics.TraceWriter */ 

(function TraceWriter$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.Diagnostics.TraceWriter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanWriteError", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanWriteInformation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanWriteWarning", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteError", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Diagnostics.CompositionTraceId"), $.String, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(2, "arguments", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteInformation", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Diagnostics.CompositionTraceId"), $.String, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(2, "arguments", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteWarning", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Diagnostics.CompositionTraceId"), $.String, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(2, "arguments", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.Property({Static:false, Public:true , Virtual:true }, "CanWriteInformation", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanWriteWarning", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanWriteError", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.Diagnostics.TraceSourceTraceWriter */ 

(function TraceSourceTraceWriter$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Diagnostics.TraceWriter"), 
      Name: "System.ComponentModel.Composition.Diagnostics.TraceSourceTraceWriter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanWriteError", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanWriteInformation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanWriteWarning", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteError", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Diagnostics.CompositionTraceId"), $.String, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(2, "arguments", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:false}, "WriteEvent", 
      new JSIL.MethodSignature(null, [
          $asm12.TypeRef("System.Diagnostics.TraceEventType"), $asm13.TypeRef("System.ComponentModel.Composition.Diagnostics.CompositionTraceId"), 
          $.String, $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(3, "arguments", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteInformation", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Diagnostics.CompositionTraceId"), $.String, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(2, "arguments", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteWarning", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.Diagnostics.CompositionTraceId"), $.String, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(2, "arguments", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.Field({Static:true , Public:false, ReadOnly:true }, "Source", $asm12.TypeRef("System.Diagnostics.TraceSource"));

    $.Property({Static:false, Public:true , Virtual:true }, "CanWriteInformation", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanWriteWarning", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanWriteError", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.ComponentModel.Composition.AttributedModel");
/* class System.ComponentModel.Composition.AttributedModel.AttributedModelDiscovery */ 

(function AttributedModelDiscovery$Members () {
  var $, $thisType;







  JSIL.MakeStaticClass("System.ComponentModel.Composition.AttributedModel.AttributedModelDiscovery", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CreateMemberImportDefinition", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionMemberImportDefinition"), [$asm0F.TypeRef("System.Reflection.MemberInfo"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateParameterImportDefinition", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionParameterImportDefinition"), [$asm0F.TypeRef("System.Reflection.ParameterInfo"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreatePart", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePart"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreatePartDefinition", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePartDefinition"), [
          $asm0F.TypeRef("System.Type"), $asm13.TypeRef("System.ComponentModel.Composition.PartCreationPolicyAttribute"), 
          $.Boolean, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreatePartDefinitionIfDiscoverable", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ComposablePartDefinition"), [$asm0F.TypeRef("System.Type"), $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetAttributedImport", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.IAttributedImport"), [$asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.ReflectionItem"), $asm0F.TypeRef("System.Reflection.ICustomAttributeProvider")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.AttributedModel.AttributedModelDiscovery+<>c__DisplayClass5_0 */ 

(function $l$gc__DisplayClass5_0$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.AttributedModel.AttributedModelDiscovery+<>c__DisplayClass5_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCreateParameterImportDefinition$gb__0", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.ParameterInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCreateParameterImportDefinition$gb__1", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.ParameterInfo"))
    );

    $.Field({Static:false, Public:true }, "parameter", $asm0F.TypeRef("System.Reflection.ParameterInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo */ 

(function AttributedPartCreationInfo$Members () {
  var $, $thisType;





























  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Type"), $asm13.TypeRef("System.ComponentModel.Composition.PartCreationPolicyAttribute"), 
          $.Boolean, $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AllExportsHaveMatchingArity", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateExportDefinition", 
      new JSIL.MethodSignature($asm13.TypeRef("System.ComponentModel.Composition.AttributedModel.AttributedExportDefinition"), [$asm0F.TypeRef("System.Reflection.MemberInfo"), $asm13.TypeRef("System.ComponentModel.Composition.ExportAttribute")])
    );

    $.ExternalMethod({Static:false, Public:false}, "DiscoverExportsAndImports", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CreationPolicy", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsDisposalRequired", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsIdentityComparison", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetConstructor", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.ConstructorInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDeclaredOnlyImportMembers", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExportDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExportMembers", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExports", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetImportDefinitions", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetImportMembers", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetImports", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetInheritedExports", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Type")]), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetMetadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetPartType", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false}, "HasExports", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "IsExport", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Reflection.ICustomAttributeProvider")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsImport", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Reflection.ICustomAttributeProvider")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsInheritedExport", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Reflection.ICustomAttributeProvider")])
    );

    $.ExternalMethod({Static:false, Public:true }, "IsPartDiscoverable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "SelectPartConstructor", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Reflection.ConstructorInfo"), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_DisplayName");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin", 
      JSIL.MethodSignature.Return($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"))
    )
      .Overrides($asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"), "get_Origin");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_type", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_ignoreConstructorImports", $.Boolean);

    $.Field({Static:false, Public:false, ReadOnly:true }, "_origin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.Field({Static:false, Public:false}, "_partCreationPolicy", $asm13.TypeRef("System.ComponentModel.Composition.PartCreationPolicyAttribute"));

    $.Field({Static:false, Public:false}, "_constructor", $asm0F.TypeRef("System.Reflection.ConstructorInfo"));

    $.Field({Static:false, Public:false}, "_exports", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition")]));

    $.Field({Static:false, Public:false}, "_imports", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm13.TypeRef("System.ComponentModel.Composition.Primitives.ImportDefinition")]));

    $.Field({Static:false, Public:false}, "_contractNamesOnNonInterfaces", $asm15.TypeRef("System.Collections.Generic.HashSet`1", [$.String]));

    $.Property({Static:false, Public:true , Virtual:true }, "IsDisposalRequired", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsIdentityComparison", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Composition.Primitives.ICompositionElement.Origin", $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement"));

    $.Property({Static:false, Public:false}, "CreationPolicy", $asm13.TypeRef("System.ComponentModel.Composition.CreationPolicy"));

    $.ImplementInterfaces(
      /* 0 */ $asm13.TypeRef("System.ComponentModel.Composition.ReflectionModel.IReflectionPartCreationInfo"), 
      /* 1 */ $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ICompositionElement")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo+<GetExportMembers>d__34 */ 

(function $lGetExportMembers$gd__34$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo+<GetExportMembers>d__34", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Reflection.MemberInfo$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Reflection.MemberInfo$g.get_Current", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.MemberInfo"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm0F.TypeRef("System.Reflection.MemberInfo"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "type", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g3__type", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo"));

    $.Field({Static:false, Public:false}, "$lflags$g5__1", $asm0F.TypeRef("System.Reflection.BindingFlags"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.FieldInfo")]));

    $.Field({Static:false, Public:false}, "$l$g7__wrap2", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g7__wrap3", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.PropertyInfo")]));

    $.Field({Static:false, Public:false}, "$l$g7__wrap4", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.MethodInfo")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Reflection.MemberInfo$g.Current", $asm0F.TypeRef("System.Reflection.MemberInfo"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]), 
      /* 3 */ $asm0F.TypeRef("System.IDisposable"), 
      /* 4 */ $asm0F.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo+<GetInheritedExports>d__35 */ 

(function $lGetInheritedExports$gd__35$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo+<GetInheritedExports>d__35", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Type$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Type")]))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Type")]), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Type$g.get_Current", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Type"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Type")]), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "type", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g3__type", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "$lcurrentType$g5__1", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "$l$g7__wrap2", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Type$g.Current", $asm0F.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Type")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Type")]), 
      /* 3 */ $asm0F.TypeRef("System.IDisposable"), 
      /* 4 */ $asm0F.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo+<GetImportMembers>d__39 */ 

(function $lGetImportMembers$gd__39$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo+<GetImportMembers>d__39", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally2", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Reflection.MemberInfo$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Reflection.MemberInfo$g.get_Current", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.MemberInfo"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm0F.TypeRef("System.Reflection.MemberInfo"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "type", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g3__type", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm13.TypeRef("System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo"));

    $.Field({Static:false, Public:false}, "$lbaseType$g5__1", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Reflection.MemberInfo$g.Current", $asm0F.TypeRef("System.Reflection.MemberInfo"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]), 
      /* 3 */ $asm0F.TypeRef("System.IDisposable"), 
      /* 4 */ $asm0F.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo+<GetDeclaredOnlyImportMembers>d__40 */ 

(function $lGetDeclaredOnlyImportMembers$gd__40$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo+<GetDeclaredOnlyImportMembers>d__40", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Reflection.MemberInfo$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Reflection.MemberInfo$g.get_Current", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.MemberInfo"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm0F.TypeRef("System.Reflection.MemberInfo"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "type", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g3__type", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "$lflags$g5__1", $asm0F.TypeRef("System.Reflection.BindingFlags"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.FieldInfo")]));

    $.Field({Static:false, Public:false}, "$l$g7__wrap2", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g7__wrap3", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.PropertyInfo")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Reflection.MemberInfo$g.Current", $asm0F.TypeRef("System.Reflection.MemberInfo"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Reflection.MemberInfo")]), 
      /* 3 */ $asm0F.TypeRef("System.IDisposable"), 
      /* 4 */ $asm0F.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ComponentModel.Composition.AttributedModel.AttributedExportDefinition */ 

(function AttributedExportDefinition$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm13.TypeRef("System.ComponentModel.Composition.Primitives.ExportDefinition"), 
      Name: "System.ComponentModel.Composition.AttributedModel.AttributedExportDefinition", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm13.TypeRef("System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo"), $asm0F.TypeRef("System.Reflection.MemberInfo"), 
          $asm13.TypeRef("System.ComponentModel.Composition.ExportAttribute"), $asm0F.TypeRef("System.Type"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_partCreationInfo", $asm13.TypeRef("System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_member", $asm0F.TypeRef("System.Reflection.MemberInfo"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_exportAttribute", $asm13.TypeRef("System.ComponentModel.Composition.ExportAttribute"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_typeIdentityType", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "_metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:true , Virtual:true }, "Metadata", $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("Microsoft");
JSIL.DeclareNamespace("Microsoft.Internal");
/* class Microsoft.Internal.Assumes */ 

(function Assumes$Members () {
  var $, $thisType;









  JSIL.MakeStaticClass("Microsoft.Internal.Assumes", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "IsTrue", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "IsTrue", 
      new JSIL.MethodSignature(null, [$.Boolean, $.String])
    )
      .Parameter(1, "message", function (_) {
          _
        });

    $.ExternalMethod({Static:true , Public:false}, "NotNull", 
      new JSIL.MethodSignature(null, ["!!0"], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "NotNull", 
      new JSIL.MethodSignature(null, ["!!0", "!!1"], ["T1", "T2"])
    );

    $.ExternalMethod({Static:true , Public:false}, "NotNull", 
      new JSIL.MethodSignature(null, [
          "!!0", "!!1", 
          "!!2"
        ], ["T1", "T2", "T3"])
    );

    $.ExternalMethod({Static:true , Public:false}, "NotNullOrEmpty", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "NotReachable", 
      new JSIL.MethodSignature("!!0", null, ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "UncatchableException", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Exception"), [$.String])
    )
      .Parameter(0, "message", function (_) {
          _
        });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Internal.Assumes+InternalErrorException */ 

(function InternalErrorException$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Exception"), 
      Name: "Microsoft.Internal.Assumes+InternalErrorException", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Internal.AttributeServices */ 

(function AttributeServices$Members () {
  var $, $thisType;







  JSIL.MakeStaticClass("Microsoft.Internal.AttributeServices", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "GetAttributes", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", ["!!0"]), [$asm0F.TypeRef("System.Reflection.ICustomAttributeProvider")], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetAttributes", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", ["!!0"]), [$asm0F.TypeRef("System.Reflection.ICustomAttributeProvider"), $.Boolean], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetFirstAttribute", 
      new JSIL.MethodSignature("!!0", [$asm0F.TypeRef("System.Reflection.ICustomAttributeProvider")], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetFirstAttribute", 
      new JSIL.MethodSignature("!!0", [$asm0F.TypeRef("System.Reflection.ICustomAttributeProvider"), $.Boolean], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsAttributeDefined", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Reflection.ICustomAttributeProvider")], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsAttributeDefined", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Reflection.ICustomAttributeProvider"), $.Boolean], ["T"])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Internal.BinaryCompatibility */ 

(function BinaryCompatibility$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };



  function BinaryCompatibility_get_TargetsAtLeast_Desktop_V4_5 () {
    return $thisType.BinaryCompatibility$TargetsAtLeast_Desktop_V4_5$value;
  }; 


  function BinaryCompatibility_set_TargetsAtLeast_Desktop_V4_5 (value) {
    $thisType.BinaryCompatibility$TargetsAtLeast_Desktop_V4_5$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Microsoft.Internal.BinaryCompatibility", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:true , Public:true }, "get_TargetsAtLeast_Desktop_V4_5", 
      JSIL.MethodSignature.Return($.Boolean), 
      BinaryCompatibility_get_TargetsAtLeast_Desktop_V4_5
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetTargetFrameworkNameFromEntryAssembly", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm0F.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Method({Static:true , Public:false}, "set_TargetsAtLeast_Desktop_V4_5", 
      JSIL.MethodSignature.Action($.Boolean), 
      BinaryCompatibility_set_TargetsAtLeast_Desktop_V4_5
    )
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "Framework45", $asm0F.TypeRef("System.Version"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "Current", $.Type);

    $.Field({Static:true , Public:false}, "BinaryCompatibility$TargetsAtLeast_Desktop_V4_5$value", $.Boolean)
      .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:true , Public:true }, "TargetsAtLeast_Desktop_V4_5", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Internal.ContractServices */ 

(function ContractServices$Members () {
  var $, $thisType;


  JSIL.MakeStaticClass("Microsoft.Internal.ContractServices", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "TryCast", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0F.TypeRef("System.Type"), $.Object, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Internal.GenerationServices */ 

(function GenerationServices$Members () {
  var $, $thisType;














  JSIL.MakeStaticClass("Microsoft.Internal.GenerationServices", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "AddItemToLocalDictionary", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Reflection.Emit.ILGenerator"), $asm0F.TypeRef("System.Reflection.Emit.LocalBuilder"), 
          $.Object, $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "AddLocalToLocalDictionary", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Reflection.Emit.ILGenerator"), $asm0F.TypeRef("System.Reflection.Emit.LocalBuilder"), 
          $.Object, $asm0F.TypeRef("System.Reflection.Emit.LocalBuilder")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetExceptionDataAndStoreInLocal", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Reflection.Emit.ILGenerator"), $asm0F.TypeRef("System.Reflection.Emit.LocalBuilder"), 
          $asm0F.TypeRef("System.Reflection.Emit.LocalBuilder")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsBoxingRequiredForValue", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "LoadDouble", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Reflection.Emit.ILGenerator"), $.Double])
    );

    $.ExternalMethod({Static:true , Public:false}, "LoadEnumerable", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Reflection.Emit.ILGenerator"), $asm0F.TypeRef("System.Collections.IEnumerable")])
    );

    $.ExternalMethod({Static:true , Public:false}, "LoadFloat", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Reflection.Emit.ILGenerator"), $.Single])
    );

    $.ExternalMethod({Static:true , Public:false}, "LoadInt", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Reflection.Emit.ILGenerator"), $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "LoadLong", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Reflection.Emit.ILGenerator"), $.Int64])
    );

    $.ExternalMethod({Static:true , Public:false}, "LoadNull", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Reflection.Emit.ILGenerator"))
    );

    $.ExternalMethod({Static:true , Public:false}, "LoadString", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Reflection.Emit.ILGenerator"), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "LoadTypeOf", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Reflection.Emit.ILGenerator"), $asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "LoadValue", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Reflection.Emit.ILGenerator"), $.Object])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "_typeGetTypeFromHandleMethod", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "TypeType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Type.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "StringType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.String.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "CharType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Char.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "BooleanType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Boolean.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "ByteType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Byte.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "SByteType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.SByte.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "Int16Type", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Int16.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "UInt16Type", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.UInt16.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "Int32Type", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Int32.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "UInt32Type", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.UInt32.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "Int64Type", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Int64.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "UInt64Type", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.UInt64.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "DoubleType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Double.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "SingleType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Single.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "IEnumerableTypeofT", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Collections.Generic.IEnumerable$b1.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "IEnumerableType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Collections.IEnumerable.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "ExceptionGetData", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "DictionaryAdd", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "ObjectCtor", $asm0F.TypeRef("System.Reflection.ConstructorInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Internal.LazyServices */ 

(function LazyServices$Members () {
  var $, $thisType;


  JSIL.MakeStaticClass("Microsoft.Internal.LazyServices", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "GetNotNullValue", 
      new JSIL.MethodSignature("!!0", [$asm0F.TypeRef("System.Lazy`1", ["!!0"]), $.String], ["T"])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Internal.Lock */ 

(function Lock$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Microsoft.Internal.Lock", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "EnterReadLock", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "EnterWriteLock", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ExitReadLock", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ExitWriteLock", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_thisLock", $asm15.TypeRef("System.Threading.ReaderWriterLockSlim"));

    $.Field({Static:false, Public:false}, "_isDisposed", $.Int32);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Microsoft.Internal.ReadLock */ 

(function ReadLock$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "Microsoft.Internal.ReadLock", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 1, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("Microsoft.Internal.Lock"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_lock", $asm13.TypeRef("Microsoft.Internal.Lock"));

    $.Field({Static:false, Public:false}, "_isDisposed", $.Int32);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Microsoft.Internal.WriteLock */ 

(function WriteLock$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "Microsoft.Internal.WriteLock", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 1, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm13.TypeRef("Microsoft.Internal.Lock"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_lock", $asm13.TypeRef("Microsoft.Internal.Lock"));

    $.Field({Static:false, Public:false}, "_isDisposed", $.Int32);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Internal.Requires */ 

(function Requires$Members () {
  var $, $thisType;









  JSIL.MakeStaticClass("Microsoft.Internal.Requires", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "IsInMembertypeSet", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Reflection.MemberTypes"), $.String, 
          $asm0F.TypeRef("System.Reflection.MemberTypes")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "NotNull", 
      new JSIL.MethodSignature(null, ["!!0", $.String], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "NotNullElements", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $.String], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "NotNullElements", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", ["!!0"]), $.String], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "NotNullOrEmpty", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "NotNullOrNullElements", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $.String], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "NullOrNotNullElements", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $.String], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "NullOrNotNullElements", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", ["!!0"]), $.String], ["T"])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Internal.Requires+<>c__5`1 */ 

(function $l$gc__5$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Microsoft.Internal.Requires+<>c__5`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lNotNullElements$gb__5_0", 
      new JSIL.MethodSignature($.Boolean, [$.GenericParameter("T")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $asm13.TypeRef("Microsoft.Internal.Requires+<>c__5`1", [$.GenericParameter("T")]));

    $.Field({Static:true , Public:true }, "$l$g9__5_0", $asm0F.TypeRef("System.Predicate`1", [$.GenericParameter("T")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Microsoft.Internal.StringComparers */ 

(function StringComparers$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("Microsoft.Internal.StringComparers", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "get_ContractName", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.StringComparer"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_MetadataKeyNames", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.StringComparer"))
    );

    $.Property({Static:true , Public:true }, "ContractName", $asm0F.TypeRef("System.StringComparer"));

    $.Property({Static:true , Public:true }, "MetadataKeyNames", $asm0F.TypeRef("System.StringComparer"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Internal.ReflectionServices */ 

(function ReflectionServices$Members () {
  var $, $thisType;














  JSIL.MakeStaticClass("Microsoft.Internal.ReflectionServices", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "Assembly", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Reflection.Assembly"), [$asm0F.TypeRef("System.Reflection.MemberInfo")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetAllFields", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.FieldInfo")]), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetAllMethods", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.MethodInfo")]), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetAllProperties", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.PropertyInfo")]), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDeclaredFields", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.FieldInfo")]), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDeclaredMethods", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.MethodInfo")]), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetDisplayName", 
      new JSIL.MethodSignature($.String, [$asm0F.TypeRef("System.Type"), $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetDisplayName", 
      new JSIL.MethodSignature($.String, [$asm0F.TypeRef("System.Reflection.MemberInfo")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HasBaseclassOf", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsVisible", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Reflection.ConstructorInfo")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsVisible", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Reflection.FieldInfo")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsVisible", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Reflection.MethodInfo")])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryGetGenericInterfaceType", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Type"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0F.TypeRef("System.Type")])
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Internal.ReflectionServices+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Microsoft.Internal.ReflectionServices+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetAllProperties$gb__7_0", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.PropertyInfo")]), [$asm0F.TypeRef("System.Type")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__7_0", $asm0F.TypeRef("System.Func`2", [$asm0F.TypeRef("System.Type"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.PropertyInfo")])]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Microsoft.Internal.ReflectionServices+<GetDeclaredMethods>d__9 */ 

(function $lGetDeclaredMethods$gd__9$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Microsoft.Internal.ReflectionServices+<GetDeclaredMethods>d__9", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Reflection.MethodInfo$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Reflection.MethodInfo")]))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.MethodInfo")]), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Reflection.MethodInfo$g.get_Current", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.MethodInfo"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Reflection.MethodInfo")]), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "type", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g3__type", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.MethodInfo")]));

    $.Field({Static:false, Public:false}, "$l$g7__wrap2", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Reflection.MethodInfo$g.Current", $asm0F.TypeRef("System.Reflection.MethodInfo"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.MethodInfo")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Reflection.MethodInfo")]), 
      /* 3 */ $asm0F.TypeRef("System.IDisposable"), 
      /* 4 */ $asm0F.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Microsoft.Internal.ReflectionServices+<GetDeclaredFields>d__11 */ 

(function $lGetDeclaredFields$gd__11$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Microsoft.Internal.ReflectionServices+<GetDeclaredFields>d__11", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Reflection.FieldInfo$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Reflection.FieldInfo")]))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.FieldInfo")]), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Reflection.FieldInfo$g.get_Current", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Reflection.FieldInfo"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Reflection.FieldInfo")]), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm0F.TypeRef("System.Reflection.FieldInfo"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "type", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g3__type", $asm0F.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("System.Reflection.FieldInfo")]));

    $.Field({Static:false, Public:false}, "$l$g7__wrap2", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Reflection.FieldInfo$g.Current", $asm0F.TypeRef("System.Reflection.FieldInfo"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Reflection.FieldInfo")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0F.TypeRef("System.Reflection.FieldInfo")]), 
      /* 3 */ $asm0F.TypeRef("System.IDisposable"), 
      /* 4 */ $asm0F.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Microsoft.Internal.ReflectionInvoke */ 

(function ReflectionInvoke$Members () {
  var $, $thisType;













  JSIL.MakeStaticClass("Microsoft.Internal.ReflectionInvoke", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "DemandMemberAccess", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Reflection.MemberInfo"))
    )
      .Attribute($asm0F.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "DemandMemberAccessIfNeeded", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "DemandMemberAccessIfNeeded", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Reflection.FieldInfo"))
    );

    $.ExternalMethod({Static:true , Public:true }, "DemandMemberAccessIfNeeded", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:true , Public:false}, "DemandMemberAccessIfNeeded", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Reflection.ConstructorInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "DemandRestrictedMemberAccess", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Reflection.MemberInfo"))
    )
      .Attribute($asm0F.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "SafeCreateInstance", 
      new JSIL.MethodSignature($.Object, [$asm0F.TypeRef("System.Type"), $jsilcore.TypeRef("System.Array", [$.Object])])
    )
      .Parameter(1, "arguments", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:true }, "SafeGetValue", 
      new JSIL.MethodSignature($.Object, [$asm0F.TypeRef("System.Reflection.FieldInfo"), $.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "SafeInvoke", 
      new JSIL.MethodSignature($.Object, [$asm0F.TypeRef("System.Reflection.ConstructorInfo"), $jsilcore.TypeRef("System.Array", [$.Object])])
    )
      .Parameter(1, "arguments", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:true }, "SafeInvoke", 
      new JSIL.MethodSignature($.Object, [
          $asm0F.TypeRef("System.Reflection.MethodInfo"), $.Object, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(2, "arguments", function (_) {
          _.Attribute($asm0F.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:true }, "SafeSetValue", 
      new JSIL.MethodSignature(null, [
          $asm0F.TypeRef("System.Reflection.FieldInfo"), $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnsafePermissionSet", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Security.PermissionSet"), [$asm0F.TypeRef("System.Reflection.Assembly")])
    )
      .Attribute($asm0F.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "_memberAccess", $asm0F.TypeRef("System.Security.Permissions.ReflectionPermission"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "_restrictedMemberAccess", $asm0F.TypeRef("System.Security.Permissions.ReflectionPermission"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Internal.Strings */ 

(function Strings$Members () {
  var $, $thisType;




































































































  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Microsoft.Internal.Strings", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "get_Argument_AssemblyReflectionOnly", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Argument_ElementReflectionOnlyType", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Argument_ExportsEmpty", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Argument_ExportsTooMany", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Argument_NullElement", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Argument_ReflectionContextReturnsReflectionOnlyType", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ArgumentException_EmptyString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ArgumentOutOfRange_InvalidEnum", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ArgumentOutOfRange_InvalidEnumInSet", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ArgumentValueType", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_AtomicComposition_AlreadyCompleted", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_AtomicComposition_AlreadyNested", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_AtomicComposition_PartOfAnotherAtomicComposition", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CardinalityMismatch_NoExports", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CardinalityMismatch_TooManyExports", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionElement_UnknownOrigin", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionException_ChangesRejected", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionException_ElementPrefix", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionException_ErrorPrefix", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionException_MetadataViewInvalidConstructor", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionException_MultipleErrorsWithMultiplePaths", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionException_OriginFormat", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionException_OriginSeparator", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionException_PathsCountSeparator", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionException_ReviewErrorProperty", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionException_SingleErrorWithMultiplePaths", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionException_SingleErrorWithSinglePath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionTrace_Discovery_AssemblyLoadFailed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionTrace_Discovery_DefinitionContainsNoExports", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionTrace_Discovery_DefinitionMarkedWithPartNotDiscoverableAttribute", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionTrace_Discovery_DefinitionMismatchedExportArity", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionTrace_Discovery_MemberMarkedWithMultipleImportAndImportMany", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionTrace_Rejection_DefinitionRejected", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompositionTrace_Rejection_DefinitionResurrected", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ContractMismatch_ExportedValueCannotBeCastToT", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ContractMismatch_InvalidCastOnMetadataField", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ContractMismatch_MetadataViewImplementationCanNotBeNull", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ContractMismatch_MetadataViewImplementationDoesNotImplementViewInterface", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ContractMismatch_NullReferenceOnMetadataField", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Discovery_DuplicateMetadataNameValues", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Discovery_MetadataContainsValueWithInvalidType", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Discovery_ReservedMetadataNameUsed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ExportDefinitionNotOnThisComposablePart", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ExportFactory_TooManyGenericParameters", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ExportNotValidOnIndexers", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ImportDefinitionNotOnThisComposablePart", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ImportEngine_ComposeTookTooManyIterations", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ImportEngine_InvalidStateForRecomposition", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ImportEngine_PartCannotActivate", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ImportEngine_PartCannotGetExportedValue", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ImportEngine_PartCannotSetImport", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ImportEngine_PartCycle", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ImportEngine_PreventedByExistingImport", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ImportNotSetOnPart", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ImportNotValidOnIndexers", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InternalExceptionMessage", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidMetadataValue", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidMetadataView", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidOperation_DefinitionCannotBeRecomposed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidOperation_GetExportedValueBeforePrereqImportSet", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidOperation_RevertAndCompleteActionsMustNotThrow", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidSetterOnMetadataField", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_LazyMemberInfo_AccessorsNull", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_LazyMemberInfo_InvalidAccessorOnSimpleMember", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_LazyMemberinfo_InvalidEventAccessors_AccessorType", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_LazyMemberInfo_InvalidEventAccessors_Cardinality", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_LazyMemberinfo_InvalidPropertyAccessors_AccessorType", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_LazyMemberInfo_InvalidPropertyAccessors_Cardinality", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_LazyMemberInfo_NoAccessors", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_LazyServices_LazyResolvesToNull", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NotImplemented_NotOverriddenByDerived", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NotSupportedCatalogChanges", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NotSupportedInterfaceMetadataView", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ObjectAlreadyInitialized", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ObjectMustBeInitialized", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReentrantCompose", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionContext_Requires_DefaultConstructor", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionContext_Type_Required", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_ExportNotReadable", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_ExportThrewException", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_ImportCollectionAddThrewException", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_ImportCollectionClearThrewException", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_ImportCollectionConstructionThrewException", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_ImportCollectionGetThrewException", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_ImportCollectionIsReadOnlyThrewException", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_ImportCollectionNotWritable", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_ImportCollectionNull", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_ImportManyOnParameterCanOnlyBeAssigned", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_ImportNotAssignableFromExport", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_ImportNotWritable", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_ImportThrewException", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_InvalidExportDefinition", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_InvalidMemberImportDefinition", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_PartConstructorMissing", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_PartConstructorThrewException", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReflectionModel_PartOnImportsSatisfiedThrewException", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ResourceManager", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Resources.ResourceManager"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TypeCatalog_DisplayNameFormat", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TypeCatalog_Empty", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:true , Public:false}, "resourceMan", $asm0F.TypeRef("System.Resources.ResourceManager"));

    $.Field({Static:true , Public:false}, "resourceCulture", $asm0F.TypeRef("System.Globalization.CultureInfo"));

    $.Property({Static:true , Public:false}, "ResourceManager", $asm0F.TypeRef("System.Resources.ResourceManager"));

    $.Property({Static:true , Public:false}, "Argument_AssemblyReflectionOnly", $.String);

    $.Property({Static:true , Public:false}, "Argument_ElementReflectionOnlyType", $.String);

    $.Property({Static:true , Public:false}, "Argument_ExportsEmpty", $.String);

    $.Property({Static:true , Public:false}, "Argument_ExportsTooMany", $.String);

    $.Property({Static:true , Public:false}, "Argument_NullElement", $.String);

    $.Property({Static:true , Public:false}, "Argument_ReflectionContextReturnsReflectionOnlyType", $.String);

    $.Property({Static:true , Public:false}, "ArgumentException_EmptyString", $.String);

    $.Property({Static:true , Public:false}, "ArgumentOutOfRange_InvalidEnum", $.String);

    $.Property({Static:true , Public:false}, "ArgumentOutOfRange_InvalidEnumInSet", $.String);

    $.Property({Static:true , Public:false}, "ArgumentValueType", $.String);

    $.Property({Static:true , Public:false}, "AtomicComposition_AlreadyCompleted", $.String);

    $.Property({Static:true , Public:false}, "AtomicComposition_AlreadyNested", $.String);

    $.Property({Static:true , Public:false}, "AtomicComposition_PartOfAnotherAtomicComposition", $.String);

    $.Property({Static:true , Public:false}, "CardinalityMismatch_NoExports", $.String);

    $.Property({Static:true , Public:false}, "CardinalityMismatch_TooManyExports", $.String);

    $.Property({Static:true , Public:false}, "CompositionElement_UnknownOrigin", $.String);

    $.Property({Static:true , Public:false}, "CompositionException_ChangesRejected", $.String);

    $.Property({Static:true , Public:false}, "CompositionException_ElementPrefix", $.String);

    $.Property({Static:true , Public:false}, "CompositionException_ErrorPrefix", $.String);

    $.Property({Static:true , Public:false}, "CompositionException_MetadataViewInvalidConstructor", $.String);

    $.Property({Static:true , Public:false}, "CompositionException_MultipleErrorsWithMultiplePaths", $.String);

    $.Property({Static:true , Public:false}, "CompositionException_OriginFormat", $.String);

    $.Property({Static:true , Public:false}, "CompositionException_OriginSeparator", $.String);

    $.Property({Static:true , Public:false}, "CompositionException_PathsCountSeparator", $.String);

    $.Property({Static:true , Public:false}, "CompositionException_ReviewErrorProperty", $.String);

    $.Property({Static:true , Public:false}, "CompositionException_SingleErrorWithMultiplePaths", $.String);

    $.Property({Static:true , Public:false}, "CompositionException_SingleErrorWithSinglePath", $.String);

    $.Property({Static:true , Public:false}, "CompositionTrace_Discovery_AssemblyLoadFailed", $.String);

    $.Property({Static:true , Public:false}, "CompositionTrace_Discovery_DefinitionContainsNoExports", $.String);

    $.Property({Static:true , Public:false}, "CompositionTrace_Discovery_DefinitionMarkedWithPartNotDiscoverableAttribute", $.String);

    $.Property({Static:true , Public:false}, "CompositionTrace_Discovery_DefinitionMismatchedExportArity", $.String);

    $.Property({Static:true , Public:false}, "CompositionTrace_Discovery_MemberMarkedWithMultipleImportAndImportMany", $.String);

    $.Property({Static:true , Public:false}, "CompositionTrace_Rejection_DefinitionRejected", $.String);

    $.Property({Static:true , Public:false}, "CompositionTrace_Rejection_DefinitionResurrected", $.String);

    $.Property({Static:true , Public:false}, "ContractMismatch_ExportedValueCannotBeCastToT", $.String);

    $.Property({Static:true , Public:false}, "ContractMismatch_InvalidCastOnMetadataField", $.String);

    $.Property({Static:true , Public:false}, "ContractMismatch_MetadataViewImplementationCanNotBeNull", $.String);

    $.Property({Static:true , Public:false}, "ContractMismatch_MetadataViewImplementationDoesNotImplementViewInterface", $.String);

    $.Property({Static:true , Public:false}, "ContractMismatch_NullReferenceOnMetadataField", $.String);

    $.Property({Static:true , Public:false}, "Discovery_DuplicateMetadataNameValues", $.String);

    $.Property({Static:true , Public:false}, "Discovery_MetadataContainsValueWithInvalidType", $.String);

    $.Property({Static:true , Public:false}, "Discovery_ReservedMetadataNameUsed", $.String);

    $.Property({Static:true , Public:false}, "ExportDefinitionNotOnThisComposablePart", $.String);

    $.Property({Static:true , Public:false}, "ExportFactory_TooManyGenericParameters", $.String);

    $.Property({Static:true , Public:false}, "ExportNotValidOnIndexers", $.String);

    $.Property({Static:true , Public:false}, "ImportDefinitionNotOnThisComposablePart", $.String);

    $.Property({Static:true , Public:false}, "ImportEngine_ComposeTookTooManyIterations", $.String);

    $.Property({Static:true , Public:false}, "ImportEngine_InvalidStateForRecomposition", $.String);

    $.Property({Static:true , Public:false}, "ImportEngine_PartCannotActivate", $.String);

    $.Property({Static:true , Public:false}, "ImportEngine_PartCannotGetExportedValue", $.String);

    $.Property({Static:true , Public:false}, "ImportEngine_PartCannotSetImport", $.String);

    $.Property({Static:true , Public:false}, "ImportEngine_PartCycle", $.String);

    $.Property({Static:true , Public:false}, "ImportEngine_PreventedByExistingImport", $.String);

    $.Property({Static:true , Public:false}, "ImportNotSetOnPart", $.String);

    $.Property({Static:true , Public:false}, "ImportNotValidOnIndexers", $.String);

    $.Property({Static:true , Public:false}, "InternalExceptionMessage", $.String);

    $.Property({Static:true , Public:false}, "InvalidMetadataValue", $.String);

    $.Property({Static:true , Public:false}, "InvalidMetadataView", $.String);

    $.Property({Static:true , Public:false}, "InvalidOperation_DefinitionCannotBeRecomposed", $.String);

    $.Property({Static:true , Public:false}, "InvalidOperation_GetExportedValueBeforePrereqImportSet", $.String);

    $.Property({Static:true , Public:false}, "InvalidSetterOnMetadataField", $.String);

    $.Property({Static:true , Public:false}, "LazyMemberInfo_AccessorsNull", $.String);

    $.Property({Static:true , Public:false}, "LazyMemberInfo_InvalidAccessorOnSimpleMember", $.String);

    $.Property({Static:true , Public:false}, "LazyMemberinfo_InvalidEventAccessors_AccessorType", $.String);

    $.Property({Static:true , Public:false}, "LazyMemberInfo_InvalidEventAccessors_Cardinality", $.String);

    $.Property({Static:true , Public:false}, "LazyMemberinfo_InvalidPropertyAccessors_AccessorType", $.String);

    $.Property({Static:true , Public:false}, "LazyMemberInfo_InvalidPropertyAccessors_Cardinality", $.String);

    $.Property({Static:true , Public:false}, "LazyMemberInfo_NoAccessors", $.String);

    $.Property({Static:true , Public:false}, "LazyServices_LazyResolvesToNull", $.String);

    $.Property({Static:true , Public:false}, "NotImplemented_NotOverriddenByDerived", $.String);

    $.Property({Static:true , Public:false}, "NotSupportedCatalogChanges", $.String);

    $.Property({Static:true , Public:false}, "NotSupportedInterfaceMetadataView", $.String);

    $.Property({Static:true , Public:false}, "ObjectAlreadyInitialized", $.String);

    $.Property({Static:true , Public:false}, "ObjectMustBeInitialized", $.String);

    $.Property({Static:true , Public:false}, "ReentrantCompose", $.String);

    $.Property({Static:true , Public:false}, "ReflectionContext_Requires_DefaultConstructor", $.String);

    $.Property({Static:true , Public:false}, "ReflectionContext_Type_Required", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_ExportNotReadable", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_ExportThrewException", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_ImportCollectionAddThrewException", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_ImportCollectionClearThrewException", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_ImportCollectionConstructionThrewException", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_ImportCollectionGetThrewException", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_ImportCollectionIsReadOnlyThrewException", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_ImportCollectionNotWritable", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_ImportCollectionNull", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_ImportManyOnParameterCanOnlyBeAssigned", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_ImportNotAssignableFromExport", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_ImportNotWritable", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_ImportThrewException", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_InvalidExportDefinition", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_InvalidMemberImportDefinition", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_PartConstructorMissing", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_PartConstructorThrewException", $.String);

    $.Property({Static:true , Public:false}, "ReflectionModel_PartOnImportsSatisfiedThrewException", $.String);

    $.Property({Static:true , Public:false}, "TypeCatalog_DisplayNameFormat", $.String);

    $.Property({Static:true , Public:false}, "TypeCatalog_Empty", $.String);

    $.Property({Static:true , Public:false}, "InvalidOperation_RevertAndCompleteActionsMustNotThrow", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Microsoft.Internal.Collections");
/* class Microsoft.Internal.Collections.CollectionServices */ 

(function CollectionServices$Members () {
  var $, $thisType;


















  JSIL.MakeStaticClass("Microsoft.Internal.Collections.CollectionServices", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "AsArray", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", ["!!0"]), [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "AsList", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.List`1", ["!!0"]), [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "ConcatAllowingNull", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "ConcatAllowingNull", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.ICollection`1", ["!!0"]), [$asm0F.TypeRef("System.Collections.Generic.ICollection`1", ["!!0"]), $asm0F.TypeRef("System.Collections.Generic.ICollection`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "Copy", 
      new JSIL.MethodSignature($asm12.TypeRef("System.Collections.Generic.Stack`1", ["!!0"]), [$asm12.TypeRef("System.Collections.Generic.Stack`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "FastAny", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "FastAppendToListAllowNulls", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.List`1", ["!!0"]), [$asm0F.TypeRef("System.Collections.Generic.List`1", ["!!0"]), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "FastAppendToListAllowNulls", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.List`1", ["!!0"]), [$asm0F.TypeRef("System.Collections.Generic.List`1", ["!!0"]), "!!0"], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "FastAppendToListAllowNulls", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.List`1", ["!!0"]), [
          $asm0F.TypeRef("System.Collections.Generic.List`1", ["!!0"]), "!!0", 
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])
        ], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "ForEach", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm0F.TypeRef("System.Action`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetCardinality", 
      new JSIL.MethodSignature($asm13.TypeRef("Microsoft.Internal.Collections.EnumerableCardinality"), [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetCollectionElementType", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Type"), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetCollectionWrapper", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.ICollection`1", [$.Object]), [$asm0F.TypeRef("System.Type"), $.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetEnumerableElementType", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Type"), [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsArrayEqual", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("System.Array", ["!!0"]), $jsilcore.TypeRef("System.Array", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsEnumerableOfT", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToReadOnlyCollection", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", ["!!0"]), [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "StringType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.String.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "IEnumerableType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Collections.IEnumerable.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "IEnumerableOfTType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Collections.Generic.IEnumerable$b1.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "ICollectionOfTType", $asm0F.TypeRef("System.Type"), function ($pi) {
        return $asm0F.System.Collections.Generic.ICollection$b1.__Type__;
      });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Internal.Collections.CollectionServices+CollectionOfObjectList */ 

(function CollectionOfObjectList$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Microsoft.Internal.Collections.CollectionServices+CollectionOfObjectList", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.IList"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clear", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Object]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Field({Static:false, Public:false, ReadOnly:true }, "_list", $asm0F.TypeRef("System.Collections.IList"));

    $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "IsReadOnly", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.ICollection`1", [$.Object]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), 
      /* 2 */ $asm0F.TypeRef("System.Collections.IEnumerable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Internal.Collections.CollectionServices+CollectionOfObject`1 */ 

(function CollectionOfObject$b1$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Microsoft.Internal.Collections.CollectionServices+CollectionOfObject`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clear", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Object]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Field({Static:false, Public:false, ReadOnly:true }, "_collectionOfT", $asm0F.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("T")]));

    $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "IsReadOnly", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.ICollection`1", [$.Object]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), 
      /* 2 */ $asm0F.TypeRef("System.Collections.IEnumerable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Microsoft.Internal.Collections.EnumerableCardinality */ 

JSIL.MakeEnum(
  {
    FullName: "Microsoft.Internal.Collections.EnumerableCardinality", 
    BaseType: $asm0F.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Zero: 0, 
    One: 1, 
    TwoOrMore: 2, 
  }
);

/* class Microsoft.Internal.Collections.WeakReferenceCollection`1 */ 

(function WeakReferenceCollection$b1$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Microsoft.Internal.Collections.WeakReferenceCollection`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:true }, "AliveItemsToList", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.List`1", [$.GenericParameter("T")]), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "CleanupDeadReferences", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Clear", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IndexOf", 
      new JSIL.MethodSignature($.Int32, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_items", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0F.TypeRef("System.WeakReference")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Internal.Collections.WeakReferenceCollection`1+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Microsoft.Internal.Collections.WeakReferenceCollection`1+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCleanupDeadReferences$gb__6_0", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.WeakReference")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $asm13.TypeRef("Microsoft.Internal.Collections.WeakReferenceCollection`1+<>c", [$.GenericParameter("T")]));

    $.Field({Static:true , Public:true }, "$l$g9__6_0", $asm0F.TypeRef("System.Predicate`1", [$asm0F.TypeRef("System.WeakReference")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

